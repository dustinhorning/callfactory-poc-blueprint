(function(w, d, s, l, i) {
    w[l] = w[l] || [];
    w[l].push({
        'gtm.start': new Date().getTime(),
        event: 'gtm.js'
    });
    var f = d.getElementsByTagName(s)[0];
    var j = d.createElement(s);
    var dl = l != 'dataLayer' ? '&l=' + l : '';
    j.type = 'text/javascript';
    j.src = '//www.googletagmanager.com/gtm.js?id=' + i + dl + '';
    j.async = true;
    f.parentNode.insertBefore(j, f);
})(window, document, 'script', 'dataLayer', 'GTM-W4VQ5CX');; /**/
/*!
 * jQuery JavaScript Library v1.7.2
 * http://jquery.com/
 *
 * Copyright 2011, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 * Copyright 2011, The Dojo Foundation
 * Released under the MIT, BSD, and GPL Licenses.
 *
 * Date: Wed Mar 21 12:46:34 2012 -0700
 */
(function(t, n) {
    var i = t.document,
        xt = t.navigator,
        wt = t.location,
        e = (function() {
            var e = function(t, n) {
                    return new e.fn.init(t, n, u)
                },
                v = t.jQuery,
                b = t.$,
                u, x = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,
                c = /\S/,
                d = /^\s+/,
                p = /\s+$/,
                w = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,
                T = /^[\],:{}\s]*$/,
                N = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
                C = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
                k = /(?:^|:|,)(?:\s*\[)+/g,
                E = /(webkit)[ \/]([\w.]+)/,
                S = /(opera)(?:.*version)?[ \/]([\w.]+)/,
                A = /(msie) ([\w.]+)/,
                L = /(mozilla)(?:.*? rv:([\w.]+))?/,
                D = /-([a-z]|[0-9])/ig,
                j = /^-ms-/,
                F = function(e, t) {
                    return (t + "").toUpperCase()
                },
                M = xt.userAgent,
                a, s, r, H = Object.prototype.toString,
                l = Object.prototype.hasOwnProperty,
                f = Array.prototype.push,
                o = Array.prototype.slice,
                h = String.prototype.trim,
                m = Array.prototype.indexOf,
                g = {};
            e.fn = e.prototype = {
                constructor: e,
                init: function(t, r, o) {
                    var a, l, s, f;
                    if (!t) {
                        return this
                    };
                    if (t.nodeType) {
                        this.context = this[0] = t;
                        this.length = 1;
                        return this
                    };
                    if (t === "body" && !r && i.body) {
                        this.context = i;
                        this[0] = i.body;
                        this.selector = t;
                        this.length = 1;
                        return this
                    };
                    if (typeof t === "string") {
                        if (t.charAt(0) === "<" && t.charAt(t.length - 1) === ">" && t.length >= 3) {
                            a = [null, t, null]
                        } else {
                            a = x.exec(t)
                        };
                        if (a && (a[1] || !r)) {
                            if (a[1]) {
                                r = r instanceof e ? r[0] : r;
                                f = (r ? r.ownerDocument || r : i);
                                s = w.exec(t);
                                if (s) {
                                    if (e.isPlainObject(r)) {
                                        t = [i.createElement(s[1])];
                                        e.fn.attr.call(t, r, !0)
                                    } else {
                                        t = [f.createElement(s[1])]
                                    }
                                } else {
                                    s = e.buildFragment([a[1]], [f]);
                                    t = (s.cacheable ? e.clone(s.fragment) : s.fragment).childNodes
                                };
                                return e.merge(this, t)
                            } else {
                                l = i.getElementById(a[2]);
                                if (l && l.parentNode) {
                                    if (l.id !== a[2]) {
                                        return o.find(t)
                                    };
                                    this.length = 1;
                                    this[0] = l
                                };
                                this.context = i;
                                this.selector = t;
                                return this
                            }
                        } else if (!r || r.jquery) {
                            return (r || o).find(t)
                        } else {
                            return this.constructor(r).find(t)
                        }
                    } else if (e.isFunction(t)) {
                        return o.ready(t)
                    };
                    if (t.selector !== n) {
                        this.selector = t.selector;
                        this.context = t.context
                    };
                    return e.makeArray(t, this)
                },
                selector: "",
                jquery: "1.7.2",
                length: 0,
                size: function() {
                    return this.length
                },
                toArray: function() {
                    return o.call(this, 0)
                },
                get: function(e) {
                    return e == null ? this.toArray() : (e < 0 ? this[this.length + e] : this[e])
                },
                pushStack: function(t, n, i) {
                    var r = this.constructor();
                    if (e.isArray(t)) {
                        f.apply(r, t)
                    } else {
                        e.merge(r, t)
                    };
                    r.prevObject = this;
                    r.context = this.context;
                    if (n === "find") {
                        r.selector = this.selector + (this.selector ? " " : "") + i
                    } else if (n) {
                        r.selector = this.selector + "." + n + "(" + i + ")"
                    };
                    return r
                },
                each: function(t, n) {
                    return e.each(this, t, n)
                },
                ready: function(t) {
                    e.bindReady();
                    s.add(t);
                    return this
                },
                eq: function(e) {
                    e = +e;
                    return e === -1 ? this.slice(e) : this.slice(e, e + 1)
                },
                first: function() {
                    return this.eq(0)
                },
                last: function() {
                    return this.eq(-1)
                },
                slice: function() {
                    return this.pushStack(o.apply(this, arguments), "slice", o.call(arguments).join(","))
                },
                map: function(t) {
                    return this.pushStack(e.map(this, function(e, n) {
                        return t.call(e, n, e)
                    }))
                },
                end: function() {
                    return this.prevObject || this.constructor(null)
                },
                push: f,
                sort: [].sort,
                splice: [].splice
            };
            e.fn.init.prototype = e.fn;
            e.extend = e.fn.extend = function() {
                var s, a, r, i, l, f, t = arguments[0] || {},
                    o = 1,
                    c = arguments.length,
                    u = !1;
                if (typeof t === "boolean") {
                    u = t;
                    t = arguments[1] || {};
                    o = 2
                };
                if (typeof t !== "object" && !e.isFunction(t)) {
                    t = {}
                };
                if (c === o) {
                    t = this;
                    --o
                };
                for (; o < c; o++) {
                    if ((s = arguments[o]) != null) {
                        for (a in s) {
                            r = t[a];
                            i = s[a];
                            if (t === i) {
                                continue
                            };
                            if (u && i && (e.isPlainObject(i) || (l = e.isArray(i)))) {
                                if (l) {
                                    l = !1;
                                    f = r && e.isArray(r) ? r : []
                                } else {
                                    f = r && e.isPlainObject(r) ? r : {}
                                };
                                t[a] = e.extend(u, f, i)
                            } else if (i !== n) {
                                t[a] = i
                            }
                        }
                    }
                };
                return t
            };
            e.extend({
                noConflict: function(n) {
                    if (t.$ === e) {
                        t.$ = b
                    };
                    if (n && t.jQuery === e) {
                        t.jQuery = v
                    };
                    return e
                },
                isReady: !1,
                readyWait: 1,
                holdReady: function(t) {
                    if (t) {
                        e.readyWait++
                    } else {
                        e.ready(!0)
                    }
                },
                ready: function(t) {
                    if ((t === !0 && !--e.readyWait) || (t !== !0 && !e.isReady)) {
                        if (!i.body) {
                            return setTimeout(e.ready, 1)
                        };
                        e.isReady = !0;
                        if (t !== !0 && --e.readyWait > 0) {
                            return
                        };
                        s.fireWith(i, [e]);
                        if (e.fn.trigger) {
                            e(i).trigger("ready").off("ready")
                        }
                    }
                },
                bindReady: function() {
                    if (s) {
                        return
                    };
                    s = e.Callbacks("once memory");
                    if (i.readyState === "complete") {
                        return setTimeout(e.ready, 1)
                    };
                    if (i.addEventListener) {
                        i.addEventListener("DOMContentLoaded", r, !1);
                        t.addEventListener("load", e.ready, !1)
                    } else if (i.attachEvent) {
                        i.attachEvent("onreadystatechange", r);
                        t.attachEvent("onload", e.ready);
                        var o = !1;
                        try {
                            o = t.frameElement == null
                        } catch (n) {};
                        if (i.documentElement.doScroll && o) {
                            y()
                        }
                    }
                },
                isFunction: function(t) {
                    return e.type(t) === "function"
                },
                isArray: Array.isArray || function(t) {
                    return e.type(t) === "array"
                },
                isWindow: function(e) {
                    return e != null && e == e.window
                },
                isNumeric: function(e) {
                    return !isNaN(parseFloat(e)) && isFinite(e)
                },
                type: function(e) {
                    return e == null ? String(e) : g[H.call(e)] || "object"
                },
                isPlainObject: function(t) {
                    if (!t || e.type(t) !== "object" || t.nodeType || e.isWindow(t)) {
                        return !1
                    };
                    try {
                        if (t.constructor && !l.call(t, "constructor") && !l.call(t.constructor.prototype, "isPrototypeOf")) {
                            return !1
                        }
                    } catch (i) {
                        return !1
                    };
                    var r;
                    for (r in t) {};
                    return r === n || l.call(t, r)
                },
                isEmptyObject: function(e) {
                    for (var t in e) {
                        return !1
                    };
                    return !0
                },
                error: function(e) {
                    throw new Error(e)
                },
                parseJSON: function(n) {
                    if (typeof n !== "string" || !n) {
                        return null
                    };
                    n = e.trim(n);
                    if (t.JSON && t.JSON.parse) {
                        return t.JSON.parse(n)
                    };
                    if (T.test(n.replace(N, "@").replace(C, "]").replace(k, ""))) {
                        return (new Function("return " + n))()
                    };
                    e.error("Invalid JSON: " + n)
                },
                parseXML: function(i) {
                    if (typeof i !== "string" || !i) {
                        return null
                    };
                    var o, a;
                    try {
                        if (t.DOMParser) {
                            a = new DOMParser();
                            o = a.parseFromString(i, "text/xml")
                        } else {
                            o = new ActiveXObject("Microsoft.XMLDOM");
                            o.async = "false";
                            o.loadXML(i)
                        }
                    } catch (r) {
                        o = n
                    };
                    if (!o || !o.documentElement || o.getElementsByTagName("parsererror").length) {
                        e.error("Invalid XML: " + i)
                    };
                    return o
                },
                noop: function() {},
                globalEval: function(e) {
                    if (e && c.test(e)) {
                        (t.execScript || function(e) {
                            t["eval"].call(t, e)
                        })(e)
                    }
                },
                camelCase: function(e) {
                    return e.replace(j, "ms-").replace(D, F)
                },
                nodeName: function(e, t) {
                    return e.nodeName && e.nodeName.toUpperCase() === t.toUpperCase()
                },
                each: function(t, i, r) {
                    var o, a = 0,
                        s = t.length,
                        l = s === n || e.isFunction(t);
                    if (r) {
                        if (l) {
                            for (o in t) {
                                if (i.apply(t[o], r) === !1) {
                                    break
                                }
                            }
                        } else {
                            for (; a < s;) {
                                if (i.apply(t[a++], r) === !1) {
                                    break
                                }
                            }
                        }
                    } else {
                        if (l) {
                            for (o in t) {
                                if (i.call(t[o], o, t[o]) === !1) {
                                    break
                                }
                            }
                        } else {
                            for (; a < s;) {
                                if (i.call(t[a], a, t[a++]) === !1) {
                                    break
                                }
                            }
                        }
                    };
                    return t
                },
                trim: h ? function(e) {
                    return e == null ? "" : h.call(e)
                } : function(e) {
                    return e == null ? "" : e.toString().replace(d, "").replace(p, "")
                },
                makeArray: function(t, n) {
                    var r = n || [];
                    if (t != null) {
                        var i = e.type(t);
                        if (t.length == null || i === "string" || i === "function" || i === "regexp" || e.isWindow(t)) {
                            f.call(r, t)
                        } else {
                            e.merge(r, t)
                        }
                    };
                    return r
                },
                inArray: function(e, t, n) {
                    var i;
                    if (t) {
                        if (m) {
                            return m.call(t, e, n)
                        };
                        i = t.length;
                        n = n ? n < 0 ? Math.max(0, i + n) : n : 0;
                        for (; n < i; n++) {
                            if (n in t && t[n] === e) {
                                return n
                            }
                        }
                    };
                    return -1
                },
                merge: function(e, t) {
                    var r = e.length,
                        i = 0;
                    if (typeof t.length === "number") {
                        for (var o = t.length; i < o; i++) {
                            e[r++] = t[i]
                        }
                    } else {
                        while (t[i] !== n) {
                            e[r++] = t[i++]
                        }
                    };
                    e.length = r;
                    return e
                },
                grep: function(e, t, n) {
                    var r = [],
                        o;
                    n = !!n;
                    for (var i = 0, a = e.length; i < a; i++) {
                        o = !!t(e[i], i);
                        if (n !== o) {
                            r.push(e[i])
                        }
                    };
                    return r
                },
                map: function(t, i, r) {
                    var o, f, a = [],
                        l = 0,
                        s = t.length,
                        u = t instanceof e || s !== n && typeof s === "number" && ((s > 0 && t[0] && t[s - 1]) || s === 0 || e.isArray(t));
                    if (u) {
                        for (; l < s; l++) {
                            o = i(t[l], l, r);
                            if (o != null) {
                                a[a.length] = o
                            }
                        }
                    } else {
                        for (f in t) {
                            o = i(t[f], f, r);
                            if (o != null) {
                                a[a.length] = o
                            }
                        }
                    };
                    return a.concat.apply([], a)
                },
                guid: 1,
                proxy: function(t, i) {
                    if (typeof i === "string") {
                        var s = t[i];
                        i = t;
                        t = s
                    };
                    if (!e.isFunction(t)) {
                        return n
                    };
                    var a = o.call(arguments, 2),
                        r = function() {
                            return t.apply(i, a.concat(o.call(arguments)))
                        };
                    r.guid = t.guid = t.guid || r.guid || e.guid++;
                    return r
                },
                access: function(t, i, r, o, a, l, u) {
                    var f, c = r == null,
                        s = 0,
                        d = t.length;
                    if (r && typeof r === "object") {
                        for (s in r) {
                            e.access(t, i, s, r[s], 1, l, o)
                        };
                        a = 1
                    } else if (o !== n) {
                        f = u === n && e.isFunction(o);
                        if (c) {
                            if (f) {
                                f = i;
                                i = function(t, n, i) {
                                    return f.call(e(t), i)
                                }
                            } else {
                                i.call(t, o);
                                i = null
                            }
                        };
                        if (i) {
                            for (; s < d; s++) {
                                i(t[s], r, f ? o.call(t[s], s, i(t[s], r)) : o, u)
                            }
                        };
                        a = 1
                    };
                    return a ? t : c ? i.call(t) : d ? i(t[0], r) : l
                },
                now: function() {
                    return (new Date()).getTime()
                },
                uaMatch: function(e) {
                    e = e.toLowerCase();
                    var t = E.exec(e) || S.exec(e) || A.exec(e) || e.indexOf("compatible") < 0 && L.exec(e) || [];
                    return {
                        browser: t[1] || "",
                        version: t[2] || "0"
                    }
                },
                sub: function() {
                    function t(e, n) {
                        return new t.fn.init(e, n)
                    };
                    e.extend(!0, t, this);
                    t.superclass = this;
                    t.fn = t.prototype = this();
                    t.fn.constructor = t;
                    t.sub = this.sub;
                    t.fn.init = function(i, r) {
                        if (r && r instanceof e && !(r instanceof t)) {
                            r = t(r)
                        };
                        return e.fn.init.call(this, i, r, n)
                    };
                    t.fn.init.prototype = t.fn;
                    var n = t(i);
                    return t
                },
                browser: {}
            });
            e.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(e, t) {
                g["[object " + t + "]"] = t.toLowerCase()
            });
            a = e.uaMatch(M);
            if (a.browser) {
                e.browser[a.browser] = !0;
                e.browser.version = a.version
            };
            if (e.browser.webkit) {
                e.browser.safari = !0
            };
            if (c.test("\xA0")) {
                d = /^[\s\xA0]+/;
                p = /[\s\xA0]+$/
            };
            u = e(i);
            if (i.addEventListener) {
                r = function() {
                    i.removeEventListener("DOMContentLoaded", r, !1);
                    e.ready()
                }
            } else if (i.attachEvent) {
                r = function() {
                    if (i.readyState === "complete") {
                        i.detachEvent("onreadystatechange", r);
                        e.ready()
                    }
                }
            };

            function y() {
                if (e.isReady) {
                    return
                };
                try {
                    i.documentElement.doScroll("left")
                } catch (t) {
                    setTimeout(y, 1);
                    return
                };
                e.ready()
            };
            return e
        })(),
        fe = {};

    function Tt(e) {
        var n = fe[e] = {},
            t, i;
        e = e.split(/\s+/);
        for (t = 0, i = e.length; t < i; t++) {
            n[e[t]] = !0
        };
        return n
    };
    e.Callbacks = function(t) {
        t = t ? (fe[t] || Tt(t)) : {};
        var i = [],
            o = [],
            r, c, l, u, f, a, d = function(n) {
                var o, l, r, a, f;
                for (o = 0, l = n.length; o < l; o++) {
                    r = n[o];
                    a = e.type(r);
                    if (a === "array") {
                        d(r)
                    } else if (a === "function") {
                        if (!t.unique || !s.has(r)) {
                            i.push(r)
                        }
                    }
                }
            },
            p = function(e, n) {
                n = n || [];
                r = !t.memory || [e, n];
                c = !0;
                l = !0;
                a = u || 0;
                u = 0;
                f = i.length;
                for (; i && a < f; a++) {
                    if (i[a].apply(e, n) === !1 && t.stopOnFalse) {
                        r = !0;
                        break
                    }
                };
                l = !1;
                if (i) {
                    if (!t.once) {
                        if (o && o.length) {
                            r = o.shift();
                            s.fireWith(r[0], r[1])
                        }
                    } else if (r === !0) {
                        s.disable()
                    } else {
                        i = []
                    }
                }
            },
            s = {
                add: function() {
                    if (i) {
                        var e = i.length;
                        d(arguments);
                        if (l) {
                            f = i.length
                        } else if (r && r !== !0) {
                            u = e;
                            p(r[0], r[1])
                        }
                    };
                    return this
                },
                remove: function() {
                    if (i) {
                        var r = arguments,
                            n = 0,
                            o = r.length;
                        for (; n < o; n++) {
                            for (var e = 0; e < i.length; e++) {
                                if (r[n] === i[e]) {
                                    if (l) {
                                        if (e <= f) {
                                            f--;
                                            if (e <= a) {
                                                a--
                                            }
                                        }
                                    };
                                    i.splice(e--, 1);
                                    if (t.unique) {
                                        break
                                    }
                                }
                            }
                        }
                    };
                    return this
                },
                has: function(e) {
                    if (i) {
                        var t = 0,
                            n = i.length;
                        for (; t < n; t++) {
                            if (e === i[t]) {
                                return !0
                            }
                        }
                    };
                    return !1
                },
                empty: function() {
                    i = [];
                    return this
                },
                disable: function() {
                    i = o = r = n;
                    return this
                },
                disabled: function() {
                    return !i
                },
                lock: function() {
                    o = n;
                    if (!r || r === !0) {
                        s.disable()
                    };
                    return this
                },
                locked: function() {
                    return !o
                },
                fireWith: function(e, n) {
                    if (o) {
                        if (l) {
                            if (!t.once) {
                                o.push([e, n])
                            }
                        } else if (!(t.once && r)) {
                            p(e, n)
                        }
                    };
                    return this
                },
                fire: function() {
                    s.fireWith(this, arguments);
                    return this
                },
                fired: function() {
                    return !!c
                }
            };
        return s
    };
    var M = [].slice;
    e.extend({
        Deferred: function(t) {
            var r = e.Callbacks("once memory"),
                o = e.Callbacks("once memory"),
                a = e.Callbacks("memory"),
                l = "pending",
                f = {
                    resolve: r,
                    reject: o,
                    notify: a
                },
                s = {
                    done: r.add,
                    fail: o.add,
                    progress: a.add,
                    state: function() {
                        return l
                    },
                    isResolved: r.fired,
                    isRejected: o.fired,
                    then: function(e, t, i) {
                        n.done(e).fail(t).progress(i);
                        return this
                    },
                    always: function() {
                        n.done.apply(n, arguments).fail.apply(n, arguments);
                        return this
                    },
                    pipe: function(t, i, r) {
                        return e.Deferred(function(o) {
                            e.each({
                                done: [t, "resolve"],
                                fail: [i, "reject"],
                                progress: [r, "notify"]
                            }, function(t, i) {
                                var a = i[0],
                                    s = i[1],
                                    r;
                                if (e.isFunction(a)) {
                                    n[t](function() {
                                        r = a.apply(this, arguments);
                                        if (r && e.isFunction(r.promise)) {
                                            r.promise().then(o.resolve, o.reject, o.notify)
                                        } else {
                                            o[s + "With"](this === n ? o : this, [r])
                                        }
                                    })
                                } else {
                                    n[t](o[s])
                                }
                            })
                        }).promise()
                    },
                    promise: function(e) {
                        if (e == null) {
                            e = s
                        } else {
                            for (var t in s) {
                                e[t] = s[t]
                            }
                        };
                        return e
                    }
                },
                n = s.promise({}),
                i;
            for (i in f) {
                n[i] = f[i].fire;
                n[i + "With"] = f[i].fireWith
            };
            n.done(function() {
                l = "resolved"
            }, o.disable, a.lock).fail(function() {
                l = "rejected"
            }, r.disable, a.lock);
            if (t) {
                t.call(n, n)
            };
            return n
        },
        when: function(t) {
            var i = M.call(arguments, 0),
                r = 0,
                o = i.length,
                s = new Array(o),
                a = o,
                c = o,
                n = o <= 1 && t && e.isFunction(t.promise) ? t : e.Deferred(),
                l = n.promise();

            function f(e) {
                return function(t) {
                    i[e] = arguments.length > 1 ? M.call(arguments, 0) : t;
                    if (!(--a)) {
                        n.resolveWith(n, i)
                    }
                }
            };

            function u(e) {
                return function(t) {
                    s[e] = arguments.length > 1 ? M.call(arguments, 0) : t;
                    n.notifyWith(l, s)
                }
            };
            if (o > 1) {
                for (; r < o; r++) {
                    if (i[r] && i[r].promise && e.isFunction(i[r].promise)) {
                        i[r].promise().then(f(r), n.reject, u(r))
                    } else {
                        --a
                    }
                };
                if (!a) {
                    n.resolveWith(n, i)
                }
            } else if (n !== t) {
                n.resolveWith(n, o ? [t] : [])
            };
            return l
        }
    });
    e.support = (function() {
        var o, h, l, c, d, a, s, u, g, p, m, f, n = i.createElement("div"),
            y = i.documentElement;
        n.setAttribute("className", "t");
        n.innerHTML = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
        h = n.getElementsByTagName("*");
        l = n.getElementsByTagName("a")[0];
        if (!h || !h.length || !l) {
            return {}
        };
        c = i.createElement("select");
        d = c.appendChild(i.createElement("option"));
        a = n.getElementsByTagName("input")[0];
        o = {
            leadingWhitespace: (n.firstChild.nodeType === 3),
            tbody: !n.getElementsByTagName("tbody").length,
            htmlSerialize: !!n.getElementsByTagName("link").length,
            style: /top/.test(l.getAttribute("style")),
            hrefNormalized: (l.getAttribute("href") === "/a"),
            opacity: /^0.55/.test(l.style.opacity),
            cssFloat: !!l.style.cssFloat,
            checkOn: (a.value === "on"),
            optSelected: d.selected,
            getSetAttribute: n.className !== "t",
            enctype: !!i.createElement("form").enctype,
            html5Clone: i.createElement("nav").cloneNode(!0).outerHTML !== "<:nav></:nav>",
            submitBubbles: !0,
            changeBubbles: !0,
            focusinBubbles: !1,
            deleteExpando: !0,
            noCloneEvent: !0,
            inlineBlockNeedsLayout: !1,
            shrinkWrapBlocks: !1,
            reliableMarginRight: !0,
            pixelMargin: !0
        };
        e.boxModel = o.boxModel = (i.compatMode === "CSS1Compat");
        a.checked = !0;
        o.noCloneChecked = a.cloneNode(!0).checked;
        c.disabled = !0;
        o.optDisabled = !d.disabled;
        try {
            delete n.test
        } catch (r) {
            o.deleteExpando = !1
        };
        if (!n.addEventListener && n.attachEvent && n.fireEvent) {
            n.attachEvent("onclick", function() {
                o.noCloneEvent = !1
            });
            n.cloneNode(!0).fireEvent("onclick")
        };
        a = i.createElement("input");
        a.value = "t";
        a.setAttribute("type", "radio");
        o.radioValue = a.value === "t";
        a.setAttribute("checked", "checked");
        a.setAttribute("name", "t");
        n.appendChild(a);
        s = i.createDocumentFragment();
        s.appendChild(n.lastChild);
        o.checkClone = s.cloneNode(!0).cloneNode(!0).lastChild.checked;
        o.appendChecked = a.checked;
        s.removeChild(a);
        s.appendChild(n);
        if (n.attachEvent) {
            for (m in {
                    submit: 1,
                    change: 1,
                    focusin: 1
                }) {
                p = "on" + m;
                f = (p in n);
                if (!f) {
                    n.setAttribute(p, "return;");
                    f = (typeof n[p] === "function")
                };
                o[m + "Bubbles"] = f
            }
        };
        s.removeChild(n);
        s = c = d = n = a = null;
        e(function() {
            var a, l, r, x, v, c, s, h, m, b, g, y, d, p = i.getElementsByTagName("body")[0];
            if (!p) {
                return
            };
            h = 1;
            d = "padding:0;margin:0;border:";
            g = "position:absolute;top:0;left:0;width:1px;height:1px;";
            y = d + "0;visibility:hidden;";
            m = "style='" + g + d + "5px solid #000;";
            b = "<div " + m + "display:block;'><div style='" + d + "0;display:block;overflow:hidden;'></div></div><table " + m + "' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";
            a = i.createElement("div");
            a.style.cssText = y + "width:0;height:0;position:static;top:0;margin-top:" + h + "px";
            p.insertBefore(a, p.firstChild);
            n = i.createElement("div");
            a.appendChild(n);
            n.innerHTML = "<table><tr><td style='" + d + "0;display:none'></td><td>t</td></tr></table>";
            u = n.getElementsByTagName("td");
            f = (u[0].offsetHeight === 0);
            u[0].style.display = "";
            u[1].style.display = "none";
            o.reliableHiddenOffsets = f && (u[0].offsetHeight === 0);
            if (t.getComputedStyle) {
                n.innerHTML = "";
                s = i.createElement("div");
                s.style.width = "0";
                s.style.marginRight = "0";
                n.style.width = "2px";
                n.appendChild(s);
                o.reliableMarginRight = (parseInt((t.getComputedStyle(s, null) || {
                    marginRight: 0
                }).marginRight, 10) || 0) === 0
            };
            if (typeof n.style.zoom !== "undefined") {
                n.innerHTML = "";
                n.style.width = n.style.padding = "1px";
                n.style.border = 0;
                n.style.overflow = "hidden";
                n.style.display = "inline";
                n.style.zoom = 1;
                o.inlineBlockNeedsLayout = (n.offsetWidth === 3);
                n.style.display = "block";
                n.style.overflow = "visible";
                n.innerHTML = "<div style='width:5px;'></div>";
                o.shrinkWrapBlocks = (n.offsetWidth !== 3)
            };
            n.style.cssText = g + y;
            n.innerHTML = b;
            l = n.firstChild;
            r = l.firstChild;
            v = l.nextSibling.firstChild.firstChild;
            c = {
                doesNotAddBorder: (r.offsetTop !== 5),
                doesAddBorderForTableAndCells: (v.offsetTop === 5)
            };
            r.style.position = "fixed";
            r.style.top = "20px";
            c.fixedPosition = (r.offsetTop === 20 || r.offsetTop === 15);
            r.style.position = r.style.top = "";
            l.style.overflow = "hidden";
            l.style.position = "relative";
            c.subtractsBorderForOverflowNotVisible = (r.offsetTop === -5);
            c.doesNotIncludeMarginInBodyOffset = (p.offsetTop !== h);
            if (t.getComputedStyle) {
                n.style.marginTop = "1%";
                o.pixelMargin = (t.getComputedStyle(n, null) || {
                    marginTop: 0
                }).marginTop !== "1%"
            };
            if (typeof a.style.zoom !== "undefined") {
                a.style.zoom = 1
            };
            p.removeChild(a);
            s = n = a = null;
            e.extend(o, c)
        });
        return o
    })();
    var vt = /^(?:\{.*\}|\[.*\])$/,
        bt = /([A-Z])/g;
    e.extend({
        cache: {},
        uuid: 0,
        expando: "jQuery" + (e.fn.jquery + Math.random()).replace(/\D/g, ""),
        noData: {
            "embed": !0,
            "object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
            "applet": !0
        },
        hasData: function(t) {
            t = t.nodeType ? e.cache[t[e.expando]] : t[e.expando];
            return !!t && !H(t)
        },
        data: function(t, i, r, o) {
            if (!e.acceptData(t)) {
                return
            };
            var d, s, f, u = e.expando,
                p = typeof i === "string",
                c = t.nodeType,
                l = c ? e.cache : t,
                a = c ? t[u] : t[u] && u,
                h = i === "events";
            if ((!a || !l[a] || (!h && !o && !l[a].data)) && p && r === n) {
                return
            };
            if (!a) {
                if (c) {
                    t[u] = a = ++e.uuid
                } else {
                    a = u
                }
            };
            if (!l[a]) {
                l[a] = {};
                if (!c) {
                    l[a].toJSON = e.noop
                }
            };
            if (typeof i === "object" || typeof i === "function") {
                if (o) {
                    l[a] = e.extend(l[a], i)
                } else {
                    l[a].data = e.extend(l[a].data, i)
                }
            };
            d = s = l[a];
            if (!o) {
                if (!s.data) {
                    s.data = {}
                };
                s = s.data
            };
            if (r !== n) {
                s[e.camelCase(i)] = r
            };
            if (h && !s[i]) {
                return d.events
            };
            if (p) {
                f = s[i];
                if (f == null) {
                    f = s[e.camelCase(i)]
                }
            } else {
                f = s
            };
            return f
        },
        removeData: function(t, n, i) {
            if (!e.acceptData(t)) {
                return
            };
            var a, l, u, s = e.expando,
                f = t.nodeType,
                r = f ? e.cache : t,
                o = f ? t[s] : s;
            if (!r[o]) {
                return
            };
            if (n) {
                a = i ? r[o] : r[o].data;
                if (a) {
                    if (!e.isArray(n)) {
                        if (n in a) {
                            n = [n]
                        } else {
                            n = e.camelCase(n);
                            if (n in a) {
                                n = [n]
                            } else {
                                n = n.split(" ")
                            }
                        }
                    };
                    for (l = 0, u = n.length; l < u; l++) {
                        delete a[n[l]]
                    };
                    if (!(i ? H : e.isEmptyObject)(a)) {
                        return
                    }
                }
            };
            if (!i) {
                delete r[o].data;
                if (!H(r[o])) {
                    return
                }
            };
            if (e.support.deleteExpando || !r.setInterval) {
                delete r[o]
            } else {
                r[o] = null
            };
            if (f) {
                if (e.support.deleteExpando) {
                    delete t[s]
                } else if (t.removeAttribute) {
                    t.removeAttribute(s)
                } else {
                    t[s] = null
                }
            }
        },
        _data: function(t, n, i) {
            return e.data(t, n, i, !0)
        },
        acceptData: function(t) {
            if (t.nodeName) {
                var n = e.noData[t.nodeName.toLowerCase()];
                if (n) {
                    return !(n === !0 || t.getAttribute("classid") !== n)
                }
            };
            return !0
        }
    });
    e.fn.extend({
        data: function(t, i) {
            var r, l, f, s, c, a = this[0],
                u = 0,
                o = null;
            if (t === n) {
                if (this.length) {
                    o = e.data(a);
                    if (a.nodeType === 1 && !e._data(a, "parsedAttrs")) {
                        f = a.attributes;
                        for (c = f.length; u < c; u++) {
                            s = f[u].name;
                            if (s.indexOf("data-") === 0) {
                                s = e.camelCase(s.substring(5));
                                ue(a, s, o[s])
                            }
                        };
                        e._data(a, "parsedAttrs", !0)
                    }
                };
                return o
            };
            if (typeof t === "object") {
                return this.each(function() {
                    e.data(this, t)
                })
            };
            r = t.split(".", 2);
            r[1] = r[1] ? "." + r[1] : "";
            l = r[1] + "!";
            return e.access(this, function(i) {
                if (i === n) {
                    o = this.triggerHandler("getData" + l, [r[0]]);
                    if (o === n && a) {
                        o = e.data(a, t);
                        o = ue(a, t, o)
                    };
                    return o === n && r[1] ? this.data(r[0]) : o
                };
                r[1] = i;
                this.each(function() {
                    var n = e(this);
                    n.triggerHandler("setData" + l, r);
                    e.data(this, t, i);
                    n.triggerHandler("changeData" + l, r)
                })
            }, null, i, arguments.length > 1, null, !1)
        },
        removeData: function(t) {
            return this.each(function() {
                e.removeData(this, t)
            })
        }
    });

    function ue(t, i, r) {
        if (r === n && t.nodeType === 1) {
            var a = "data-" + i.replace(bt, "-$1").toLowerCase();
            r = t.getAttribute(a);
            if (typeof r === "string") {
                try {
                    r = r === "true" ? !0 : r === "false" ? !1 : r === "null" ? null : e.isNumeric(r) ? +r : vt.test(r) ? e.parseJSON(r) : r
                } catch (o) {};
                e.data(t, i, r)
            } else {
                r = n
            }
        };
        return r
    };

    function H(t) {
        for (var n in t) {
            if (n === "data" && e.isEmptyObject(t[n])) {
                continue
            };
            if (n !== "toJSON") {
                return !1
            }
        };
        return !0
    };

    function ce(t, n, i) {
        var r = n + "defer",
            o = n + "queue",
            a = n + "mark",
            s = e._data(t, r);
        if (s && (i === "queue" || !e._data(t, o)) && (i === "mark" || !e._data(t, a))) {
            setTimeout(function() {
                if (!e._data(t, o) && !e._data(t, a)) {
                    e.removeData(t, r, !0);
                    s.fire()
                }
            }, 0)
        }
    };
    e.extend({
        _mark: function(t, n) {
            if (t) {
                n = (n || "fx") + "mark";
                e._data(t, n, (e._data(t, n) || 0) + 1)
            }
        },
        _unmark: function(t, n, i) {
            if (t !== !0) {
                i = n;
                n = t;
                t = !1
            };
            if (n) {
                i = i || "fx";
                var r = i + "mark",
                    o = t ? 0 : ((e._data(n, r) || 1) - 1);
                if (o) {
                    e._data(n, r, o)
                } else {
                    e.removeData(n, r, !0);
                    ce(n, i, "mark")
                }
            }
        },
        queue: function(t, n, i) {
            var r;
            if (t) {
                n = (n || "fx") + "queue";
                r = e._data(t, n);
                if (i) {
                    if (!r || e.isArray(i)) {
                        r = e._data(t, n, e.makeArray(i))
                    } else {
                        r.push(i)
                    }
                };
                return r || []
            }
        },
        dequeue: function(t, n) {
            n = n || "fx";
            var i = e.queue(t, n),
                r = i.shift(),
                o = {};
            if (r === "inprogress") {
                r = i.shift()
            };
            if (r) {
                if (n === "fx") {
                    i.unshift("inprogress")
                };
                e._data(t, n + ".run", o);
                r.call(t, function() {
                    e.dequeue(t, n)
                }, o)
            };
            if (!i.length) {
                e.removeData(t, n + "queue " + n + ".run", !0);
                ce(t, n, "queue")
            }
        }
    });
    e.fn.extend({
        queue: function(t, i) {
            var r = 2;
            if (typeof t !== "string") {
                i = t;
                t = "fx";
                r--
            };
            if (arguments.length < r) {
                return e.queue(this[0], t)
            };
            return i === n ? this : this.each(function() {
                var n = e.queue(this, t, i);
                if (t === "fx" && n[0] !== "inprogress") {
                    e.dequeue(this, t)
                }
            })
        },
        dequeue: function(t) {
            return this.each(function() {
                e.dequeue(this, t)
            })
        },
        delay: function(t, n) {
            t = e.fx ? e.fx.speeds[t] || t : t;
            n = n || "fx";
            return this.queue(n, function(e, n) {
                var i = setTimeout(e, t);
                n.stop = function() {
                    clearTimeout(i)
                }
            })
        },
        clearQueue: function(e) {
            return this.queue(e || "fx", [])
        },
        promise: function(t, i) {
            if (typeof t !== "string") {
                i = t;
                t = n
            };
            t = t || "fx";
            var a = e.Deferred(),
                r = this,
                o = r.length,
                s = 1,
                l = t + "defer",
                c = t + "queue",
                d = t + "mark",
                f;

            function u() {
                if (!(--s)) {
                    a.resolveWith(r, [r])
                }
            }
            while (o--) {
                if ((f = e.data(r[o], l, n, !0) || (e.data(r[o], c, n, !0) || e.data(r[o], d, n, !0)) && e.data(r[o], l, e.Callbacks("once memory"), !0))) {
                    s++;
                    f.add(u)
                }
            };
            u();
            return a.promise(i)
        }
    });
    var re = /[\n\t\r]/g,
        x = /\s+/,
        ht = /\r/g,
        mt = /^(?:button|input)$/i,
        gt = /^(?:button|input|object|select|textarea)$/i,
        yt = /^a(?:rea)?$/i,
        oe = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
        ae = e.support.getSetAttribute,
        s, se, le;
    e.fn.extend({
        attr: function(t, n) {
            return e.access(this, e.attr, t, n, arguments.length > 1)
        },
        removeAttr: function(t) {
            return this.each(function() {
                e.removeAttr(this, t)
            })
        },
        prop: function(t, n) {
            return e.access(this, e.prop, t, n, arguments.length > 1)
        },
        removeProp: function(t) {
            t = e.propFix[t] || t;
            return this.each(function() {
                try {
                    this[t] = n;
                    delete this[t]
                } catch (e) {}
            })
        },
        addClass: function(t) {
            var i, o, s, n, a, r, l;
            if (e.isFunction(t)) {
                return this.each(function(n) {
                    e(this).addClass(t.call(this, n, this.className))
                })
            };
            if (t && typeof t === "string") {
                i = t.split(x);
                for (o = 0, s = this.length; o < s; o++) {
                    n = this[o];
                    if (n.nodeType === 1) {
                        if (!n.className && i.length === 1) {
                            n.className = t
                        } else {
                            a = " " + n.className + " ";
                            for (r = 0, l = i.length; r < l; r++) {
                                if (!~a.indexOf(" " + i[r] + " ")) {
                                    a += i[r] + " "
                                }
                            };
                            n.className = e.trim(a)
                        }
                    }
                }
            };
            return this
        },
        removeClass: function(t) {
            var s, r, l, i, o, a, f;
            if (e.isFunction(t)) {
                return this.each(function(n) {
                    e(this).removeClass(t.call(this, n, this.className))
                })
            };
            if ((t && typeof t === "string") || t === n) {
                s = (t || "").split(x);
                for (r = 0, l = this.length; r < l; r++) {
                    i = this[r];
                    if (i.nodeType === 1 && i.className) {
                        if (t) {
                            o = (" " + i.className + " ").replace(re, " ");
                            for (a = 0, f = s.length; a < f; a++) {
                                o = o.replace(" " + s[a] + " ", " ")
                            };
                            i.className = e.trim(o)
                        } else {
                            i.className = ""
                        }
                    }
                }
            };
            return this
        },
        toggleClass: function(t, n) {
            var i = typeof t,
                r = typeof n === "boolean";
            if (e.isFunction(t)) {
                return this.each(function(i) {
                    e(this).toggleClass(t.call(this, i, this.className, n), n)
                })
            };
            return this.each(function() {
                if (i === "string") {
                    var o, l = 0,
                        s = e(this),
                        a = n,
                        f = t.split(x);
                    while ((o = f[l++])) {
                        a = r ? a : !s.hasClass(o);
                        s[a ? "addClass" : "removeClass"](o)
                    }
                } else if (i === "undefined" || i === "boolean") {
                    if (this.className) {
                        e._data(this, "__className__", this.className)
                    };
                    this.className = this.className || t === !1 ? "" : e._data(this, "__className__") || ""
                }
            })
        },
        hasClass: function(e) {
            var n = " " + e + " ",
                t = 0,
                i = this.length;
            for (; t < i; t++) {
                if (this[t].nodeType === 1 && (" " + this[t].className + " ").replace(re, " ").indexOf(n) > -1) {
                    return !0
                }
            };
            return !1
        },
        val: function(t) {
            var i, r, a, o = this[0];
            if (!arguments.length) {
                if (o) {
                    i = e.valHooks[o.type] || e.valHooks[o.nodeName.toLowerCase()];
                    if (i && "get" in i && (r = i.get(o, "value")) !== n) {
                        return r
                    };
                    r = o.value;
                    return typeof r === "string" ? r.replace(ht, "") : r == null ? "" : r
                };
                return
            };
            a = e.isFunction(t);
            return this.each(function(r) {
                var s = e(this),
                    o;
                if (this.nodeType !== 1) {
                    return
                };
                if (a) {
                    o = t.call(this, r, s.val())
                } else {
                    o = t
                };
                if (o == null) {
                    o = ""
                } else if (typeof o === "number") {
                    o += ""
                } else if (e.isArray(o)) {
                    o = e.map(o, function(e) {
                        return e == null ? "" : e + ""
                    })
                };
                i = e.valHooks[this.type] || e.valHooks[this.nodeName.toLowerCase()];
                if (!i || !("set" in i) || i.set(this, o, "value") === n) {
                    this.value = o
                }
            })
        }
    });
    e.extend({
        valHooks: {
            option: {
                get: function(e) {
                    var t = e.attributes.value;
                    return !t || t.specified ? e.value : e.text
                }
            },
            select: {
                get: function(t) {
                    var s, i, f, n, r = t.selectedIndex,
                        l = [],
                        o = t.options,
                        a = t.type === "select-one";
                    if (r < 0) {
                        return null
                    };
                    i = a ? r : 0;
                    f = a ? r + 1 : o.length;
                    for (; i < f; i++) {
                        n = o[i];
                        if (n.selected && (e.support.optDisabled ? !n.disabled : n.getAttribute("disabled") === null) && (!n.parentNode.disabled || !e.nodeName(n.parentNode, "optgroup"))) {
                            s = e(n).val();
                            if (a) {
                                return s
                            };
                            l.push(s)
                        }
                    };
                    if (a && !l.length && o.length) {
                        return e(o[r]).val()
                    };
                    return l
                },
                set: function(t, n) {
                    var i = e.makeArray(n);
                    e(t).find("option").each(function() {
                        this.selected = e.inArray(e(this).val(), i) >= 0
                    });
                    if (!i.length) {
                        t.selectedIndex = -1
                    };
                    return i
                }
            }
        },
        attrFn: {
            val: !0,
            css: !0,
            html: !0,
            text: !0,
            data: !0,
            width: !0,
            height: !0,
            offset: !0
        },
        attr: function(t, i, r, o) {
            var a, l, f, u = t.nodeType;
            if (!t || u === 3 || u === 8 || u === 2) {
                return
            };
            if (o && i in e.attrFn) {
                return e(t)[i](r)
            };
            if (typeof t.getAttribute === "undefined") {
                return e.prop(t, i, r)
            };
            f = u !== 1 || !e.isXMLDoc(t);
            if (f) {
                i = i.toLowerCase();
                l = e.attrHooks[i] || (oe.test(i) ? se : s)
            };
            if (r !== n) {
                if (r === null) {
                    e.removeAttr(t, i);
                    return
                } else if (l && "set" in l && f && (a = l.set(t, r, i)) !== n) {
                    return a
                } else {
                    t.setAttribute(i, "" + r);
                    return r
                }
            } else if (l && "get" in l && f && (a = l.get(t, i)) !== null) {
                return a
            } else {
                a = t.getAttribute(i);
                return a === null ? n : a
            }
        },
        removeAttr: function(t, n) {
            var r, o, i, l, a, s = 0;
            if (n && t.nodeType === 1) {
                o = n.toLowerCase().split(x);
                l = o.length;
                for (; s < l; s++) {
                    i = o[s];
                    if (i) {
                        r = e.propFix[i] || i;
                        a = oe.test(i);
                        if (!a) {
                            e.attr(t, i, "")
                        };
                        t.removeAttribute(ae ? i : r);
                        if (a && r in t) {
                            t[r] = !1
                        }
                    }
                }
            }
        },
        attrHooks: {
            type: {
                set: function(t, n) {
                    if (mt.test(t.nodeName) && t.parentNode) {
                        e.error("type property can't be changed")
                    } else if (!e.support.radioValue && n === "radio" && e.nodeName(t, "input")) {
                        var i = t.value;
                        t.setAttribute("type", n);
                        if (i) {
                            t.value = i
                        };
                        return n
                    }
                }
            },
            value: {
                get: function(t, n) {
                    if (s && e.nodeName(t, "button")) {
                        return s.get(t, n)
                    };
                    return n in t ? t.value : null
                },
                set: function(t, n, i) {
                    if (s && e.nodeName(t, "button")) {
                        return s.set(t, n, i)
                    };
                    t.value = n
                }
            }
        },
        propFix: {
            tabindex: "tabIndex",
            readonly: "readOnly",
            "for": "htmlFor",
            "class": "className",
            maxlength: "maxLength",
            cellspacing: "cellSpacing",
            cellpadding: "cellPadding",
            rowspan: "rowSpan",
            colspan: "colSpan",
            usemap: "useMap",
            frameborder: "frameBorder",
            contenteditable: "contentEditable"
        },
        prop: function(t, i, r) {
            var a, o, l, s = t.nodeType;
            if (!t || s === 3 || s === 8 || s === 2) {
                return
            };
            l = s !== 1 || !e.isXMLDoc(t);
            if (l) {
                i = e.propFix[i] || i;
                o = e.propHooks[i]
            };
            if (r !== n) {
                if (o && "set" in o && (a = o.set(t, r, i)) !== n) {
                    return a
                } else {
                    return (t[i] = r)
                }
            } else {
                if (o && "get" in o && (a = o.get(t, i)) !== null) {
                    return a
                } else {
                    return t[i]
                }
            }
        },
        propHooks: {
            tabIndex: {
                get: function(e) {
                    var t = e.getAttributeNode("tabindex");
                    return t && t.specified ? parseInt(t.value, 10) : gt.test(e.nodeName) || yt.test(e.nodeName) && e.href ? 0 : n
                }
            }
        }
    });
    e.attrHooks.tabindex = e.propHooks.tabIndex;
    se = {
        get: function(t, i) {
            var r, o = e.prop(t, i);
            return o === !0 || typeof o !== "boolean" && (r = t.getAttributeNode(i)) && r.nodeValue !== !1 ? i.toLowerCase() : n
        },
        set: function(t, n, i) {
            var r;
            if (n === !1) {
                e.removeAttr(t, i)
            } else {
                r = e.propFix[i] || i;
                if (r in t) {
                    t[r] = !0
                };
                t.setAttribute(i, i.toLowerCase())
            };
            return i
        }
    };
    if (!ae) {
        le = {
            name: !0,
            id: !0,
            coords: !0
        };
        s = e.valHooks.button = {
            get: function(e, t) {
                var i;
                i = e.getAttributeNode(t);
                return i && (le[t] ? i.nodeValue !== "" : i.specified) ? i.nodeValue : n
            },
            set: function(e, t, n) {
                var r = e.getAttributeNode(n);
                if (!r) {
                    r = i.createAttribute(n);
                    e.setAttributeNode(r)
                };
                return (r.nodeValue = t + "")
            }
        };
        e.attrHooks.tabindex.set = s.set;
        e.each(["width", "height"], function(t, n) {
            e.attrHooks[n] = e.extend(e.attrHooks[n], {
                set: function(e, t) {
                    if (t === "") {
                        e.setAttribute(n, "auto");
                        return t
                    }
                }
            })
        });
        e.attrHooks.contenteditable = {
            get: s.get,
            set: function(e, t, n) {
                if (t === "") {
                    t = "false"
                };
                s.set(e, t, n)
            }
        }
    };
    if (!e.support.hrefNormalized) {
        e.each(["href", "src", "width", "height"], function(t, i) {
            e.attrHooks[i] = e.extend(e.attrHooks[i], {
                get: function(e) {
                    var t = e.getAttribute(i, 2);
                    return t === null ? n : t
                }
            })
        })
    };
    if (!e.support.style) {
        e.attrHooks.style = {
            get: function(e) {
                return e.style.cssText.toLowerCase() || n
            },
            set: function(e, t) {
                return (e.style.cssText = "" + t)
            }
        }
    };
    if (!e.support.optSelected) {
        e.propHooks.selected = e.extend(e.propHooks.selected, {
            get: function(e) {
                var t = e.parentNode;
                if (t) {
                    t.selectedIndex;
                    if (t.parentNode) {
                        t.parentNode.selectedIndex
                    }
                };
                return null
            }
        })
    };
    if (!e.support.enctype) {
        e.propFix.enctype = "encoding"
    };
    if (!e.support.checkOn) {
        e.each(["radio", "checkbox"], function() {
            e.valHooks[this] = {
                get: function(e) {
                    return e.getAttribute("value") === null ? "on" : e.value
                }
            }
        })
    };
    e.each(["radio", "checkbox"], function() {
        e.valHooks[this] = e.extend(e.valHooks[this], {
            set: function(t, n) {
                if (e.isArray(n)) {
                    return (t.checked = e.inArray(e(t).val(), n) >= 0)
                }
            }
        })
    });
    var F = /^(?:textarea|input|select)$/i,
        te = /^([^\.]*)?(?:\.(.+))?$/,
        lt = /(?:^|\s)hover(\.\S+)?\b/,
        ft = /^key/,
        ut = /^(?:mouse|contextmenu)|click/,
        ne = /^(?:focusinfocus|focusoutblur)$/,
        ct = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,
        dt = function(e) {
            var t = ct.exec(e);
            if (t) {
                t[1] = (t[1] || "").toLowerCase();
                t[3] = t[3] && new RegExp("(?:^|\\s)" + t[3] + "(?:\\s|$)")
            };
            return t
        },
        pt = function(e, t) {
            var n = e.attributes || {};
            return ((!t[1] || e.nodeName.toLowerCase() === t[1]) && (!t[2] || (n.id || {}).value === t[2]) && (!t[3] || t[3].test((n["class"] || {}).value)))
        },
        ie = function(t) {
            return e.event.special.hover ? t : t.replace(lt, "mouseenter$1 mouseleave$1")
        };
    e.event = {
        add: function(t, i, r, o, a) {
            var d, l, p, h, m, s, y, c, g, v, u, f;
            if (t.nodeType === 3 || t.nodeType === 8 || !i || !r || !(d = e._data(t))) {
                return
            };
            if (r.handler) {
                g = r;
                r = g.handler;
                a = g.selector
            };
            if (!r.guid) {
                r.guid = e.guid++
            };
            p = d.events;
            if (!p) {
                d.events = p = {}
            };
            l = d.handle;
            if (!l) {
                d.handle = l = function(t) {
                    return typeof e !== "undefined" && (!t || e.event.triggered !== t.type) ? e.event.dispatch.apply(l.elem, arguments) : n
                };
                l.elem = t
            };
            i = e.trim(ie(i)).split(" ");
            for (h = 0; h < i.length; h++) {
                m = te.exec(i[h]) || [];
                s = m[1];
                y = (m[2] || "").split(".").sort();
                f = e.event.special[s] || {};
                s = (a ? f.delegateType : f.bindType) || s;
                f = e.event.special[s] || {};
                c = e.extend({
                    type: s,
                    origType: m[1],
                    data: o,
                    handler: r,
                    guid: r.guid,
                    selector: a,
                    quick: a && dt(a),
                    namespace: y.join(".")
                }, g);
                u = p[s];
                if (!u) {
                    u = p[s] = [];
                    u.delegateCount = 0;
                    if (!f.setup || f.setup.call(t, o, y, l) === !1) {
                        if (t.addEventListener) {
                            t.addEventListener(s, l, !1)
                        } else if (t.attachEvent) {
                            t.attachEvent("on" + s, l)
                        }
                    }
                };
                if (f.add) {
                    f.add.call(t, c);
                    if (!c.handler.guid) {
                        c.handler.guid = r.guid
                    }
                };
                if (a) {
                    u.splice(u.delegateCount++, 0, c)
                } else {
                    u.push(c)
                };
                e.event.global[s] = !0
            };
            t = null
        },
        global: {},
        remove: function(t, n, i, r, o) {
            var h = e.hasData(t) && e._data(t),
                c, m, a, y, f, v, d, p, u, g, s, l;
            if (!h || !(p = h.events)) {
                return
            };
            n = e.trim(ie(n || "")).split(" ");
            for (c = 0; c < n.length; c++) {
                m = te.exec(n[c]) || [];
                a = y = m[1];
                f = m[2];
                if (!a) {
                    for (a in p) {
                        e.event.remove(t, a + n[c], i, r, !0)
                    };
                    continue
                };
                u = e.event.special[a] || {};
                a = (r ? u.delegateType : u.bindType) || a;
                s = p[a] || [];
                v = s.length;
                f = f ? new RegExp("(^|\\.)" + f.split(".").sort().join("\\.(?:.*\\.)?") + "(\\.|$)") : null;
                for (d = 0; d < s.length; d++) {
                    l = s[d];
                    if ((o || y === l.origType) && (!i || i.guid === l.guid) && (!f || f.test(l.namespace)) && (!r || r === l.selector || r === "**" && l.selector)) {
                        s.splice(d--, 1);
                        if (l.selector) {
                            s.delegateCount--
                        };
                        if (u.remove) {
                            u.remove.call(t, l)
                        }
                    }
                };
                if (s.length === 0 && v !== s.length) {
                    if (!u.teardown || u.teardown.call(t, f) === !1) {
                        e.removeEvent(t, a, h.handle)
                    };
                    delete p[a]
                }
            };
            if (e.isEmptyObject(p)) {
                g = h.handle;
                if (g) {
                    g.elem = null
                };
                e.removeData(t, ["events", "handle"], !0)
            }
        },
        customEvent: {
            "getData": !0,
            "setData": !0,
            "changeData": !0
        },
        trigger: function(i, r, o, a) {
            if (o && (o.nodeType === 3 || o.nodeType === 8)) {
                return
            };
            var s = i.type || i,
                m = [],
                g, v, u, l, f, d, c, p, h, y;
            if (ne.test(s + e.event.triggered)) {
                return
            };
            if (s.indexOf("!") >= 0) {
                s = s.slice(0, -1);
                v = !0
            };
            if (s.indexOf(".") >= 0) {
                m = s.split(".");
                s = m.shift();
                m.sort()
            };
            if ((!o || e.event.customEvent[s]) && !e.event.global[s]) {
                return
            };
            i = typeof i === "object" ? i[e.expando] ? i : new e.Event(s, i) : new e.Event(s);
            i.type = s;
            i.isTrigger = !0;
            i.exclusive = v;
            i.namespace = m.join(".");
            i.namespace_re = i.namespace ? new RegExp("(^|\\.)" + m.join("\\.(?:.*\\.)?") + "(\\.|$)") : null;
            d = s.indexOf(":") < 0 ? "on" + s : "";
            if (!o) {
                g = e.cache;
                for (u in g) {
                    if (g[u].events && g[u].events[s]) {
                        e.event.trigger(i, r, g[u].handle.elem, !0)
                    }
                };
                return
            };
            i.result = n;
            if (!i.target) {
                i.target = o
            };
            r = r != null ? e.makeArray(r) : [];
            r.unshift(i);
            c = e.event.special[s] || {};
            if (c.trigger && c.trigger.apply(o, r) === !1) {
                return
            };
            h = [
                [o, c.bindType || s]
            ];
            if (!a && !c.noBubble && !e.isWindow(o)) {
                y = c.delegateType || s;
                l = ne.test(y + s) ? o : o.parentNode;
                f = null;
                for (; l; l = l.parentNode) {
                    h.push([l, y]);
                    f = l
                };
                if (f && f === o.ownerDocument) {
                    h.push([f.defaultView || f.parentWindow || t, y])
                }
            };
            for (u = 0; u < h.length && !i.isPropagationStopped(); u++) {
                l = h[u][0];
                i.type = h[u][1];
                p = (e._data(l, "events") || {})[i.type] && e._data(l, "handle");
                if (p) {
                    p.apply(l, r)
                };
                p = d && l[d];
                if (p && e.acceptData(l) && p.apply(l, r) === !1) {
                    i.preventDefault()
                }
            };
            i.type = s;
            if (!a && !i.isDefaultPrevented()) {
                if ((!c._default || c._default.apply(o.ownerDocument, r) === !1) && !(s === "click" && e.nodeName(o, "a")) && e.acceptData(o)) {
                    if (d && o[s] && ((s !== "focus" && s !== "blur") || i.target.offsetWidth !== 0) && !e.isWindow(o)) {
                        f = o[d];
                        if (f) {
                            o[d] = null
                        };
                        e.event.triggered = s;
                        o[s]();
                        e.event.triggered = n;
                        if (f) {
                            o[d] = f
                        }
                    }
                }
            };
            return i.result
        },
        dispatch: function(i) {
            i = e.event.fix(i || t.event);
            var f = ((e._data(this, "events") || {})[i.type] || []),
                u = f.delegateCount,
                v = [].slice.call(arguments, 0),
                b = !i.exclusive && !i.namespace,
                c = e.event.special[i.type] || {},
                d = [],
                o, p, a, h, m, g, s, y, r, l, x;
            v[0] = i;
            i.delegateTarget = this;
            if (c.preDispatch && c.preDispatch.call(this, i) === !1) {
                return
            };
            if (u && !(i.button && i.type === "click")) {
                h = e(this);
                h.context = this.ownerDocument || this;
                for (a = i.target; a != this; a = a.parentNode || this) {
                    if (a.disabled !== !0) {
                        g = {};
                        y = [];
                        h[0] = a;
                        for (o = 0; o < u; o++) {
                            r = f[o];
                            l = r.selector;
                            if (g[l] === n) {
                                g[l] = (r.quick ? pt(a, r.quick) : h.is(l))
                            };
                            if (g[l]) {
                                y.push(r)
                            }
                        };
                        if (y.length) {
                            d.push({
                                elem: a,
                                matches: y
                            })
                        }
                    }
                }
            };
            if (f.length > u) {
                d.push({
                    elem: this,
                    matches: f.slice(u)
                })
            };
            for (o = 0; o < d.length && !i.isPropagationStopped(); o++) {
                s = d[o];
                i.currentTarget = s.elem;
                for (p = 0; p < s.matches.length && !i.isImmediatePropagationStopped(); p++) {
                    r = s.matches[p];
                    if (b || (!i.namespace && !r.namespace) || i.namespace_re && i.namespace_re.test(r.namespace)) {
                        i.data = r.data;
                        i.handleObj = r;
                        m = ((e.event.special[r.origType] || {}).handle || r.handler).apply(s.elem, v);
                        if (m !== n) {
                            i.result = m;
                            if (m === !1) {
                                i.preventDefault();
                                i.stopPropagation()
                            }
                        }
                    }
                }
            };
            if (c.postDispatch) {
                c.postDispatch.call(this, i)
            };
            return i.result
        },
        props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function(e, t) {
                if (e.which == null) {
                    e.which = t.charCode != null ? t.charCode : t.keyCode
                };
                return e
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(e, t) {
                var s, r, o, a = t.button,
                    l = t.fromElement;
                if (e.pageX == null && t.clientX != null) {
                    s = e.target.ownerDocument || i;
                    r = s.documentElement;
                    o = s.body;
                    e.pageX = t.clientX + (r && r.scrollLeft || o && o.scrollLeft || 0) - (r && r.clientLeft || o && o.clientLeft || 0);
                    e.pageY = t.clientY + (r && r.scrollTop || o && o.scrollTop || 0) - (r && r.clientTop || o && o.clientTop || 0)
                };
                if (!e.relatedTarget && l) {
                    e.relatedTarget = l === e.target ? t.toElement : l
                };
                if (!e.which && a !== n) {
                    e.which = (a & 1 ? 1 : (a & 2 ? 3 : (a & 4 ? 2 : 0)))
                };
                return e
            }
        },
        fix: function(t) {
            if (t[e.expando]) {
                return t
            };
            var a, s, r = t,
                o = e.event.fixHooks[t.type] || {},
                l = o.props ? this.props.concat(o.props) : this.props;
            t = e.Event(r);
            for (a = l.length; a;) {
                s = l[--a];
                t[s] = r[s]
            };
            if (!t.target) {
                t.target = r.srcElement || i
            };
            if (t.target.nodeType === 3) {
                t.target = t.target.parentNode
            };
            if (t.metaKey === n) {
                t.metaKey = t.ctrlKey
            };
            return o.filter ? o.filter(t, r) : t
        },
        special: {
            ready: {
                setup: e.bindReady
            },
            load: {
                noBubble: !0
            },
            focus: {
                delegateType: "focusin"
            },
            blur: {
                delegateType: "focusout"
            },
            beforeunload: {
                setup: function(t, n, i) {
                    if (e.isWindow(this)) {
                        this.onbeforeunload = i
                    }
                },
                teardown: function(e, t) {
                    if (this.onbeforeunload === t) {
                        this.onbeforeunload = null
                    }
                }
            }
        },
        simulate: function(t, n, i, r) {
            var o = e.extend(new e.Event(), i, {
                type: t,
                isSimulated: !0,
                originalEvent: {}
            });
            if (r) {
                e.event.trigger(o, null, n)
            } else {
                e.event.dispatch.call(n, o)
            };
            if (o.isDefaultPrevented()) {
                i.preventDefault()
            }
        }
    };
    e.event.handle = e.event.dispatch;
    e.removeEvent = i.removeEventListener ? function(e, t, n) {
        if (e.removeEventListener) {
            e.removeEventListener(t, n, !1)
        }
    } : function(e, t, n) {
        if (e.detachEvent) {
            e.detachEvent("on" + t, n)
        }
    };
    e.Event = function(t, n) {
        if (!(this instanceof e.Event)) {
            return new e.Event(t, n)
        };
        if (t && t.type) {
            this.originalEvent = t;
            this.type = t.type;
            this.isDefaultPrevented = (t.defaultPrevented || t.returnValue === !1 || t.getPreventDefault && t.getPreventDefault()) ? w : h
        } else {
            this.type = t
        };
        if (n) {
            e.extend(this, n)
        };
        this.timeStamp = t && t.timeStamp || e.now();
        this[e.expando] = !0
    };

    function h() {
        return !1
    };

    function w() {
        return !0
    };
    e.Event.prototype = {
        preventDefault: function() {
            this.isDefaultPrevented = w;
            var e = this.originalEvent;
            if (!e) {
                return
            };
            if (e.preventDefault) {
                e.preventDefault()
            } else {
                e.returnValue = !1
            }
        },
        stopPropagation: function() {
            this.isPropagationStopped = w;
            var e = this.originalEvent;
            if (!e) {
                return
            };
            if (e.stopPropagation) {
                e.stopPropagation()
            };
            e.cancelBubble = !0
        },
        stopImmediatePropagation: function() {
            this.isImmediatePropagationStopped = w;
            this.stopPropagation()
        },
        isDefaultPrevented: h,
        isPropagationStopped: h,
        isImmediatePropagationStopped: h
    };
    e.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }, function(t, n) {
        e.event.special[t] = {
            delegateType: n,
            bindType: n,
            handle: function(t) {
                var o = this,
                    i = t.relatedTarget,
                    r = t.handleObj,
                    s = r.selector,
                    a;
                if (!i || (i !== o && !e.contains(o, i))) {
                    t.type = r.origType;
                    a = r.handler.apply(this, arguments);
                    t.type = n
                };
                return a
            }
        }
    });
    if (!e.support.submitBubbles) {
        e.event.special.submit = {
            setup: function() {
                if (e.nodeName(this, "form")) {
                    return !1
                };
                e.event.add(this, "click._submit keypress._submit", function(t) {
                    var r = t.target,
                        i = e.nodeName(r, "input") || e.nodeName(r, "button") ? r.form : n;
                    if (i && !i._submit_attached) {
                        e.event.add(i, "submit._submit", function(e) {
                            e._submit_bubble = !0
                        });
                        i._submit_attached = !0
                    }
                })
            },
            postDispatch: function(t) {
                if (t._submit_bubble) {
                    delete t._submit_bubble;
                    if (this.parentNode && !t.isTrigger) {
                        e.event.simulate("submit", this.parentNode, t, !0)
                    }
                }
            },
            teardown: function() {
                if (e.nodeName(this, "form")) {
                    return !1
                };
                e.event.remove(this, "._submit")
            }
        }
    };
    if (!e.support.changeBubbles) {
        e.event.special.change = {
            setup: function() {
                if (F.test(this.nodeName)) {
                    if (this.type === "checkbox" || this.type === "radio") {
                        e.event.add(this, "propertychange._change", function(e) {
                            if (e.originalEvent.propertyName === "checked") {
                                this._just_changed = !0
                            }
                        });
                        e.event.add(this, "click._change", function(t) {
                            if (this._just_changed && !t.isTrigger) {
                                this._just_changed = !1;
                                e.event.simulate("change", this, t, !0)
                            }
                        })
                    };
                    return !1
                };
                e.event.add(this, "beforeactivate._change", function(t) {
                    var n = t.target;
                    if (F.test(n.nodeName) && !n._change_attached) {
                        e.event.add(n, "change._change", function(t) {
                            if (this.parentNode && !t.isSimulated && !t.isTrigger) {
                                e.event.simulate("change", this.parentNode, t, !0)
                            }
                        });
                        n._change_attached = !0
                    }
                })
            },
            handle: function(e) {
                var t = e.target;
                if (this !== t || e.isSimulated || e.isTrigger || (t.type !== "radio" && t.type !== "checkbox")) {
                    return e.handleObj.handler.apply(this, arguments)
                }
            },
            teardown: function() {
                e.event.remove(this, "._change");
                return F.test(this.nodeName)
            }
        }
    };
    if (!e.support.focusinBubbles) {
        e.each({
            focus: "focusin",
            blur: "focusout"
        }, function(t, n) {
            var r = 0,
                o = function(t) {
                    e.event.simulate(n, t.target, e.event.fix(t), !0)
                };
            e.event.special[n] = {
                setup: function() {
                    if (r++ === 0) {
                        i.addEventListener(t, o, !0)
                    }
                },
                teardown: function() {
                    if (--r === 0) {
                        i.removeEventListener(t, o, !0)
                    }
                }
            }
        })
    };
    e.fn.extend({
        on: function(t, i, r, o, a) {
            var s, l;
            if (typeof t === "object") {
                if (typeof i !== "string") {
                    r = r || i;
                    i = n
                };
                for (l in t) {
                    this.on(l, i, r, t[l], a)
                };
                return this
            };
            if (r == null && o == null) {
                o = i;
                r = i = n
            } else if (o == null) {
                if (typeof i === "string") {
                    o = r;
                    r = n
                } else {
                    o = r;
                    r = i;
                    i = n
                }
            };
            if (o === !1) {
                o = h
            } else if (!o) {
                return this
            };
            if (a === 1) {
                s = o;
                o = function(t) {
                    e().off(t);
                    return s.apply(this, arguments)
                };
                o.guid = s.guid || (s.guid = e.guid++)
            };
            return this.each(function() {
                e.event.add(this, t, o, r, i)
            })
        },
        one: function(e, t, n, i) {
            return this.on(e, t, n, i, 1)
        },
        off: function(t, i, r) {
            if (t && t.preventDefault && t.handleObj) {
                var o = t.handleObj;
                e(t.delegateTarget).off(o.namespace ? o.origType + "." + o.namespace : o.origType, o.selector, o.handler);
                return this
            };
            if (typeof t === "object") {
                for (var a in t) {
                    this.off(a, i, t[a])
                };
                return this
            };
            if (i === !1 || typeof i === "function") {
                r = i;
                i = n
            };
            if (r === !1) {
                r = h
            };
            return this.each(function() {
                e.event.remove(this, t, r, i)
            })
        },
        bind: function(e, t, n) {
            return this.on(e, null, t, n)
        },
        unbind: function(e, t) {
            return this.off(e, null, t)
        },
        live: function(t, n, i) {
            e(this.context).on(t, this.selector, n, i);
            return this
        },
        die: function(t, n) {
            e(this.context).off(t, this.selector || "**", n);
            return this
        },
        delegate: function(e, t, n, i) {
            return this.on(t, e, n, i)
        },
        undelegate: function(e, t, n) {
            return arguments.length == 1 ? this.off(e, "**") : this.off(t, e, n)
        },
        trigger: function(t, n) {
            return this.each(function() {
                e.event.trigger(t, n, this)
            })
        },
        triggerHandler: function(t, n) {
            if (this[0]) {
                return e.event.trigger(t, n, this[0], !0)
            }
        },
        toggle: function(t) {
            var n = arguments,
                r = t.guid || e.guid++,
                i = 0,
                o = function(r) {
                    var o = (e._data(this, "lastToggle" + t.guid) || 0) % i;
                    e._data(this, "lastToggle" + t.guid, o + 1);
                    r.preventDefault();
                    return n[o].apply(this, arguments) || !1
                };
            o.guid = r;
            while (i < n.length) {
                n[i++].guid = r
            };
            return this.click(o)
        },
        hover: function(e, t) {
            return this.mouseenter(e).mouseleave(t || e)
        }
    });
    e.each(("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu").split(" "), function(t, n) {
        e.fn[n] = function(e, t) {
            if (t == null) {
                t = e;
                e = null
            };
            return arguments.length > 0 ? this.on(n, null, e, t) : this.trigger(n)
        };
        if (e.attrFn) {
            e.attrFn[n] = !0
        };
        if (ft.test(n)) {
            e.event.fixHooks[n] = e.event.keyHooks
        };
        if (ut.test(n)) {
            e.event.fixHooks[n] = e.event.mouseHooks
        }
    });
    /*!
     * Sizzle CSS Selector Engine
     *  Copyright 2011, The Dojo Foundation
     *  Released under the MIT, BSD, and GPL Licenses.
     *  More information: http://sizzlejs.com/
     */
    (function() {
        var m = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
            s = "sizcache" + (Math.random() + "").replace(".", ""),
            g = 0,
            b = Object.prototype.toString,
            d = !1,
            x = !0,
            l = /\\/g,
            C = /\r\n/g,
            p = /\W/;
        [0, 0].sort(function() {
            x = !1;
            return 0
        });
        var t = function(e, n, o, s) {
            o = o || [];
            n = n || i;
            var C = n;
            if (n.nodeType !== 1 && n.nodeType !== 9) {
                return []
            };
            if (!e || typeof e !== "string") {
                return o
            };
            var p, d, f, w, c, h, g, u, T = !0,
                x = t.isXML(n),
                l = [],
                N = e;
            do {
                m.exec("");
                p = m.exec(N);
                if (p) {
                    N = p[3];
                    l.push(p[1]);
                    if (p[2]) {
                        w = p[3];
                        break
                    }
                }
            }
            while (p);
            if (l.length > 1 && v.exec(e)) {
                if (l.length === 2 && r.relative[l[0]]) {
                    d = y(l[0] + l[1], n, s)
                } else {
                    d = r.relative[l[0]] ? [n] : t(l.shift(), n);
                    while (l.length) {
                        e = l.shift();
                        if (r.relative[e]) {
                            e += l.shift()
                        };
                        d = y(e, d, s)
                    }
                }
            } else {
                if (!s && l.length > 1 && n.nodeType === 9 && !x && r.match.ID.test(l[0]) && !r.match.ID.test(l[l.length - 1])) {
                    c = t.find(l.shift(), n, x);
                    n = c.expr ? t.filter(c.expr, c.set)[0] : c.set[0]
                };
                if (n) {
                    c = s ? {
                        expr: l.pop(),
                        set: a(s)
                    } : t.find(l.pop(), l.length === 1 && (l[0] === "~" || l[0] === "+") && n.parentNode ? n.parentNode : n, x);
                    d = c.expr ? t.filter(c.expr, c.set) : c.set;
                    if (l.length > 0) {
                        f = a(d)
                    } else {
                        T = !1
                    }
                    while (l.length) {
                        h = l.pop();
                        g = h;
                        if (!r.relative[h]) {
                            h = ""
                        } else {
                            g = l.pop()
                        };
                        if (g == null) {
                            g = n
                        };
                        r.relative[h](f, g, x)
                    }
                } else {
                    f = l = []
                }
            };
            if (!f) {
                f = d
            };
            if (!f) {
                t.error(h || e)
            };
            if (b.call(f) === "[object Array]") {
                if (!T) {
                    o.push.apply(o, f)
                } else if (n && n.nodeType === 1) {
                    for (u = 0; f[u] != null; u++) {
                        if (f[u] && (f[u] === !0 || f[u].nodeType === 1 && t.contains(n, f[u]))) {
                            o.push(d[u])
                        }
                    }
                } else {
                    for (u = 0; f[u] != null; u++) {
                        if (f[u] && f[u].nodeType === 1) {
                            o.push(d[u])
                        }
                    }
                }
            } else {
                a(f, o)
            };
            if (w) {
                t(w, C, o, s);
                t.uniqueSort(o)
            };
            return o
        };
        t.uniqueSort = function(e) {
            if (u) {
                d = x;
                e.sort(u);
                if (d) {
                    for (var t = 1; t < e.length; t++) {
                        if (e[t] === e[t - 1]) {
                            e.splice(t--, 1)
                        }
                    }
                }
            };
            return e
        };
        t.matches = function(e, n) {
            return t(e, null, null, n)
        };
        t.matchesSelector = function(e, n) {
            return t(n, null, null, [e]).length > 0
        };
        t.find = function(e, t, n) {
            var o, a, u, i, s, f;
            if (!e) {
                return []
            };
            for (a = 0, u = r.order.length; a < u; a++) {
                s = r.order[a];
                if ((i = r.leftMatch[s].exec(e))) {
                    f = i[1];
                    i.splice(1, 1);
                    if (f.substr(f.length - 1) !== "\\") {
                        i[1] = (i[1] || "").replace(l, "");
                        o = r.find[s](i, t, n);
                        if (o != null) {
                            e = e.replace(r.match[s], "");
                            break
                        }
                    }
                }
            };
            if (!o) {
                o = typeof t.getElementsByTagName !== "undefined" ? t.getElementsByTagName("*") : []
            };
            return {
                set: o,
                expr: e
            }
        };
        t.filter = function(e, i, o, a) {
            var s, f, u, c, h, y, m, d, g, v = e,
                p = [],
                l = i,
                b = i && i[0] && t.isXML(i[0]);
            while (e && i.length) {
                for (u in r.filter) {
                    if ((s = r.leftMatch[u].exec(e)) != null && s[2]) {
                        y = r.filter[u];
                        m = s[1];
                        f = !1;
                        s.splice(1, 1);
                        if (m.substr(m.length - 1) === "\\") {
                            continue
                        };
                        if (l === p) {
                            p = []
                        };
                        if (r.preFilter[u]) {
                            s = r.preFilter[u](s, l, o, p, a, b);
                            if (!s) {
                                f = c = !0
                            } else if (s === !0) {
                                continue
                            }
                        };
                        if (s) {
                            for (d = 0;
                                (h = l[d]) != null; d++) {
                                if (h) {
                                    c = y(h, s, d, l);
                                    g = a ^ c;
                                    if (o && c != null) {
                                        if (g) {
                                            f = !0
                                        } else {
                                            l[d] = !1
                                        }
                                    } else if (g) {
                                        p.push(h);
                                        f = !0
                                    }
                                }
                            }
                        };
                        if (c !== n) {
                            if (!o) {
                                l = p
                            };
                            e = e.replace(r.match[u], "");
                            if (!f) {
                                return []
                            };
                            break
                        }
                    }
                };
                if (e === v) {
                    if (f == null) {
                        t.error(e)
                    } else {
                        break
                    }
                };
                v = e
            };
            return l
        };
        t.error = function(e) {
            throw new Error("Syntax error, unrecognized expression: " + e)
        };
        var h = t.getText = function(e) {
                var n, i, t = e.nodeType,
                    r = "";
                if (t) {
                    if (t === 1 || t === 9 || t === 11) {
                        if (typeof e.textContent === "string") {
                            return e.textContent
                        } else if (typeof e.innerText === "string") {
                            return e.innerText.replace(C, "")
                        } else {
                            for (e = e.firstChild; e; e = e.nextSibling) {
                                r += h(e)
                            }
                        }
                    } else if (t === 3 || t === 4) {
                        return e.nodeValue
                    }
                } else {
                    for (n = 0;
                        (i = e[n]); n++) {
                        if (i.nodeType !== 8) {
                            r += h(i)
                        }
                    }
                };
                return r
            },
            r = t.selectors = {
                order: ["ID", "NAME", "TAG"],
                match: {
                    ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
                    CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
                    NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
                    ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,
                    TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
                    CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,
                    POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
                    PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
                },
                leftMatch: {},
                attrMap: {
                    "class": "className",
                    "for": "htmlFor"
                },
                attrHandle: {
                    href: function(e) {
                        return e.getAttribute("href")
                    },
                    type: function(e) {
                        return e.getAttribute("type")
                    }
                },
                relative: {
                    "+": function(e, n) {
                        var o = typeof n === "string",
                            a = o && !p.test(n),
                            s = o && !a;
                        if (a) {
                            n = n.toLowerCase()
                        };
                        for (var r = 0, l = e.length, i; r < l; r++) {
                            if ((i = e[r])) {
                                while ((i = i.previousSibling) && i.nodeType !== 1) {};
                                e[r] = s || i && i.nodeName.toLowerCase() === n ? i || !1 : i === n
                            }
                        };
                        if (s) {
                            t.filter(n, e, !0)
                        }
                    },
                    ">": function(e, n) {
                        var r, o = typeof n === "string",
                            i = 0,
                            s = e.length;
                        if (o && !p.test(n)) {
                            n = n.toLowerCase();
                            for (; i < s; i++) {
                                r = e[i];
                                if (r) {
                                    var a = r.parentNode;
                                    e[i] = a.nodeName.toLowerCase() === n ? a : !1
                                }
                            }
                        } else {
                            for (; i < s; i++) {
                                r = e[i];
                                if (r) {
                                    e[i] = o ? r.parentNode : r.parentNode === n
                                }
                            };
                            if (o) {
                                t.filter(n, e, !0)
                            }
                        }
                    },
                    "": function(e, t, n) {
                        var i, o = g++,
                            r = T;
                        if (typeof t === "string" && !p.test(t)) {
                            t = t.toLowerCase();
                            i = t;
                            r = w
                        };
                        r("parentNode", t, o, e, i, n)
                    },
                    "~": function(e, t, n) {
                        var i, o = g++,
                            r = T;
                        if (typeof t === "string" && !p.test(t)) {
                            t = t.toLowerCase();
                            i = t;
                            r = w
                        };
                        r("previousSibling", t, o, e, i, n)
                    }
                },
                find: {
                    ID: function(e, t, n) {
                        if (typeof t.getElementById !== "undefined" && !n) {
                            var i = t.getElementById(e[1]);
                            return i && i.parentNode ? [i] : []
                        }
                    },
                    NAME: function(e, t) {
                        if (typeof t.getElementsByName !== "undefined") {
                            var i = [],
                                r = t.getElementsByName(e[1]);
                            for (var n = 0, o = r.length; n < o; n++) {
                                if (r[n].getAttribute("name") === e[1]) {
                                    i.push(r[n])
                                }
                            };
                            return i.length === 0 ? null : i
                        }
                    },
                    TAG: function(e, t) {
                        if (typeof t.getElementsByTagName !== "undefined") {
                            return t.getElementsByTagName(e[1])
                        }
                    }
                },
                preFilter: {
                    CLASS: function(e, t, n, i, r, o) {
                        e = " " + e[1].replace(l, "") + " ";
                        if (o) {
                            return e
                        };
                        for (var s = 0, a;
                            (a = t[s]) != null; s++) {
                            if (a) {
                                if (r ^ (a.className && (" " + a.className + " ").replace(/[\t\n\r]/g, " ").indexOf(e) >= 0)) {
                                    if (!n) {
                                        i.push(a)
                                    }
                                } else if (n) {
                                    t[s] = !1
                                }
                            }
                        };
                        return !1
                    },
                    ID: function(e) {
                        return e[1].replace(l, "")
                    },
                    TAG: function(e, t) {
                        return e[1].replace(l, "").toLowerCase()
                    },
                    CHILD: function(e) {
                        if (e[1] === "nth") {
                            if (!e[2]) {
                                t.error(e[0])
                            };
                            e[2] = e[2].replace(/^\+|\s*/g, "");
                            var n = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(e[2] === "even" && "2n" || e[2] === "odd" && "2n+1" || !/\D/.test(e[2]) && "0n+" + e[2] || e[2]);
                            e[2] = (n[1] + (n[2] || 1)) - 0;
                            e[3] = n[3] - 0
                        } else if (e[2]) {
                            t.error(e[0])
                        };
                        e[0] = g++;
                        return e
                    },
                    ATTR: function(e, t, n, i, o, a) {
                        var s = e[1] = e[1].replace(l, "");
                        if (!a && r.attrMap[s]) {
                            e[1] = r.attrMap[s]
                        };
                        e[4] = (e[4] || e[5] || "").replace(l, "");
                        if (e[2] === "~=") {
                            e[4] = " " + e[4] + " "
                        };
                        return e
                    },
                    PSEUDO: function(e, n, i, o, a) {
                        if (e[1] === "not") {
                            if ((m.exec(e[3]) || "").length > 1 || /^\w/.test(e[3])) {
                                e[3] = t(e[3], null, null, n)
                            } else {
                                var s = t.filter(e[3], n, i, !0 ^ a);
                                if (!i) {
                                    o.push.apply(o, s)
                                };
                                return !1
                            }
                        } else if (r.match.POS.test(e[0]) || r.match.CHILD.test(e[0])) {
                            return !0
                        };
                        return e
                    },
                    POS: function(e) {
                        e.unshift(!0);
                        return e
                    }
                },
                filters: {
                    enabled: function(e) {
                        return e.disabled === !1 && e.type !== "hidden"
                    },
                    disabled: function(e) {
                        return e.disabled === !0
                    },
                    checked: function(e) {
                        return e.checked === !0
                    },
                    selected: function(e) {
                        if (e.parentNode) {
                            e.parentNode.selectedIndex
                        };
                        return e.selected === !0
                    },
                    parent: function(e) {
                        return !!e.firstChild
                    },
                    empty: function(e) {
                        return !e.firstChild
                    },
                    has: function(e, n, i) {
                        return !!t(i[3], e).length
                    },
                    header: function(e) {
                        return (/h\d/i).test(e.nodeName)
                    },
                    text: function(e) {
                        var t = e.getAttribute("type"),
                            n = e.type;
                        return e.nodeName.toLowerCase() === "input" && "text" === n && (t === n || t === null)
                    },
                    radio: function(e) {
                        return e.nodeName.toLowerCase() === "input" && "radio" === e.type
                    },
                    checkbox: function(e) {
                        return e.nodeName.toLowerCase() === "input" && "checkbox" === e.type
                    },
                    file: function(e) {
                        return e.nodeName.toLowerCase() === "input" && "file" === e.type
                    },
                    password: function(e) {
                        return e.nodeName.toLowerCase() === "input" && "password" === e.type
                    },
                    submit: function(e) {
                        var t = e.nodeName.toLowerCase();
                        return (t === "input" || t === "button") && "submit" === e.type
                    },
                    image: function(e) {
                        return e.nodeName.toLowerCase() === "input" && "image" === e.type
                    },
                    reset: function(e) {
                        var t = e.nodeName.toLowerCase();
                        return (t === "input" || t === "button") && "reset" === e.type
                    },
                    button: function(e) {
                        var t = e.nodeName.toLowerCase();
                        return t === "input" && "button" === e.type || t === "button"
                    },
                    input: function(e) {
                        return (/input|select|textarea|button/i).test(e.nodeName)
                    },
                    focus: function(e) {
                        return e === e.ownerDocument.activeElement
                    }
                },
                setFilters: {
                    first: function(e, t) {
                        return t === 0
                    },
                    last: function(e, t, n, i) {
                        return t === i.length - 1
                    },
                    even: function(e, t) {
                        return t % 2 === 0
                    },
                    odd: function(e, t) {
                        return t % 2 === 1
                    },
                    lt: function(e, t, n) {
                        return t < n[3] - 0
                    },
                    gt: function(e, t, n) {
                        return t > n[3] - 0
                    },
                    nth: function(e, t, n) {
                        return n[3] - 0 === t
                    },
                    eq: function(e, t, n) {
                        return n[3] - 0 === t
                    }
                },
                filter: {
                    PSEUDO: function(e, n, i, o) {
                        var a = n[1],
                            f = r.filters[a];
                        if (f) {
                            return f(e, i, n, o)
                        } else if (a === "contains") {
                            return (e.textContent || e.innerText || h([e]) || "").indexOf(n[3]) >= 0
                        } else if (a === "not") {
                            var l = n[3];
                            for (var s = 0, u = l.length; s < u; s++) {
                                if (l[s] === e) {
                                    return !1
                                }
                            };
                            return !0
                        } else {
                            t.error(a)
                        }
                    },
                    CHILD: function(e, t) {
                        var i, a, l, r, c, f, o, u = t[1],
                            n = e;
                        switch (u) {
                            case "only":
                            case "first":
                                while ((n = n.previousSibling)) {
                                    if (n.nodeType === 1) {
                                        return !1
                                    }
                                };
                                if (u === "first") {
                                    return !0
                                };
                                n = e;
                            case "last":
                                while ((n = n.nextSibling)) {
                                    if (n.nodeType === 1) {
                                        return !1
                                    }
                                };
                                return !0;
                            case "nth":
                                i = t[2];
                                a = t[3];
                                if (i === 1 && a === 0) {
                                    return !0
                                };
                                l = t[0];
                                r = e.parentNode;
                                if (r && (r[s] !== l || !e.nodeIndex)) {
                                    f = 0;
                                    for (n = r.firstChild; n; n = n.nextSibling) {
                                        if (n.nodeType === 1) {
                                            n.nodeIndex = ++f
                                        }
                                    };
                                    r[s] = l
                                };
                                o = e.nodeIndex - a;
                                if (i === 0) {
                                    return o === 0
                                } else {
                                    return (o % i === 0 && o / i >= 0)
                                }
                        }
                    },
                    ID: function(e, t) {
                        return e.nodeType === 1 && e.getAttribute("id") === t
                    },
                    TAG: function(e, t) {
                        return (t === "*" && e.nodeType === 1) || !!e.nodeName && e.nodeName.toLowerCase() === t
                    },
                    CLASS: function(e, t) {
                        return (" " + (e.className || e.getAttribute("class")) + " ").indexOf(t) > -1
                    },
                    ATTR: function(e, n) {
                        var s = n[1],
                            l = t.attr ? t.attr(e, s) : r.attrHandle[s] ? r.attrHandle[s](e) : e[s] != null ? e[s] : e.getAttribute(s),
                            o = l + "",
                            a = n[2],
                            i = n[4];
                        return l == null ? a === "!=" : !a && t.attr ? l != null : a === "=" ? o === i : a === "*=" ? o.indexOf(i) >= 0 : a === "~=" ? (" " + o + " ").indexOf(i) >= 0 : !i ? o && l !== !1 : a === "!=" ? o !== i : a === "^=" ? o.indexOf(i) === 0 : a === "$=" ? o.substr(o.length - i.length) === i : a === "|=" ? o === i || o.substr(0, i.length + 1) === i + "-" : !1
                    },
                    POS: function(e, t, n, i) {
                        var a = t[2],
                            o = r.setFilters[a];
                        if (o) {
                            return o(e, n, t, i)
                        }
                    }
                }
            };
        var v = r.match.POS,
            N = function(e, t) {
                return "\\" + (t - 0 + 1)
            };
        for (var c in r.match) {
            r.match[c] = new RegExp(r.match[c].source + (/(?![^\[]*\])(?![^\(]*\))/.source));
            r.leftMatch[c] = new RegExp(/(^(?:.|\r|\n)*?)/.source + r.match[c].source.replace(/\\(\d+)/g, N))
        };
        r.match.globalPOS = v;
        var a = function(e, t) {
            e = Array.prototype.slice.call(e, 0);
            if (t) {
                t.push.apply(t, e);
                return t
            };
            return e
        };
        try {
            Array.prototype.slice.call(i.documentElement.childNodes, 0)[0].nodeType
        } catch (o) {
            a = function(e, t) {
                var n = 0,
                    i = t || [];
                if (b.call(e) === "[object Array]") {
                    Array.prototype.push.apply(i, e)
                } else {
                    if (typeof e.length === "number") {
                        for (var r = e.length; n < r; n++) {
                            i.push(e[n])
                        }
                    } else {
                        for (; e[n]; n++) {
                            i.push(e[n])
                        }
                    }
                };
                return i
            }
        };
        var u, f;
        if (i.documentElement.compareDocumentPosition) {
            u = function(e, t) {
                if (e === t) {
                    d = !0;
                    return 0
                };
                if (!e.compareDocumentPosition || !t.compareDocumentPosition) {
                    return e.compareDocumentPosition ? -1 : 1
                };
                return e.compareDocumentPosition(t) & 4 ? -1 : 1
            }
        } else {
            u = function(e, t) {
                if (e === t) {
                    d = !0;
                    return 0
                } else if (e.sourceIndex && t.sourceIndex) {
                    return e.sourceIndex - t.sourceIndex
                };
                var a, u, r = [],
                    o = [],
                    s = e.parentNode,
                    l = t.parentNode,
                    i = s;
                if (s === l) {
                    return f(e, t)
                } else if (!s) {
                    return -1
                } else if (!l) {
                    return 1
                }
                while (i) {
                    r.unshift(i);
                    i = i.parentNode
                };
                i = l;
                while (i) {
                    o.unshift(i);
                    i = i.parentNode
                };
                a = r.length;
                u = o.length;
                for (var n = 0; n < a && n < u; n++) {
                    if (r[n] !== o[n]) {
                        return f(r[n], o[n])
                    }
                };
                return n === a ? f(e, o[n], -1) : f(r[n], t, 1)
            };
            f = function(e, t, n) {
                if (e === t) {
                    return n
                };
                var i = e.nextSibling;
                while (i) {
                    if (i === t) {
                        return -1
                    };
                    i = i.nextSibling
                };
                return 1
            }
        }(function() {
            var e = i.createElement("div"),
                o = "script" + (new Date()).getTime(),
                t = i.documentElement;
            e.innerHTML = "<a name='" + o + "'/>";
            t.insertBefore(e, t.firstChild);
            if (i.getElementById(o)) {
                r.find.ID = function(e, t, i) {
                    if (typeof t.getElementById !== "undefined" && !i) {
                        var r = t.getElementById(e[1]);
                        return r ? r.id === e[1] || typeof r.getAttributeNode !== "undefined" && r.getAttributeNode("id").nodeValue === e[1] ? [r] : n : []
                    }
                };
                r.filter.ID = function(e, t) {
                    var n = typeof e.getAttributeNode !== "undefined" && e.getAttributeNode("id");
                    return e.nodeType === 1 && n && n.nodeValue === t
                }
            };
            t.removeChild(e);
            t = e = null
        })();
        (function() {
            var e = i.createElement("div");
            e.appendChild(i.createComment(""));
            if (e.getElementsByTagName("*").length > 0) {
                r.find.TAG = function(e, t) {
                    var n = t.getElementsByTagName(e[1]);
                    if (e[1] === "*") {
                        var r = [];
                        for (var i = 0; n[i]; i++) {
                            if (n[i].nodeType === 1) {
                                r.push(n[i])
                            }
                        };
                        n = r
                    };
                    return n
                }
            };
            e.innerHTML = "<a href='#'></a>";
            if (e.firstChild && typeof e.firstChild.getAttribute !== "undefined" && e.firstChild.getAttribute("href") !== "#") {
                r.attrHandle.href = function(e) {
                    return e.getAttribute("href", 2)
                }
            };
            e = null
        })();
        if (i.querySelectorAll) {
            (function() {
                var n = t,
                    e = i.createElement("div"),
                    s = "__sizzle__";
                e.innerHTML = "<p class='TEST'></p>";
                if (e.querySelectorAll && e.querySelectorAll(".TEST").length === 0) {
                    return
                };
                t = function(e, o, l, f) {
                    o = o || i;
                    if (!f && !t.isXML(o)) {
                        var c = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(e);
                        if (c && (o.nodeType === 1 || o.nodeType === 9)) {
                            if (c[1]) {
                                return a(o.getElementsByTagName(e), l)
                            } else if (c[2] && r.find.CLASS && o.getElementsByClassName) {
                                return a(o.getElementsByClassName(c[2]), l)
                            }
                        };
                        if (o.nodeType === 9) {
                            if (e === "body" && o.body) {
                                return a([o.body], l)
                            } else if (c && c[3]) {
                                var p = o.getElementById(c[3]);
                                if (p && p.parentNode) {
                                    if (p.id === c[3]) {
                                        return a([p], l)
                                    }
                                } else {
                                    return a([], l)
                                }
                            };
                            try {
                                return a(o.querySelectorAll(e), l)
                            } catch (u) {}
                        } else if (o.nodeType === 1 && o.nodeName.toLowerCase() !== "object") {
                            var y = o,
                                h = o.getAttribute("id"),
                                d = h || s,
                                m = o.parentNode,
                                g = /^\s*[+~]/.test(e);
                            if (!h) {
                                o.setAttribute("id", d)
                            } else {
                                d = d.replace(/'/g, "\\$&")
                            };
                            if (g && m) {
                                o = o.parentNode
                            };
                            try {
                                if (!g || m) {
                                    return a(o.querySelectorAll("[id='" + d + "'] " + e), l)
                                }
                            } catch (u) {} finally {
                                if (!h) {
                                    y.removeAttribute("id")
                                }
                            }
                        }
                    };
                    return n(e, o, l, f)
                };
                for (var o in n) {
                    t[o] = n[o]
                };
                e = null
            })()
        }(function() {
            var n = i.documentElement,
                o = n.matchesSelector || n.mozMatchesSelector || n.webkitMatchesSelector || n.msMatchesSelector;
            if (o) {
                var s = !o.call(i.createElement("div"), "div"),
                    a = !1;
                try {
                    o.call(i.documentElement, "[test!='']:sizzle")
                } catch (e) {
                    a = !0
                };
                t.matchesSelector = function(e, n) {
                    n = n.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");
                    if (!t.isXML(e)) {
                        try {
                            if (a || !r.match.PSEUDO.test(n) && !/!=/.test(n)) {
                                var l = o.call(e, n);
                                if (l || !s || e.document && e.document.nodeType !== 11) {
                                    return l
                                }
                            }
                        } catch (i) {}
                    };
                    return t(n, null, null, [e]).length > 0
                }
            }
        })();
        (function() {
            var e = i.createElement("div");
            e.innerHTML = "<div class='test e'></div><div class='test'></div>";
            if (!e.getElementsByClassName || e.getElementsByClassName("e").length === 0) {
                return
            };
            e.lastChild.className = "e";
            if (e.getElementsByClassName("e").length === 1) {
                return
            };
            r.order.splice(1, 0, "CLASS");
            r.find.CLASS = function(e, t, n) {
                if (typeof t.getElementsByClassName !== "undefined" && !n) {
                    return t.getElementsByClassName(e[1])
                }
            };
            e = null
        })();

        function w(e, t, n, i, o, a) {
            for (var l = 0, u = i.length; l < u; l++) {
                var r = i[l];
                if (r) {
                    var f = !1;
                    r = r[e];
                    while (r) {
                        if (r[s] === n) {
                            f = i[r.sizset];
                            break
                        };
                        if (r.nodeType === 1 && !a) {
                            r[s] = n;
                            r.sizset = l
                        };
                        if (r.nodeName.toLowerCase() === t) {
                            f = r;
                            break
                        };
                        r = r[e]
                    };
                    i[l] = f
                }
            }
        };

        function T(e, n, i, r, a, l) {
            for (var f = 0, c = r.length; f < c; f++) {
                var o = r[f];
                if (o) {
                    var u = !1;
                    o = o[e];
                    while (o) {
                        if (o[s] === i) {
                            u = r[o.sizset];
                            break
                        };
                        if (o.nodeType === 1) {
                            if (!l) {
                                o[s] = i;
                                o.sizset = f
                            };
                            if (typeof n !== "string") {
                                if (o === n) {
                                    u = !0;
                                    break
                                }
                            } else if (t.filter(n, [o]).length > 0) {
                                u = o;
                                break
                            }
                        };
                        o = o[e]
                    };
                    r[f] = u
                }
            }
        };
        if (i.documentElement.contains) {
            t.contains = function(e, t) {
                return e !== t && (e.contains ? e.contains(t) : !0)
            }
        } else if (i.documentElement.compareDocumentPosition) {
            t.contains = function(e, t) {
                return !!(e.compareDocumentPosition(t) & 16)
            }
        } else {
            t.contains = function() {
                return !1
            }
        };
        t.isXML = function(e) {
            var t = (e ? e.ownerDocument || e : 0).documentElement;
            return t ? t.nodeName !== "HTML" : !1
        };
        var y = function(e, n, i) {
            var a, s = [],
                l = "",
                f = n.nodeType ? [n] : n;
            while ((a = r.match.PSEUDO.exec(e))) {
                l += a[0];
                e = e.replace(r.match.PSEUDO, "")
            };
            e = r.relative[e] ? e + "*" : e;
            for (var o = 0, u = f.length; o < u; o++) {
                t(e, f[o], s, i)
            };
            return t.filter(l, s)
        };
        t.attr = e.attr;
        t.selectors.attrMap = {};
        e.find = t;
        e.expr = t.selectors;
        e.expr[":"] = e.expr.filters;
        e.unique = t.uniqueSort;
        e.text = t.getText;
        e.isXMLDoc = t.isXML;
        e.contains = t.contains
    })();
    var nt = /Until$/,
        it = /^(?:parents|prevUntil|prevAll)/,
        rt = /,/,
        ot = /^.[^:#\[\.,]*$/,
        at = Array.prototype.slice,
        ee = e.expr.match.globalPOS,
        st = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
    e.fn.extend({
        find: function(t) {
            var l = this,
                n, a;
            if (typeof t !== "string") {
                return e(t).filter(function() {
                    for (n = 0, a = l.length; n < a; n++) {
                        if (e.contains(l[n], this)) {
                            return !0
                        }
                    }
                })
            };
            var i = this.pushStack("", "find", t),
                s, r, o;
            for (n = 0, a = this.length; n < a; n++) {
                s = i.length;
                e.find(t, this[n], i);
                if (n > 0) {
                    for (r = s; r < i.length; r++) {
                        for (o = 0; o < s; o++) {
                            if (i[o] === i[r]) {
                                i.splice(r--, 1);
                                break
                            }
                        }
                    }
                }
            };
            return i
        },
        has: function(t) {
            var n = e(t);
            return this.filter(function() {
                for (var t = 0, i = n.length; t < i; t++) {
                    if (e.contains(this, n[t])) {
                        return !0
                    }
                }
            })
        },
        not: function(e) {
            return this.pushStack(pe(this, e, !1), "not", e)
        },
        filter: function(e) {
            return this.pushStack(pe(this, e, !0), "filter", e)
        },
        is: function(t) {
            return !!t && (typeof t === "string" ? ee.test(t) ? e(t, this.context).index(this[0]) >= 0 : e.filter(t, this).length > 0 : this.filter(t).length > 0)
        },
        closest: function(t, n) {
            var o = [],
                r, l, i = this[0];
            if (e.isArray(t)) {
                var s = 1;
                while (i && i.ownerDocument && i !== n) {
                    for (r = 0; r < t.length; r++) {
                        if (e(i).is(t[r])) {
                            o.push({
                                selector: t[r],
                                elem: i,
                                level: s
                            })
                        }
                    };
                    i = i.parentNode;
                    s++
                };
                return o
            };
            var a = ee.test(t) || typeof t !== "string" ? e(t, n || this.context) : 0;
            for (r = 0, l = this.length; r < l; r++) {
                i = this[r];
                while (i) {
                    if (a ? a.index(i) > -1 : e.find.matchesSelector(i, t)) {
                        o.push(i);
                        break
                    } else {
                        i = i.parentNode;
                        if (!i || !i.ownerDocument || i === n || i.nodeType === 11) {
                            break
                        }
                    }
                }
            };
            o = o.length > 1 ? e.unique(o) : o;
            return this.pushStack(o, "closest", t)
        },
        index: function(t) {
            if (!t) {
                return (this[0] && this[0].parentNode) ? this.prevAll().length : -1
            };
            if (typeof t === "string") {
                return e.inArray(this[0], e(t))
            };
            return e.inArray(t.jquery ? t[0] : t, this)
        },
        add: function(t, n) {
            var r = typeof t === "string" ? e(t, n) : e.makeArray(t && t.nodeType ? [t] : t),
                i = e.merge(this.get(), r);
            return this.pushStack(de(r[0]) || de(i[0]) ? i : e.unique(i))
        },
        andSelf: function() {
            return this.add(this.prevObject)
        }
    });

    function de(e) {
        return !e || !e.parentNode || e.parentNode.nodeType === 11
    };
    e.each({
        parent: function(e) {
            var t = e.parentNode;
            return t && t.nodeType !== 11 ? t : null
        },
        parents: function(t) {
            return e.dir(t, "parentNode")
        },
        parentsUntil: function(t, n, i) {
            return e.dir(t, "parentNode", i)
        },
        next: function(t) {
            return e.nth(t, 2, "nextSibling")
        },
        prev: function(t) {
            return e.nth(t, 2, "previousSibling")
        },
        nextAll: function(t) {
            return e.dir(t, "nextSibling")
        },
        prevAll: function(t) {
            return e.dir(t, "previousSibling")
        },
        nextUntil: function(t, n, i) {
            return e.dir(t, "nextSibling", i)
        },
        prevUntil: function(t, n, i) {
            return e.dir(t, "previousSibling", i)
        },
        siblings: function(t) {
            return e.sibling((t.parentNode || {}).firstChild, t)
        },
        children: function(t) {
            return e.sibling(t.firstChild)
        },
        contents: function(t) {
            return e.nodeName(t, "iframe") ? t.contentDocument || t.contentWindow.document : e.makeArray(t.childNodes)
        }
    }, function(t, n) {
        e.fn[t] = function(i, r) {
            var o = e.map(this, n, i);
            if (!nt.test(t)) {
                r = i
            };
            if (r && typeof r === "string") {
                o = e.filter(r, o)
            };
            o = this.length > 1 && !st[t] ? e.unique(o) : o;
            if ((this.length > 1 || rt.test(r)) && it.test(t)) {
                o = o.reverse()
            };
            return this.pushStack(o, t, at.call(arguments).join(","))
        }
    });
    e.extend({
        filter: function(t, n, i) {
            if (i) {
                t = ":not(" + t + ")"
            };
            return n.length === 1 ? e.find.matchesSelector(n[0], t) ? [n[0]] : [] : e.find.matches(t, n)
        },
        dir: function(t, i, r) {
            var a = [],
                o = t[i];
            while (o && o.nodeType !== 9 && (r === n || o.nodeType !== 1 || !e(o).is(r))) {
                if (o.nodeType === 1) {
                    a.push(o)
                };
                o = o[i]
            };
            return a
        },
        nth: function(e, t, n, i) {
            t = t || 1;
            var r = 0;
            for (; e; e = e[n]) {
                if (e.nodeType === 1 && ++r === t) {
                    break
                }
            };
            return e
        },
        sibling: function(e, t) {
            var n = [];
            for (; e; e = e.nextSibling) {
                if (e.nodeType === 1 && e !== t) {
                    n.push(e)
                }
            };
            return n
        }
    });

    function pe(t, n, i) {
        n = n || 0;
        if (e.isFunction(n)) {
            return e.grep(t, function(e, t) {
                var r = !!n.call(e, t, e);
                return r === i
            })
        } else if (n.nodeType) {
            return e.grep(t, function(e, t) {
                return (e === n) === i
            })
        } else if (typeof n === "string") {
            var r = e.grep(t, function(e) {
                return e.nodeType === 1
            });
            if (ot.test(n)) {
                return e.filter(n, r, !i)
            } else {
                n = e.filter(n, r)
            }
        };
        return e.grep(t, function(t, r) {
            return (e.inArray(t, n) >= 0) === i
        })
    };

    function he(e) {
        var n = G.split("|"),
            t = e.createDocumentFragment();
        if (t.createElement) {
            while (n.length) {
                t.createElement(n.pop())
            }
        };
        return t
    };
    var G = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
        Je = / jQuery\d+="(?:\d+|null)"/g,
        D = /^\s+/,
        Y = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
        J = /<([\w:]+)/,
        Qe = /<tbody/i,
        Ke = /<|&#?\w+;/,
        Ze = /<(?:script|style)/i,
        et = /<(?:script|object|embed|option|style)/i,
        Q = new RegExp("<(?:" + G + ")[\\s/>]", "i"),
        K = /checked\s*(?:[^=]|=\s*.checked.)/i,
        Z = /\/(java|ecma)script/i,
        tt = /^\s*<!(?:\[CDATA\[|\-\-)/,
        o = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
            area: [1, "<map>", "</map>"],
            _default: [0, "", ""]
        },
        j = he(i);
    o.optgroup = o.option;
    o.tbody = o.tfoot = o.colgroup = o.caption = o.thead;
    o.th = o.td;
    if (!e.support.htmlSerialize) {
        o._default = [1, "div<div>", "</div>"]
    };
    e.fn.extend({
        text: function(t) {
            return e.access(this, function(t) {
                return t === n ? e.text(this) : this.empty().append((this[0] && this[0].ownerDocument || i).createTextNode(t))
            }, null, t, arguments.length)
        },
        wrapAll: function(t) {
            if (e.isFunction(t)) {
                return this.each(function(n) {
                    e(this).wrapAll(t.call(this, n))
                })
            };
            if (this[0]) {
                var n = e(t, this[0].ownerDocument).eq(0).clone(!0);
                if (this[0].parentNode) {
                    n.insertBefore(this[0])
                };
                n.map(function() {
                    var e = this;
                    while (e.firstChild && e.firstChild.nodeType === 1) {
                        e = e.firstChild
                    };
                    return e
                }).append(this)
            };
            return this
        },
        wrapInner: function(t) {
            if (e.isFunction(t)) {
                return this.each(function(n) {
                    e(this).wrapInner(t.call(this, n))
                })
            };
            return this.each(function() {
                var n = e(this),
                    i = n.contents();
                if (i.length) {
                    i.wrapAll(t)
                } else {
                    n.append(t)
                }
            })
        },
        wrap: function(t) {
            var n = e.isFunction(t);
            return this.each(function(i) {
                e(this).wrapAll(n ? t.call(this, i) : t)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                if (!e.nodeName(this, "body")) {
                    e(this).replaceWith(this.childNodes)
                }
            }).end()
        },
        append: function() {
            return this.domManip(arguments, !0, function(e) {
                if (this.nodeType === 1) {
                    this.appendChild(e)
                }
            })
        },
        prepend: function() {
            return this.domManip(arguments, !0, function(e) {
                if (this.nodeType === 1) {
                    this.insertBefore(e, this.firstChild)
                }
            })
        },
        before: function() {
            if (this[0] && this[0].parentNode) {
                return this.domManip(arguments, !1, function(e) {
                    this.parentNode.insertBefore(e, this)
                })
            } else if (arguments.length) {
                var t = e.clean(arguments);
                t.push.apply(t, this.toArray());
                return this.pushStack(t, "before", arguments)
            }
        },
        after: function() {
            if (this[0] && this[0].parentNode) {
                return this.domManip(arguments, !1, function(e) {
                    this.parentNode.insertBefore(e, this.nextSibling)
                })
            } else if (arguments.length) {
                var t = this.pushStack(this, "after", arguments);
                t.push.apply(t, e.clean(arguments));
                return t
            }
        },
        remove: function(t, n) {
            for (var r = 0, i;
                (i = this[r]) != null; r++) {
                if (!t || e.filter(t, [i]).length) {
                    if (!n && i.nodeType === 1) {
                        e.cleanData(i.getElementsByTagName("*"));
                        e.cleanData([i])
                    };
                    if (i.parentNode) {
                        i.parentNode.removeChild(i)
                    }
                }
            };
            return this
        },
        empty: function() {
            for (var n = 0, t;
                (t = this[n]) != null; n++) {
                if (t.nodeType === 1) {
                    e.cleanData(t.getElementsByTagName("*"))
                }
                while (t.firstChild) {
                    t.removeChild(t.firstChild)
                }
            };
            return this
        },
        clone: function(t, n) {
            t = t == null ? !1 : t;
            n = n == null ? t : n;
            return this.map(function() {
                return e.clone(this, t, n)
            })
        },
        html: function(t) {
            return e.access(this, function(t) {
                var r = this[0] || {},
                    a = 0,
                    s = this.length;
                if (t === n) {
                    return r.nodeType === 1 ? r.innerHTML.replace(Je, "") : null
                };
                if (typeof t === "string" && !Ze.test(t) && (e.support.leadingWhitespace || !D.test(t)) && !o[(J.exec(t) || ["", ""])[1].toLowerCase()]) {
                    t = t.replace(Y, "<$1></$2>");
                    try {
                        for (; a < s; a++) {
                            r = this[a] || {};
                            if (r.nodeType === 1) {
                                e.cleanData(r.getElementsByTagName("*"));
                                r.innerHTML = t
                            }
                        };
                        r = 0
                    } catch (i) {}
                };
                if (r) {
                    this.empty().append(t)
                }
            }, null, t, arguments.length)
        },
        replaceWith: function(t) {
            if (this[0] && this[0].parentNode) {
                if (e.isFunction(t)) {
                    return this.each(function(n) {
                        var i = e(this),
                            r = i.html();
                        i.replaceWith(t.call(this, n, r))
                    })
                };
                if (typeof t !== "string") {
                    t = e(t).detach()
                };
                return this.each(function() {
                    var n = this.nextSibling,
                        i = this.parentNode;
                    e(this).remove();
                    if (n) {
                        e(n).before(t)
                    } else {
                        e(i).append(t)
                    }
                })
            } else {
                return this.length ? this.pushStack(e(e.isFunction(t) ? t() : t), "replaceWith", t) : this
            }
        },
        detach: function(e) {
            return this.remove(e, !0)
        },
        domManip: function(t, i, r) {
            var u, l, o, f, a = t[0],
                d = [];
            if (!e.support.checkClone && arguments.length === 3 && typeof a === "string" && K.test(a)) {
                return this.each(function() {
                    e(this).domManip(t, i, r, !0)
                })
            };
            if (e.isFunction(a)) {
                return this.each(function(o) {
                    var s = e(this);
                    t[0] = a.call(this, o, i ? s.html() : n);
                    s.domManip(t, i, r)
                })
            };
            if (this[0]) {
                f = a && a.parentNode;
                if (e.support.parentNode && f && f.nodeType === 11 && f.childNodes.length === this.length) {
                    u = {
                        fragment: f
                    }
                } else {
                    u = e.buildFragment(t, this, d)
                };
                o = u.fragment;
                if (o.childNodes.length === 1) {
                    l = o = o.firstChild
                } else {
                    l = o.firstChild
                };
                if (l) {
                    i = i && e.nodeName(l, "tr");
                    for (var s = 0, c = this.length, p = c - 1; s < c; s++) {
                        r.call(i ? Nt(this[s], l) : this[s], u.cacheable || (c > 1 && s < p) ? e.clone(o, !0, !0) : o)
                    }
                };
                if (d.length) {
                    e.each(d, function(t, n) {
                        if (n.src) {
                            e.ajax({
                                type: "GET",
                                global: !1,
                                url: n.src,
                                async: !1,
                                dataType: "script"
                            })
                        } else {
                            e.globalEval((n.text || n.textContent || n.innerHTML || "").replace(tt, "/*$0*/"))
                        };
                        if (n.parentNode) {
                            n.parentNode.removeChild(n)
                        }
                    })
                }
            };
            return this
        }
    });

    function Nt(t, n) {
        return e.nodeName(t, "table") ? (t.getElementsByTagName("tbody")[0] || t.appendChild(t.ownerDocument.createElement("tbody"))) : t
    };

    function me(t, n) {
        if (n.nodeType !== 1 || !e.hasData(t)) {
            return
        };
        var r, o, s, l = e._data(t),
            i = e._data(n, l),
            a = l.events;
        if (a) {
            delete i.handle;
            i.events = {};
            for (r in a) {
                for (o = 0, s = a[r].length; o < s; o++) {
                    e.event.add(n, r, a[r][o])
                }
            }
        };
        if (i.data) {
            i.data = e.extend({}, i.data)
        }
    };

    function ge(t, n) {
        var i;
        if (n.nodeType !== 1) {
            return
        };
        if (n.clearAttributes) {
            n.clearAttributes()
        };
        if (n.mergeAttributes) {
            n.mergeAttributes(t)
        };
        i = n.nodeName.toLowerCase();
        if (i === "object") {
            n.outerHTML = t.outerHTML
        } else if (i === "input" && (t.type === "checkbox" || t.type === "radio")) {
            if (t.checked) {
                n.defaultChecked = n.checked = t.checked
            };
            if (n.value !== t.value) {
                n.value = t.value
            }
        } else if (i === "option") {
            n.selected = t.defaultSelected
        } else if (i === "input" || i === "textarea") {
            n.defaultValue = t.defaultValue
        } else if (i === "script" && n.text !== t.text) {
            n.text = t.text
        };
        n.removeAttribute(e.expando);
        n.removeAttribute("_submit_attached");
        n.removeAttribute("_change_attached")
    };
    e.buildFragment = function(t, n, r) {
        var a, f, l, s, o = t[0];
        if (n && n[0]) {
            s = n[0].ownerDocument || n[0]
        };
        if (!s.createDocumentFragment) {
            s = i
        };
        if (t.length === 1 && typeof o === "string" && o.length < 512 && s === i && o.charAt(0) === "<" && !et.test(o) && (e.support.checkClone || !K.test(o)) && (e.support.html5Clone || !Q.test(o))) {
            f = !0;
            l = e.fragments[o];
            if (l && l !== 1) {
                a = l
            }
        };
        if (!a) {
            a = s.createDocumentFragment();
            e.clean(t, s, a, r)
        };
        if (f) {
            e.fragments[o] = l ? a : 1
        };
        return {
            fragment: a,
            cacheable: f
        }
    };
    e.fragments = {};
    e.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(t, n) {
        e.fn[t] = function(i) {
            var a = [],
                r = e(i),
                s = this.length === 1 && this[0].parentNode;
            if (s && s.nodeType === 11 && s.childNodes.length === 1 && r.length === 1) {
                r[n](this[0]);
                return this
            } else {
                for (var o = 0, f = r.length; o < f; o++) {
                    var l = (o > 0 ? this.clone(!0) : this).get();
                    e(r[o])[n](l);
                    a = a.concat(l)
                };
                return this.pushStack(a, t, r.selector)
            }
        }
    });

    function T(e) {
        if (typeof e.getElementsByTagName !== "undefined") {
            return e.getElementsByTagName("*")
        } else if (typeof e.querySelectorAll !== "undefined") {
            return e.querySelectorAll("*")
        } else {
            return []
        }
    };

    function ye(e) {
        if (e.type === "checkbox" || e.type === "radio") {
            e.defaultChecked = e.checked
        }
    };

    function ve(t) {
        var n = (t.nodeName || "").toLowerCase();
        if (n === "input") {
            ye(t)
        } else if (n !== "script" && typeof t.getElementsByTagName !== "undefined") {
            e.grep(t.getElementsByTagName("input"), ye)
        }
    };

    function Ct(e) {
        var t = i.createElement("div");
        j.appendChild(t);
        t.innerHTML = e.outerHTML;
        return t.firstChild
    };
    e.extend({
        clone: function(t, n, i) {
            var o, a, r, s = e.support.html5Clone || e.isXMLDoc(t) || !Q.test("<" + t.nodeName + ">") ? t.cloneNode(!0) : Ct(t);
            if ((!e.support.noCloneEvent || !e.support.noCloneChecked) && (t.nodeType === 1 || t.nodeType === 11) && !e.isXMLDoc(t)) {
                ge(t, s);
                o = T(t);
                a = T(s);
                for (r = 0; o[r]; ++r) {
                    if (a[r]) {
                        ge(o[r], a[r])
                    }
                }
            };
            if (n) {
                me(t, s);
                if (i) {
                    o = T(t);
                    a = T(s);
                    for (r = 0; o[r]; ++r) {
                        me(o[r], a[r])
                    }
                }
            };
            o = a = null;
            return s
        },
        clean: function(t, n, r, a) {
            var x, f, u, c = [];
            n = n || i;
            if (typeof n.createElement === "undefined") {
                n = n.ownerDocument || n[0] && n[0].ownerDocument || i
            };
            for (var d = 0, s;
                (s = t[d]) != null; d++) {
                if (typeof s === "number") {
                    s += ""
                };
                if (!s) {
                    continue
                };
                if (typeof s === "string") {
                    if (!Ke.test(s)) {
                        s = n.createTextNode(s)
                    } else {
                        s = s.replace(Y, "<$1></$2>");
                        var b = (J.exec(s) || ["", ""])[1].toLowerCase(),
                            m = o[b] || o._default,
                            T = m[0],
                            l = n.createElement("div"),
                            g = j.childNodes,
                            h;
                        if (n === i) {
                            j.appendChild(l)
                        } else {
                            he(n).appendChild(l)
                        };
                        l.innerHTML = m[1] + s + m[2];
                        while (T--) {
                            l = l.lastChild
                        };
                        if (!e.support.tbody) {
                            var v = Qe.test(s),
                                p = b === "table" && !v ? l.firstChild && l.firstChild.childNodes : m[1] === "<table>" && !v ? l.childNodes : [];
                            for (u = p.length - 1; u >= 0; --u) {
                                if (e.nodeName(p[u], "tbody") && !p[u].childNodes.length) {
                                    p[u].parentNode.removeChild(p[u])
                                }
                            }
                        };
                        if (!e.support.leadingWhitespace && D.test(s)) {
                            l.insertBefore(n.createTextNode(D.exec(s)[0]), l.firstChild)
                        };
                        s = l.childNodes;
                        if (l) {
                            l.parentNode.removeChild(l);
                            if (g.length > 0) {
                                h = g[g.length - 1];
                                if (h && h.parentNode) {
                                    h.parentNode.removeChild(h)
                                }
                            }
                        }
                    }
                };
                var y;
                if (!e.support.appendChecked) {
                    if (s[0] && typeof(y = s.length) === "number") {
                        for (u = 0; u < y; u++) {
                            ve(s[u])
                        }
                    } else {
                        ve(s)
                    }
                };
                if (s.nodeType) {
                    c.push(s)
                } else {
                    c = e.merge(c, s)
                }
            };
            if (r) {
                x = function(e) {
                    return !e.type || Z.test(e.type)
                };
                for (d = 0; c[d]; d++) {
                    f = c[d];
                    if (a && e.nodeName(f, "script") && (!f.type || Z.test(f.type))) {
                        a.push(f.parentNode ? f.parentNode.removeChild(f) : f)
                    } else {
                        if (f.nodeType === 1) {
                            var w = e.grep(f.getElementsByTagName("script"), x);
                            c.splice.apply(c, [d + 1, 0].concat(w))
                        };
                        r.appendChild(f)
                    }
                }
            };
            return c
        },
        cleanData: function(t) {
            var i, r, s = e.cache,
                l = e.event.special,
                f = e.support.deleteExpando;
            for (var a = 0, n;
                (n = t[a]) != null; a++) {
                if (n.nodeName && e.noData[n.nodeName.toLowerCase()]) {
                    continue
                };
                r = n[e.expando];
                if (r) {
                    i = s[r];
                    if (i && i.events) {
                        for (var o in i.events) {
                            if (l[o]) {
                                e.event.remove(n, o)
                            } else {
                                e.removeEvent(n, o, i.handle)
                            }
                        };
                        if (i.handle) {
                            i.handle.elem = null
                        }
                    };
                    if (f) {
                        delete n[e.expando]
                    } else if (n.removeAttribute) {
                        n.removeAttribute(e.expando)
                    };
                    delete s[r]
                }
            }
        }
    });
    var A = /alpha\([^)]*\)/i,
        Xe = /opacity=([^)]*)/,
        ze = /([A-Z]|^ms)/g,
        Ve = /^[\-+]?(?:\d*\.)?\d+$/i,
        L = /^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i,
        Ue = /^([\-+])=([\-+.\de]+)/,
        Ge = /^margin/,
        Ye = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        },
        u = ["Top", "Right", "Bottom", "Left"],
        p, V, U;
    e.fn.css = function(t, i) {
        return e.access(this, function(t, i, r) {
            return r !== n ? e.style(t, i, r) : e.css(t, i)
        }, t, i, arguments.length > 1)
    };
    e.extend({
        cssHooks: {
            opacity: {
                get: function(e, t) {
                    if (t) {
                        var n = p(e, "opacity");
                        return n === "" ? "1" : n
                    } else {
                        return e.style.opacity
                    }
                }
            }
        },
        cssNumber: {
            "fillOpacity": !0,
            "fontWeight": !0,
            "lineHeight": !0,
            "opacity": !0,
            "orphans": !0,
            "widows": !0,
            "zIndex": !0,
            "zoom": !0
        },
        cssProps: {
            "float": e.support.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function(t, i, r, o) {
            if (!t || t.nodeType === 3 || t.nodeType === 8 || !t.style) {
                return
            };
            var l, f, u = e.camelCase(i),
                c = t.style,
                s = e.cssHooks[u];
            i = e.cssProps[u] || u;
            if (r !== n) {
                f = typeof r;
                if (f === "string" && (l = Ue.exec(r))) {
                    r = (+(l[1] + 1) * +l[2]) + parseFloat(e.css(t, i));
                    f = "number"
                };
                if (r == null || f === "number" && isNaN(r)) {
                    return
                };
                if (f === "number" && !e.cssNumber[u]) {
                    r += "px"
                };
                if (!s || !("set" in s) || (r = s.set(t, r)) !== n) {
                    try {
                        c[i] = r
                    } catch (a) {}
                }
            } else {
                if (s && "get" in s && (l = s.get(t, !1, o)) !== n) {
                    return l
                };
                return c[i]
            }
        },
        css: function(t, i, r) {
            var a, o;
            i = e.camelCase(i);
            o = e.cssHooks[i];
            i = e.cssProps[i] || i;
            if (i === "cssFloat") {
                i = "float"
            };
            if (o && "get" in o && (a = o.get(t, !0, r)) !== n) {
                return a
            } else if (p) {
                return p(t, i)
            }
        },
        swap: function(e, t, n) {
            var r = {},
                o, i;
            for (i in t) {
                r[i] = e.style[i];
                e.style[i] = t[i]
            };
            o = n.call(e);
            for (i in t) {
                e.style[i] = r[i]
            };
            return o
        }
    });
    e.curCSS = e.css;
    if (i.defaultView && i.defaultView.getComputedStyle) {
        V = function(t, n) {
            var i, a, r, s, o = t.style;
            n = n.replace(ze, "-$1").toLowerCase();
            if ((a = t.ownerDocument.defaultView) && (r = a.getComputedStyle(t, null))) {
                i = r.getPropertyValue(n);
                if (i === "" && !e.contains(t.ownerDocument.documentElement, t)) {
                    i = e.style(t, n)
                }
            };
            if (!e.support.pixelMargin && r && Ge.test(n) && L.test(i)) {
                s = o.width;
                o.width = i;
                i = r.width;
                o.width = s
            };
            return i
        }
    };
    if (i.documentElement.currentStyle) {
        U = function(e, t) {
            var o, r, a, n = e.currentStyle && e.currentStyle[t],
                i = e.style;
            if (n == null && i && (a = i[t])) {
                n = a
            };
            if (L.test(n)) {
                o = i.left;
                r = e.runtimeStyle && e.runtimeStyle.left;
                if (r) {
                    e.runtimeStyle.left = e.currentStyle.left
                };
                i.left = t === "fontSize" ? "1em" : n;
                n = i.pixelLeft + "px";
                i.left = o;
                if (r) {
                    e.runtimeStyle.left = r
                }
            };
            return n === "" ? "auto" : n
        }
    };
    p = V || U;

    function be(t, n, i) {
        var r = n === "width" ? t.offsetWidth : t.offsetHeight,
            o = n === "width" ? 1 : 0,
            a = 4;
        if (r > 0) {
            if (i !== "border") {
                for (; o < a; o += 2) {
                    if (!i) {
                        r -= parseFloat(e.css(t, "padding" + u[o])) || 0
                    };
                    if (i === "margin") {
                        r += parseFloat(e.css(t, i + u[o])) || 0
                    } else {
                        r -= parseFloat(e.css(t, "border" + u[o] + "Width")) || 0
                    }
                }
            };
            return r + "px"
        };
        r = p(t, n);
        if (r < 0 || r == null) {
            r = t.style[n]
        };
        if (L.test(r)) {
            return r
        };
        r = parseFloat(r) || 0;
        if (i) {
            for (; o < a; o += 2) {
                r += parseFloat(e.css(t, "padding" + u[o])) || 0;
                if (i !== "padding") {
                    r += parseFloat(e.css(t, "border" + u[o] + "Width")) || 0
                };
                if (i === "margin") {
                    r += parseFloat(e.css(t, i + u[o])) || 0
                }
            }
        };
        return r + "px"
    };
    e.each(["height", "width"], function(t, n) {
        e.cssHooks[n] = {
            get: function(t, i, r) {
                if (i) {
                    if (t.offsetWidth !== 0) {
                        return be(t, n, r)
                    } else {
                        return e.swap(t, Ye, function() {
                            return be(t, n, r)
                        })
                    }
                }
            },
            set: function(e, t) {
                return Ve.test(t) ? t + "px" : t
            }
        }
    });
    if (!e.support.opacity) {
        e.cssHooks.opacity = {
            get: function(e, t) {
                return Xe.test((t && e.currentStyle ? e.currentStyle.filter : e.style.filter) || "") ? (parseFloat(RegExp.$1) / 100) + "" : t ? "1" : ""
            },
            set: function(t, n) {
                var i = t.style,
                    r = t.currentStyle,
                    a = e.isNumeric(n) ? "alpha(opacity=" + n * 100 + ")" : "",
                    o = r && r.filter || i.filter || "";
                i.zoom = 1;
                if (n >= 1 && e.trim(o.replace(A, "")) === "") {
                    i.removeAttribute("filter");
                    if (r && !r.filter) {
                        return
                    }
                };
                i.filter = A.test(o) ? o.replace(A, a) : o + " " + a
            }
        }
    };
    e(function() {
        if (!e.support.reliableMarginRight) {
            e.cssHooks.marginRight = {
                get: function(t, n) {
                    return e.swap(t, {
                        "display": "inline-block"
                    }, function() {
                        if (n) {
                            return p(t, "margin-right")
                        } else {
                            return t.style.marginRight
                        }
                    })
                }
            }
        }
    });
    if (e.expr && e.expr.filters) {
        e.expr.filters.hidden = function(t) {
            var n = t.offsetWidth,
                i = t.offsetHeight;
            return (n === 0 && i === 0) || (!e.support.reliableHiddenOffsets && ((t.style && t.style.display) || e.css(t, "display")) === "none")
        };
        e.expr.filters.visible = function(t) {
            return !e.expr.filters.hidden(t)
        }
    };
    e.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(t, n) {
        e.cssHooks[t + n] = {
            expand: function(e) {
                var i, r = typeof e === "string" ? e.split(" ") : [e],
                    o = {};
                for (i = 0; i < 4; i++) {
                    o[t + u[i] + n] = r[i] || r[i - 2] || r[0]
                };
                return o
            }
        }
    });
    var je = /%20/g,
        Fe = /\[\]$/,
        P = /\r?\n/g,
        Me = /#.*$/,
        He = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,
        Oe = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
        Be = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,
        Pe = /^(?:GET|HEAD)$/,
        qe = /^\/\//,
        q = /\?/,
        We = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
        Ie = /^(?:select|textarea)/i,
        W = /\s+/,
        Re = /([?&])_=[^&]*/,
        I = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,
        R = e.fn.load,
        S = {},
        X = {},
        l, f, z = ["*/"] + ["*"];
    try {
        l = wt.href
    } catch (r) {
        l = i.createElement("a");
        l.href = "";
        l = l.href
    };
    f = I.exec(l.toLowerCase()) || [];

    function xe(t) {
        return function(n, i) {
            if (typeof n !== "string") {
                i = n;
                n = "*"
            };
            if (e.isFunction(i)) {
                var s = n.toLowerCase().split(W),
                    o = 0,
                    f = s.length,
                    r, l, a;
                for (; o < f; o++) {
                    r = s[o];
                    a = /^\+/.test(r);
                    if (a) {
                        r = r.substr(1) || "*"
                    };
                    l = t[r] = t[r] || [];
                    l[a ? "unshift" : "push"](i)
                }
            }
        }
    };

    function N(e, t, i, r, o, a) {
        o = o || t.dataTypes[0];
        a = a || {};
        a[o] = !0;
        var l = e[o],
            f = 0,
            c = l ? l.length : 0,
            u = (e === S),
            s;
        for (; f < c && (u || !s); f++) {
            s = l[f](t, i, r);
            if (typeof s === "string") {
                if (!u || a[s]) {
                    s = n
                } else {
                    t.dataTypes.unshift(s);
                    s = N(e, t, i, r, s, a)
                }
            }
        };
        if ((u || !s) && !a["*"]) {
            s = N(e, t, i, r, "*", a)
        };
        return s
    };

    function we(t, i) {
        var r, o, a = e.ajaxSettings.flatOptions || {};
        for (r in i) {
            if (i[r] !== n) {
                (a[r] ? t : (o || (o = {})))[r] = i[r]
            }
        };
        if (o) {
            e.extend(!0, t, o)
        }
    };
    e.fn.extend({
        load: function(t, i, r) {
            if (typeof t !== "string" && R) {
                return R.apply(this, arguments)
            } else if (!this.length) {
                return this
            };
            var o = t.indexOf(" ");
            if (o >= 0) {
                var l = t.slice(o, t.length);
                t = t.slice(0, o)
            };
            var s = "GET";
            if (i) {
                if (e.isFunction(i)) {
                    r = i;
                    i = n
                } else if (typeof i === "object") {
                    i = e.param(i, e.ajaxSettings.traditional);
                    s = "POST"
                }
            };
            var a = this;
            e.ajax({
                url: t,
                type: s,
                dataType: "html",
                data: i,
                complete: function(t, n, i) {
                    i = t.responseText;
                    if (t.isResolved()) {
                        t.done(function(e) {
                            i = e
                        });
                        a.html(l ? e("<div>").append(i.replace(We, "")).find(l) : i)
                    };
                    if (r) {
                        a.each(r, [i, n, t])
                    }
                }
            });
            return this
        },
        serialize: function() {
            return e.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                return this.elements ? e.makeArray(this.elements) : this
            }).filter(function() {
                return this.name && !this.disabled && (this.checked || Ie.test(this.nodeName) || Oe.test(this.type))
            }).map(function(t, n) {
                var i = e(this).val();
                return i == null ? null : e.isArray(i) ? e.map(i, function(e, t) {
                    return {
                        name: n.name,
                        value: e.replace(P, "\r\n")
                    }
                }) : {
                    name: n.name,
                    value: i.replace(P, "\r\n")
                }
            }).get()
        }
    });
    e.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function(t, n) {
        e.fn[n] = function(e) {
            return this.on(n, e)
        }
    });
    e.each(["get", "post"], function(t, i) {
        e[i] = function(t, r, o, a) {
            if (e.isFunction(r)) {
                a = a || o;
                o = r;
                r = n
            };
            return e.ajax({
                type: i,
                url: t,
                data: r,
                success: o,
                dataType: a
            })
        }
    });
    e.extend({
        getScript: function(t, i) {
            return e.get(t, n, i, "script")
        },
        getJSON: function(t, n, i) {
            return e.get(t, n, i, "json")
        },
        ajaxSetup: function(t, n) {
            if (n) {
                we(t, e.ajaxSettings)
            } else {
                n = t;
                t = e.ajaxSettings
            };
            we(t, n);
            return t
        },
        ajaxSettings: {
            url: l,
            isLocal: Be.test(f[1]),
            global: !0,
            type: "GET",
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            processData: !0,
            async: !0,
            accepts: {
                xml: "application/xml, text/xml",
                html: "text/html",
                text: "text/plain",
                json: "application/json, text/javascript",
                "*": z
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText"
            },
            converters: {
                "* text": t.String,
                "text html": !0,
                "text json": e.parseJSON,
                "text xml": e.parseXML
            },
            flatOptions: {
                context: !0,
                url: !0
            }
        },
        ajaxPrefilter: xe(S),
        ajaxTransport: xe(X),
        ajax: function(t, i) {
            if (typeof t === "object") {
                i = t;
                t = n
            };
            i = i || {};
            var r = e.ajaxSetup({}, i),
                u = r.context || r,
                v = u !== r && (u.nodeType || u instanceof e) ? e(u) : e.event,
                b = e.Deferred(),
                k = e.Callbacks("once memory"),
                m = r.statusCode || {},
                l, E = {},
                A = {},
                x, g, c, w, d, s = 0,
                h, p, o = {
                    readyState: 0,
                    setRequestHeader: function(e, t) {
                        if (!s) {
                            var n = e.toLowerCase();
                            e = A[n] = A[n] || e;
                            E[e] = t
                        };
                        return this
                    },
                    getAllResponseHeaders: function() {
                        return s === 2 ? x : null
                    },
                    getResponseHeader: function(e) {
                        var t;
                        if (s === 2) {
                            if (!g) {
                                g = {};
                                while ((t = He.exec(x))) {
                                    g[t[1].toLowerCase()] = t[2]
                                }
                            };
                            t = g[e.toLowerCase()]
                        };
                        return t === n ? null : t
                    },
                    overrideMimeType: function(e) {
                        if (!s) {
                            r.mimeType = e
                        };
                        return this
                    },
                    abort: function(e) {
                        e = e || "abort";
                        if (c) {
                            c.abort(e)
                        };
                        y(0, e);
                        return this
                    }
                };

            function y(t, i, a, f) {
                if (s === 2) {
                    return
                };
                s = 2;
                if (w) {
                    clearTimeout(w)
                };
                c = n;
                x = f || "";
                o.readyState = t > 0 ? 4 : 0;
                var g, T, y, p = i,
                    E = a ? kt(r, o, a) : n,
                    N, C;
                if (t >= 200 && t < 300 || t === 304) {
                    if (r.ifModified) {
                        if ((N = o.getResponseHeader("Last-Modified"))) {
                            e.lastModified[l] = N
                        };
                        if ((C = o.getResponseHeader("Etag"))) {
                            e.etag[l] = C
                        }
                    };
                    if (t === 304) {
                        p = "notmodified";
                        g = !0
                    } else {
                        try {
                            T = Et(r, E);
                            p = "success";
                            g = !0
                        } catch (d) {
                            p = "parsererror";
                            y = d
                        }
                    }
                } else {
                    y = p;
                    if (!p || t) {
                        p = "error";
                        if (t < 0) {
                            t = 0
                        }
                    }
                };
                o.status = t;
                o.statusText = "" + (i || p);
                if (g) {
                    b.resolveWith(u, [T, p, o])
                } else {
                    b.rejectWith(u, [o, p, y])
                };
                o.statusCode(m);
                m = n;
                if (h) {
                    v.trigger("ajax" + (g ? "Success" : "Error"), [o, r, g ? T : y])
                };
                k.fireWith(u, [o, p]);
                if (h) {
                    v.trigger("ajaxComplete", [o, r]);
                    if (!(--e.active)) {
                        e.event.trigger("ajaxStop")
                    }
                }
            };
            b.promise(o);
            o.success = o.done;
            o.error = o.fail;
            o.complete = k.add;
            o.statusCode = function(e) {
                if (e) {
                    var t;
                    if (s < 2) {
                        for (t in e) {
                            m[t] = [m[t], e[t]]
                        }
                    } else {
                        t = e[o.status];
                        o.then(t, t)
                    }
                };
                return this
            };
            r.url = ((t || r.url) + "").replace(Me, "").replace(qe, f[1] + "//");
            r.dataTypes = e.trim(r.dataType || "*").toLowerCase().split(W);
            if (r.crossDomain == null) {
                d = I.exec(r.url.toLowerCase());
                r.crossDomain = !!(d && (d[1] != f[1] || d[2] != f[2] || (d[3] || (d[1] === "http:" ? 80 : 443)) != (f[3] || (f[1] === "http:" ? 80 : 443))))
            };
            if (r.data && r.processData && typeof r.data !== "string") {
                r.data = e.param(r.data, r.traditional)
            };
            N(S, r, i, o);
            if (s === 2) {
                return !1
            };
            h = r.global;
            r.type = r.type.toUpperCase();
            r.hasContent = !Pe.test(r.type);
            if (h && e.active++ === 0) {
                e.event.trigger("ajaxStart")
            };
            if (!r.hasContent) {
                if (r.data) {
                    r.url += (q.test(r.url) ? "&" : "?") + r.data;
                    delete r.data
                };
                l = r.url;
                if (r.cache === !1) {
                    var T = e.now(),
                        C = r.url.replace(Re, "$1_=" + T);
                    r.url = C + ((C === r.url) ? (q.test(r.url) ? "&" : "?") + "_=" + T : "")
                }
            };
            if (r.data && r.hasContent && r.contentType !== !1 || i.contentType) {
                o.setRequestHeader("Content-Type", r.contentType)
            };
            if (r.ifModified) {
                l = l || r.url;
                if (e.lastModified[l]) {
                    o.setRequestHeader("If-Modified-Since", e.lastModified[l])
                };
                if (e.etag[l]) {
                    o.setRequestHeader("If-None-Match", e.etag[l])
                }
            };
            o.setRequestHeader("Accept", r.dataTypes[0] && r.accepts[r.dataTypes[0]] ? r.accepts[r.dataTypes[0]] + (r.dataTypes[0] !== "*" ? ", " + z + "; q=0.01" : "") : r.accepts["*"]);
            for (p in r.headers) {
                o.setRequestHeader(p, r.headers[p])
            };
            if (r.beforeSend && (r.beforeSend.call(u, o, r) === !1 || s === 2)) {
                o.abort();
                return !1
            };
            for (p in {
                    success: 1,
                    error: 1,
                    complete: 1
                }) {
                o[p](r[p])
            };
            c = N(X, r, i, o);
            if (!c) {
                y(-1, "No Transport")
            } else {
                o.readyState = 1;
                if (h) {
                    v.trigger("ajaxSend", [o, r])
                };
                if (r.async && r.timeout > 0) {
                    w = setTimeout(function() {
                        o.abort("timeout")
                    }, r.timeout)
                };
                try {
                    s = 1;
                    c.send(E, y)
                } catch (a) {
                    if (s < 2) {
                        y(-1, a)
                    } else {
                        throw a
                    }
                }
            };
            return o
        },
        param: function(t, i) {
            var r = [],
                a = function(t, n) {
                    n = e.isFunction(n) ? n() : n;
                    r[r.length] = encodeURIComponent(t) + "=" + encodeURIComponent(n)
                };
            if (i === n) {
                i = e.ajaxSettings.traditional
            };
            if (e.isArray(t) || (t.jquery && !e.isPlainObject(t))) {
                e.each(t, function() {
                    a(this.name, this.value)
                })
            } else {
                for (var o in t) {
                    O(o, t[o], i, a)
                }
            };
            return r.join("&").replace(je, "+")
        }
    });

    function O(t, n, i, r) {
        if (e.isArray(n)) {
            e.each(n, function(e, n) {
                if (i || Fe.test(t)) {
                    r(t, n)
                } else {
                    O(t + "[" + (typeof n === "object" ? e : "") + "]", n, i, r)
                }
            })
        } else if (!i && e.type(n) === "object") {
            for (var o in n) {
                O(t + "[" + o + "]", n[o], i, r)
            }
        } else {
            r(t, n)
        }
    };
    e.extend({
        active: 0,
        lastModified: {},
        etag: {}
    });

    function kt(e, t, i) {
        var l = e.contents,
            o = e.dataTypes,
            u = e.responseFields,
            s, r, a, f;
        for (r in u) {
            if (r in i) {
                t[u[r]] = i[r]
            }
        }
        while (o[0] === "*") {
            o.shift();
            if (s === n) {
                s = e.mimeType || t.getResponseHeader("content-type")
            }
        };
        if (s) {
            for (r in l) {
                if (l[r] && l[r].test(s)) {
                    o.unshift(r);
                    break
                }
            }
        };
        if (o[0] in i) {
            a = o[0]
        } else {
            for (r in i) {
                if (!o[0] || e.converters[r + " " + o[0]]) {
                    a = r;
                    break
                };
                if (!f) {
                    f = r
                }
            };
            a = a || f
        };
        if (a) {
            if (a !== o[0]) {
                o.unshift(a)
            };
            return i[a]
        }
    };

    function Et(t, i) {
        if (t.dataFilter) {
            i = t.dataFilter(i, t.dataType)
        };
        var p = t.dataTypes,
            l = {},
            u, c, m = p.length,
            d, r = p[0],
            f, h, o, a, s;
        for (u = 1; u < m; u++) {
            if (u === 1) {
                for (c in t.converters) {
                    if (typeof c === "string") {
                        l[c.toLowerCase()] = t.converters[c]
                    }
                }
            };
            f = r;
            r = p[u];
            if (r === "*") {
                r = f
            } else if (f !== "*" && f !== r) {
                h = f + " " + r;
                o = l[h] || l["* " + r];
                if (!o) {
                    s = n;
                    for (a in l) {
                        d = a.split(" ");
                        if (d[0] === f || d[0] === "*") {
                            s = l[d[1] + " " + r];
                            if (s) {
                                a = l[a];
                                if (a === !0) {
                                    o = s
                                } else if (s === !0) {
                                    o = a
                                };
                                break
                            }
                        }
                    }
                };
                if (!(o || s)) {
                    e.error("No conversion from " + h.replace(" ", " to "))
                };
                if (o !== !0) {
                    i = o ? o(i) : s(a(i))
                }
            }
        };
        return i
    };
    var De = e.now(),
        b = /(\=)\?(&|$)|\?\?/i;
    e.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            return e.expando + "_" + (De++)
        }
    });
    e.ajaxPrefilter("json jsonp", function(n, i, r) {
        var c = (typeof n.data === "string") && /^application\/x\-www\-form\-urlencoded/.test(n.contentType);
        if (n.dataTypes[0] === "jsonp" || n.jsonp !== !1 && (b.test(n.url) || c && b.test(n.data))) {
            var s, o = n.jsonpCallback = e.isFunction(n.jsonpCallback) ? n.jsonpCallback() : n.jsonpCallback,
                f = t[o],
                a = n.url,
                l = n.data,
                u = "$1" + o + "$2";
            if (n.jsonp !== !1) {
                a = a.replace(b, u);
                if (n.url === a) {
                    if (c) {
                        l = l.replace(b, u)
                    };
                    if (n.data === l) {
                        a += (/\?/.test(a) ? "&" : "?") + n.jsonp + "=" + o
                    }
                }
            };
            n.url = a;
            n.data = l;
            t[o] = function(e) {
                s = [e]
            };
            r.always(function() {
                t[o] = f;
                if (s && e.isFunction(f)) {
                    t[o](s[0])
                }
            });
            n.converters["script json"] = function() {
                if (!s) {
                    e.error(o + " was not called")
                };
                return s[0]
            };
            n.dataTypes[0] = "json";
            return "script"
        }
    });
    e.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /javascript|ecmascript/
        },
        converters: {
            "text script": function(t) {
                e.globalEval(t);
                return t
            }
        }
    });
    e.ajaxPrefilter("script", function(e) {
        if (e.cache === n) {
            e.cache = !1
        };
        if (e.crossDomain) {
            e.type = "GET";
            e.global = !1
        }
    });
    e.ajaxTransport("script", function(e) {
        if (e.crossDomain) {
            var t, r = i.head || i.getElementsByTagName("head")[0] || i.documentElement;
            return {
                send: function(o, a) {
                    t = i.createElement("script");
                    t.async = "async";
                    if (e.scriptCharset) {
                        t.charset = e.scriptCharset
                    };
                    t.src = e.url;
                    t.onload = t.onreadystatechange = function(e, i) {
                        if (i || !t.readyState || /loaded|complete/.test(t.readyState)) {
                            t.onload = t.onreadystatechange = null;
                            if (r && t.parentNode) {
                                r.removeChild(t)
                            };
                            t = n;
                            if (!i) {
                                a(200, "success")
                            }
                        }
                    };
                    r.insertBefore(t, r.firstChild)
                },
                abort: function() {
                    if (t) {
                        t.onload(0, 1)
                    }
                }
            }
        }
    });
    var E = t.ActiveXObject ? function() {
            for (var e in d) {
                d[e](0, 1)
            }
        } : !1,
        Le = 0,
        d;

    function Te() {
        try {
            return new t.XMLHttpRequest()
        } catch (e) {}
    };

    function St() {
        try {
            return new t.ActiveXObject("Microsoft.XMLHTTP")
        } catch (e) {}
    };
    e.ajaxSettings.xhr = t.ActiveXObject ? function() {
        return !this.isLocal && Te() || St()
    } : Te;
    (function(t) {
        e.extend(e.support, {
            ajax: !!t,
            cors: !!t && ("withCredentials" in t)
        })
    })(e.ajaxSettings.xhr());
    if (e.support.ajax) {
        e.ajaxTransport(function(i) {
            if (!i.crossDomain || e.support.cors) {
                var r;
                return {
                    send: function(o, a) {
                        var l = i.xhr(),
                            u, f;
                        if (i.username) {
                            l.open(i.type, i.url, i.async, i.username, i.password)
                        } else {
                            l.open(i.type, i.url, i.async)
                        };
                        if (i.xhrFields) {
                            for (f in i.xhrFields) {
                                l[f] = i.xhrFields[f]
                            }
                        };
                        if (i.mimeType && l.overrideMimeType) {
                            l.overrideMimeType(i.mimeType)
                        };
                        if (!i.crossDomain && !o["X-Requested-With"]) {
                            o["X-Requested-With"] = "XMLHttpRequest"
                        };
                        try {
                            for (f in o) {
                                l.setRequestHeader(f, o[f])
                            }
                        } catch (s) {};
                        l.send((i.hasContent && i.data) || null);
                        r = function(t, o) {
                            var f, h, m, c, p;
                            try {
                                if (r && (o || l.readyState === 4)) {
                                    r = n;
                                    if (u) {
                                        l.onreadystatechange = e.noop;
                                        if (E) {
                                            delete d[u]
                                        }
                                    };
                                    if (o) {
                                        if (l.readyState !== 4) {
                                            l.abort()
                                        }
                                    } else {
                                        f = l.status;
                                        m = l.getAllResponseHeaders();
                                        c = {};
                                        p = l.responseXML;
                                        if (p && p.documentElement) {
                                            c.xml = p
                                        };
                                        try {
                                            c.text = l.responseText
                                        } catch (s) {};
                                        try {
                                            h = l.statusText
                                        } catch (s) {
                                            h = ""
                                        };
                                        if (!f && i.isLocal && !i.crossDomain) {
                                            f = c.text ? 200 : 404
                                        } else if (f === 1223) {
                                            f = 204
                                        }
                                    }
                                }
                            } catch (s) {
                                if (!o) {
                                    a(-1, s)
                                }
                            };
                            if (c) {
                                a(f, h, c, m)
                            }
                        };
                        if (!i.async || l.readyState === 4) {
                            r()
                        } else {
                            u = ++Le;
                            if (E) {
                                if (!d) {
                                    d = {};
                                    e(t).unload(E)
                                };
                                d[u] = r
                            };
                            l.onreadystatechange = r
                        }
                    },
                    abort: function() {
                        if (r) {
                            r(0, 1)
                        }
                    }
                }
            }
        })
    };
    var k = {},
        a, c, Se = /^(?:toggle|show|hide)$/,
        Ae = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,
        g, y = [
            ["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"],
            ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"],
            ["opacity"]
        ],
        v;
    e.fn.extend({
        show: function(t, n, i) {
            var r, a;
            if (t || t === 0) {
                return this.animate(m("show", 3), t, n, i)
            } else {
                for (var o = 0, s = this.length; o < s; o++) {
                    r = this[o];
                    if (r.style) {
                        a = r.style.display;
                        if (!e._data(r, "olddisplay") && a === "none") {
                            a = r.style.display = ""
                        };
                        if ((a === "" && e.css(r, "display") === "none") || !e.contains(r.ownerDocument.documentElement, r)) {
                            e._data(r, "olddisplay", Ce(r.nodeName))
                        }
                    }
                };
                for (o = 0; o < s; o++) {
                    r = this[o];
                    if (r.style) {
                        a = r.style.display;
                        if (a === "" || a === "none") {
                            r.style.display = e._data(r, "olddisplay") || ""
                        }
                    }
                };
                return this
            }
        },
        hide: function(t, n, i) {
            if (t || t === 0) {
                return this.animate(m("hide", 3), t, n, i)
            } else {
                var o, a, r = 0,
                    s = this.length;
                for (; r < s; r++) {
                    o = this[r];
                    if (o.style) {
                        a = e.css(o, "display");
                        if (a !== "none" && !e._data(o, "olddisplay")) {
                            e._data(o, "olddisplay", a)
                        }
                    }
                };
                for (r = 0; r < s; r++) {
                    if (this[r].style) {
                        this[r].style.display = "none"
                    }
                };
                return this
            }
        },
        _toggle: e.fn.toggle,
        toggle: function(t, n, i) {
            var r = typeof t === "boolean";
            if (e.isFunction(t) && e.isFunction(n)) {
                this._toggle.apply(this, arguments)
            } else if (t == null || r) {
                this.each(function() {
                    var n = r ? t : e(this).is(":hidden");
                    e(this)[n ? "show" : "hide"]()
                })
            } else {
                this.animate(m("toggle", 3), t, n, i)
            };
            return this
        },
        fadeTo: function(e, t, n, i) {
            return this.filter(":hidden").css("opacity", 0).show().end().animate({
                opacity: t
            }, e, n, i)
        },
        animate: function(t, n, i, r) {
            var o = e.speed(n, i, r);
            if (e.isEmptyObject(t)) {
                return this.each(o.complete, [!1])
            };
            t = e.extend({}, t);

            function a() {
                if (o.queue === !1) {
                    e._mark(this)
                };
                var a = e.extend({}, o),
                    g = this.nodeType === 1,
                    p = g && e(this).is(":hidden"),
                    i, r, n, s, h, m, f, l, u, c, d;
                a.animatedProperties = {};
                for (n in t) {
                    i = e.camelCase(n);
                    if (n !== i) {
                        t[i] = t[n];
                        delete t[n]
                    };
                    if ((h = e.cssHooks[i]) && "expand" in h) {
                        m = h.expand(t[i]);
                        delete t[i];
                        for (n in m) {
                            if (!(n in t)) {
                                t[n] = m[n]
                            }
                        }
                    }
                };
                for (i in t) {
                    r = t[i];
                    if (e.isArray(r)) {
                        a.animatedProperties[i] = r[1];
                        r = t[i] = r[0]
                    } else {
                        a.animatedProperties[i] = a.specialEasing && a.specialEasing[i] || a.easing || "swing"
                    };
                    if (r === "hide" && p || r === "show" && !p) {
                        return a.complete.call(this)
                    };
                    if (g && (i === "height" || i === "width")) {
                        a.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY];
                        if (e.css(this, "display") === "inline" && e.css(this, "float") === "none") {
                            if (!e.support.inlineBlockNeedsLayout || Ce(this.nodeName) === "inline") {
                                this.style.display = "inline-block"
                            } else {
                                this.style.zoom = 1
                            }
                        }
                    }
                };
                if (a.overflow != null) {
                    this.style.overflow = "hidden"
                };
                for (n in t) {
                    s = new e.fx(this, a, n);
                    r = t[n];
                    if (Se.test(r)) {
                        d = e._data(this, "toggle" + n) || (r === "toggle" ? p ? "show" : "hide" : 0);
                        if (d) {
                            e._data(this, "toggle" + n, d === "show" ? "hide" : "show");
                            s[d]()
                        } else {
                            s[r]()
                        }
                    } else {
                        f = Ae.exec(r);
                        l = s.cur();
                        if (f) {
                            u = parseFloat(f[2]);
                            c = f[3] || (e.cssNumber[n] ? "" : "px");
                            if (c !== "px") {
                                e.style(this, n, (u || 1) + c);
                                l = ((u || 1) / s.cur()) * l;
                                e.style(this, n, l + c)
                            };
                            if (f[1]) {
                                u = ((f[1] === "-=" ? -1 : 1) * u) + l
                            };
                            s.custom(l, u, c)
                        } else {
                            s.custom(l, r, "")
                        }
                    }
                };
                return !0
            };
            return o.queue === !1 ? this.each(a) : this.queue(o.queue, a)
        },
        stop: function(t, i, r) {
            if (typeof t !== "string") {
                r = i;
                i = t;
                t = n
            };
            if (i && t !== !1) {
                this.queue(t || "fx", [])
            };
            return this.each(function() {
                var n, a = !1,
                    o = e.timers,
                    i = e._data(this);
                if (!r) {
                    e._unmark(!0, this)
                };

                function s(t, n, i) {
                    var o = n[i];
                    e.removeData(t, i, !0);
                    o.stop(r)
                };
                if (t == null) {
                    for (n in i) {
                        if (i[n] && i[n].stop && n.indexOf(".run") === n.length - 4) {
                            s(this, i, n)
                        }
                    }
                } else if (i[n = t + ".run"] && i[n].stop) {
                    s(this, i, n)
                };
                for (n = o.length; n--;) {
                    if (o[n].elem === this && (t == null || o[n].queue === t)) {
                        if (r) {
                            o[n](!0)
                        } else {
                            o[n].saveState()
                        };
                        a = !0;
                        o.splice(n, 1)
                    }
                };
                if (!(r && a)) {
                    e.dequeue(this, t)
                }
            })
        }
    });

    function Ne() {
        setTimeout(At, 0);
        return (v = e.now())
    };

    function At() {
        v = n
    };

    function m(t, n) {
        var i = {};
        e.each(y.concat.apply([], y.slice(0, n)), function() {
            i[this] = t
        });
        return i
    };
    e.each({
        slideDown: m("show", 1),
        slideUp: m("hide", 1),
        slideToggle: m("toggle", 1),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(t, n) {
        e.fn[t] = function(e, t, i) {
            return this.animate(n, e, t, i)
        }
    });
    e.extend({
        speed: function(t, n, i) {
            var r = t && typeof t === "object" ? e.extend({}, t) : {
                complete: i || !i && n || e.isFunction(t) && t,
                duration: t,
                easing: i && n || n && !e.isFunction(n) && n
            };
            r.duration = e.fx.off ? 0 : typeof r.duration === "number" ? r.duration : r.duration in e.fx.speeds ? e.fx.speeds[r.duration] : e.fx.speeds._default;
            if (r.queue == null || r.queue === !0) {
                r.queue = "fx"
            };
            r.old = r.complete;
            r.complete = function(t) {
                if (e.isFunction(r.old)) {
                    r.old.call(this)
                };
                if (r.queue) {
                    e.dequeue(this, r.queue)
                } else if (t !== !1) {
                    e._unmark(this)
                }
            };
            return r
        },
        easing: {
            linear: function(e) {
                return e
            },
            swing: function(e) {
                return (-Math.cos(e * Math.PI) / 2) + 0.5
            }
        },
        timers: [],
        fx: function(e, t, n) {
            this.options = t;
            this.elem = e;
            this.prop = n;
            t.orig = t.orig || {}
        }
    });
    e.fx.prototype = {
        update: function() {
            if (this.options.step) {
                this.options.step.call(this.elem, this.now, this)
            }(e.fx.step[this.prop] || e.fx.step._default)(this)
        },
        cur: function() {
            if (this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null)) {
                return this.elem[this.prop]
            };
            var n, t = e.css(this.elem, this.prop);
            return isNaN(n = parseFloat(t)) ? !t || t === "auto" ? 0 : t : n
        },
        custom: function(t, i, r) {
            var o = this,
                s = e.fx;
            this.startTime = v || Ne();
            this.end = i;
            this.now = this.start = t;
            this.pos = this.state = 0;
            this.unit = r || this.unit || (e.cssNumber[this.prop] ? "" : "px");

            function a(e) {
                return o.step(e)
            };
            a.queue = this.options.queue;
            a.elem = this.elem;
            a.saveState = function() {
                if (e._data(o.elem, "fxshow" + o.prop) === n) {
                    if (o.options.hide) {
                        e._data(o.elem, "fxshow" + o.prop, o.start)
                    } else if (o.options.show) {
                        e._data(o.elem, "fxshow" + o.prop, o.end)
                    }
                }
            };
            if (a() && e.timers.push(a) && !g) {
                g = setInterval(s.tick, s.interval)
            }
        },
        show: function() {
            var t = e._data(this.elem, "fxshow" + this.prop);
            this.options.orig[this.prop] = t || e.style(this.elem, this.prop);
            this.options.show = !0;
            if (t !== n) {
                this.custom(this.cur(), t)
            } else {
                this.custom(this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur())
            };
            e(this.elem).show()
        },
        hide: function() {
            this.options.orig[this.prop] = e._data(this.elem, "fxshow" + this.prop) || e.style(this.elem, this.prop);
            this.options.hide = !0;
            this.custom(this.cur(), 0)
        },
        step: function(t) {
            var i, o, a, s = v || Ne(),
                l = !0,
                r = this.elem,
                n = this.options;
            if (t || s >= n.duration + this.startTime) {
                this.now = this.end;
                this.pos = this.state = 1;
                this.update();
                n.animatedProperties[this.prop] = !0;
                for (i in n.animatedProperties) {
                    if (n.animatedProperties[i] !== !0) {
                        l = !1
                    }
                };
                if (l) {
                    if (n.overflow != null && !e.support.shrinkWrapBlocks) {
                        e.each(["", "X", "Y"], function(e, t) {
                            r.style["overflow" + t] = n.overflow[e]
                        })
                    };
                    if (n.hide) {
                        e(r).hide()
                    };
                    if (n.hide || n.show) {
                        for (i in n.animatedProperties) {
                            e.style(r, i, n.orig[i]);
                            e.removeData(r, "fxshow" + i, !0);
                            e.removeData(r, "toggle" + i, !0)
                        }
                    };
                    a = n.complete;
                    if (a) {
                        n.complete = !1;
                        a.call(r)
                    }
                };
                return !1
            } else {
                if (n.duration == Infinity) {
                    this.now = s
                } else {
                    o = s - this.startTime;
                    this.state = o / n.duration;
                    this.pos = e.easing[n.animatedProperties[this.prop]](this.state, o, 0, 1, n.duration);
                    this.now = this.start + ((this.end - this.start) * this.pos)
                };
                this.update()
            };
            return !0
        }
    };
    e.extend(e.fx, {
        tick: function() {
            var i, t = e.timers,
                n = 0;
            for (; n < t.length; n++) {
                i = t[n];
                if (!i() && t[n] === i) {
                    t.splice(n--, 1)
                }
            };
            if (!t.length) {
                e.fx.stop()
            }
        },
        interval: 13,
        stop: function() {
            clearInterval(g);
            g = null
        },
        speeds: {
            slow: 600,
            fast: 200,
            _default: 400
        },
        step: {
            opacity: function(t) {
                e.style(t.elem, "opacity", t.now)
            },
            _default: function(e) {
                if (e.elem.style && e.elem.style[e.prop] != null) {
                    e.elem.style[e.prop] = e.now + e.unit
                } else {
                    e.elem[e.prop] = e.now
                }
            }
        }
    });
    e.each(y.concat.apply([], y), function(t, n) {
        if (n.indexOf("margin")) {
            e.fx.step[n] = function(t) {
                e.style(t.elem, n, Math.max(0, t.now) + t.unit)
            }
        }
    });
    if (e.expr && e.expr.filters) {
        e.expr.filters.animated = function(t) {
            return e.grep(e.timers, function(e) {
                return t === e.elem
            }).length
        }
    };

    function Ce(t) {
        if (!k[t]) {
            var o = i.body,
                n = e("<" + t + ">").appendTo(o),
                r = n.css("display");
            n.remove();
            if (r === "none" || r === "") {
                if (!a) {
                    a = i.createElement("iframe");
                    a.frameBorder = a.width = a.height = 0
                };
                o.appendChild(a);
                if (!c || !a.createElement) {
                    c = (a.contentWindow || a.contentDocument).document;
                    c.write((e.support.boxModel ? "<!doctype html>" : "") + "<html><body>");
                    c.close()
                };
                n = c.createElement(t);
                c.body.appendChild(n);
                r = e.css(n, "display");
                o.removeChild(a)
            };
            k[t] = r
        };
        return k[t]
    };
    var C, Ee = /^t(?:able|d|h)$/i,
        B = /^(?:body|html)$/i;
    if ("getBoundingClientRect" in i.documentElement) {
        C = function(t, n, i, r) {
            try {
                r = t.getBoundingClientRect()
            } catch (o) {};
            if (!r || !e.contains(i, t)) {
                return r ? {
                    top: r.top,
                    left: r.left
                } : {
                    top: 0,
                    left: 0
                }
            };
            var a = n.body,
                s = ke(n),
                l = i.clientTop || a.clientTop || 0,
                f = i.clientLeft || a.clientLeft || 0,
                u = s.pageYOffset || e.support.boxModel && i.scrollTop || a.scrollTop,
                c = s.pageXOffset || e.support.boxModel && i.scrollLeft || a.scrollLeft,
                d = r.top + u - l,
                p = r.left + c - f;
            return {
                top: d,
                left: p
            }
        }
    } else {
        C = function(t, n, i) {
            var r, u = t.offsetParent,
                c = t,
                s = n.body,
                f = n.defaultView,
                l = f ? f.getComputedStyle(t, null) : t.currentStyle,
                o = t.offsetTop,
                a = t.offsetLeft;
            while ((t = t.parentNode) && t !== s && t !== i) {
                if (e.support.fixedPosition && l.position === "fixed") {
                    break
                };
                r = f ? f.getComputedStyle(t, null) : t.currentStyle;
                o -= t.scrollTop;
                a -= t.scrollLeft;
                if (t === u) {
                    o += t.offsetTop;
                    a += t.offsetLeft;
                    if (e.support.doesNotAddBorder && !(e.support.doesAddBorderForTableAndCells && Ee.test(t.nodeName))) {
                        o += parseFloat(r.borderTopWidth) || 0;
                        a += parseFloat(r.borderLeftWidth) || 0
                    };
                    c = u;
                    u = t.offsetParent
                };
                if (e.support.subtractsBorderForOverflowNotVisible && r.overflow !== "visible") {
                    o += parseFloat(r.borderTopWidth) || 0;
                    a += parseFloat(r.borderLeftWidth) || 0
                };
                l = r
            };
            if (l.position === "relative" || l.position === "static") {
                o += s.offsetTop;
                a += s.offsetLeft
            };
            if (e.support.fixedPosition && l.position === "fixed") {
                o += Math.max(i.scrollTop, s.scrollTop);
                a += Math.max(i.scrollLeft, s.scrollLeft)
            };
            return {
                top: o,
                left: a
            }
        }
    };
    e.fn.offset = function(t) {
        if (arguments.length) {
            return t === n ? this : this.each(function(n) {
                e.offset.setOffset(this, t, n)
            })
        };
        var i = this[0],
            r = i && i.ownerDocument;
        if (!r) {
            return null
        };
        if (i === r.body) {
            return e.offset.bodyOffset(i)
        };
        return C(i, r, r.documentElement)
    };
    e.offset = {
        bodyOffset: function(t) {
            var n = t.offsetTop,
                i = t.offsetLeft;
            if (e.support.doesNotIncludeMarginInBodyOffset) {
                n += parseFloat(e.css(t, "marginTop")) || 0;
                i += parseFloat(e.css(t, "marginLeft")) || 0
            };
            return {
                top: n,
                left: i
            }
        },
        setOffset: function(t, n, i) {
            var u = e.css(t, "position");
            if (u === "static") {
                t.style.position = "relative"
            };
            var o = e(t),
                a = o.offset(),
                c = e.css(t, "top"),
                d = e.css(t, "left"),
                p = (u === "absolute" || u === "fixed") && e.inArray("auto", [c, d]) > -1,
                r = {},
                s = {},
                l, f;
            if (p) {
                s = o.position();
                l = s.top;
                f = s.left
            } else {
                l = parseFloat(c) || 0;
                f = parseFloat(d) || 0
            };
            if (e.isFunction(n)) {
                n = n.call(t, i, a)
            };
            if (n.top != null) {
                r.top = (n.top - a.top) + l
            };
            if (n.left != null) {
                r.left = (n.left - a.left) + f
            };
            if ("using" in n) {
                n.using.call(t, r)
            } else {
                o.css(r)
            }
        }
    };
    e.fn.extend({
        position: function() {
            if (!this[0]) {
                return null
            };
            var r = this[0],
                t = this.offsetParent(),
                n = this.offset(),
                i = B.test(t[0].nodeName) ? {
                    top: 0,
                    left: 0
                } : t.offset();
            n.top -= parseFloat(e.css(r, "marginTop")) || 0;
            n.left -= parseFloat(e.css(r, "marginLeft")) || 0;
            i.top += parseFloat(e.css(t[0], "borderTopWidth")) || 0;
            i.left += parseFloat(e.css(t[0], "borderLeftWidth")) || 0;
            return {
                top: n.top - i.top,
                left: n.left - i.left
            }
        },
        offsetParent: function() {
            return this.map(function() {
                var t = this.offsetParent || i.body;
                while (t && (!B.test(t.nodeName) && e.css(t, "position") === "static")) {
                    t = t.offsetParent
                };
                return t
            })
        }
    });
    e.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(t, i) {
        var r = /Y/.test(i);
        e.fn[t] = function(o) {
            return e.access(this, function(t, o, a) {
                var s = ke(t);
                if (a === n) {
                    return s ? (i in s) ? s[i] : e.support.boxModel && s.document.documentElement[o] || s.document.body[o] : t[o]
                };
                if (s) {
                    s.scrollTo(!r ? a : e(s).scrollLeft(), r ? a : e(s).scrollTop())
                } else {
                    t[o] = a
                }
            }, t, o, arguments.length, null)
        }
    });

    function ke(t) {
        return e.isWindow(t) ? t : t.nodeType === 9 ? t.defaultView || t.parentWindow : !1
    };
    e.each({
        Height: "height",
        Width: "width"
    }, function(t, i) {
        var r = "client" + t,
            o = "scroll" + t,
            a = "offset" + t;
        e.fn["inner" + t] = function() {
            var t = this[0];
            return t ? t.style ? parseFloat(e.css(t, i, "padding")) : this[i]() : null
        };
        e.fn["outer" + t] = function(t) {
            var n = this[0];
            return n ? n.style ? parseFloat(e.css(n, i, t ? "margin" : "border")) : this[i]() : null
        };
        e.fn[i] = function(t) {
            return e.access(this, function(t, i, s) {
                var l, f, u, c;
                if (e.isWindow(t)) {
                    l = t.document;
                    f = l.documentElement[r];
                    return e.support.boxModel && f || l.body && l.body[r] || f
                };
                if (t.nodeType === 9) {
                    l = t.documentElement;
                    if (l[r] >= l[o]) {
                        return l[r]
                    };
                    return Math.max(t.body[o], l[o], t.body[a], l[a])
                };
                if (s === n) {
                    u = e.css(t, i);
                    c = parseFloat(u);
                    return e.isNumeric(c) ? c : u
                };
                e(t).css(i, s)
            }, i, t, arguments.length, null)
        }
    });
    t.jQuery = t.$ = e;
    if (typeof define === "function" && define.amd && define.amd.jQuery) {
        define("jquery", [], function() {
            return e
        })
    }
})(window);
(function(n) {
    var e = {},
        i = 0;
    n.fn.once = function(r, o) {
        if (typeof r != 'string') {
            if (!(r in e)) {
                e[r] = ++i
            };
            if (!o) {
                o = r
            };
            r = 'jquery-once-' + e[r]
        };
        var s = r + '-processed',
            t = this.not('.' + s).addClass(s);
        return n.isFunction(o) ? t.each(o) : t
    };
    n.fn.removeOnce = function(e, i) {
        var r = e + '-processed',
            o = this.filter('.' + r).removeClass(r);
        return n.isFunction(i) ? o.each(i) : o
    }
})(jQuery);;
var Drupal = Drupal || {
    'settings': {},
    'behaviors': {},
    'locale': {}
};
jQuery.noConflict();
(function(t) {
    var e = t.fn.init;
    t.fn.init = function(t, r, a) {
        if (t && typeof t === 'string') {
            var n = t.indexOf('#');
            if (n >= 0) {
                var o = t.indexOf('<');
                if (o > n) {
                    throw 'Syntax error, unrecognized expression: ' + t
                }
            }
        };
        return e.call(this, t, r, a)
    };
    t.fn.init.prototype = e.prototype;
    Drupal.attachBehaviors = function(e, r) {
        e = e || document;
        r = r || Drupal.settings;
        t.each(Drupal.behaviors, function() {
            if (t.isFunction(this.attach)) {
                this.attach(e, r)
            }
        })
    };
    Drupal.detachBehaviors = function(e, r, a) {
        e = e || document;
        r = r || Drupal.settings;
        a = a || 'unload';
        t.each(Drupal.behaviors, function() {
            if (t.isFunction(this.detach)) {
                this.detach(e, r, a)
            }
        })
    };
    Drupal.checkPlain = function(t) {
        var e, a, r = {
            '&': '&amp;',
            '"': '&quot;',
            '<': '&lt;',
            '>': '&gt;'
        };
        t = String(t);
        for (e in r) {
            if (r.hasOwnProperty(e)) {
                a = new RegExp(e, 'g');
                t = t.replace(a, r[e])
            }
        };
        return t
    };
    Drupal.formatString = function(t, e) {
        for (var r in e) {
            switch (r.charAt(0)) {
                case '@':
                    e[r] = Drupal.checkPlain(e[r]);
                    break;
                case '!':
                    break;
                case '%':
                default:
                    e[r] = Drupal.theme('placeholder', e[r]);
                    break
            };
            t = t.replace(r, e[r])
        };
        return t
    };
    Drupal.t = function(t, r, e) {
        e = e || {};
        e.context = e.context || '';
        if (Drupal.locale.strings && Drupal.locale.strings[e.context] && Drupal.locale.strings[e.context][t]) {
            t = Drupal.locale.strings[e.context][t]
        };
        if (r) {
            t = Drupal.formatString(t, r)
        };
        return t
    };
    Drupal.formatPlural = function(t, r, a, e, o) {
        var e = e || {};
        e['@count'] = t;
        var n = Drupal.locale.pluralFormula ? Drupal.locale.pluralFormula(e['@count']) : ((e['@count'] == 1) ? 0 : 1);
        if (n == 0) {
            return Drupal.t(r, e, o)
        } else if (n == 1) {
            return Drupal.t(a, e, o)
        } else {
            e['@count[' + n + ']'] = e['@count'];
            delete e['@count'];
            return Drupal.t(a.replace('@count', '@count[' + n + ']'), e, o)
        }
    };
    Drupal.absoluteUrl = function(t) {
        var r = document.createElement('a');
        try {
            t = decodeURIComponent(t)
        } catch (e) {};
        r.setAttribute('href', t);
        return r.cloneNode(!1).href
    };
    Drupal.urlIsLocal = function(t) {
        var e = Drupal.absoluteUrl(t),
            n = location.protocol;
        if (n === 'http:' && e.indexOf('https:') === 0) {
            n = 'https:'
        };
        var r = n + '//' + location.host + Drupal.settings.basePath.slice(0, -1);
        try {
            e = decodeURIComponent(e)
        } catch (a) {};
        try {
            r = decodeURIComponent(r)
        } catch (a) {};
        return e === r || e.indexOf(r + '/') === 0
    };
    Drupal.theme = function(t) {
        var e = Array.prototype.slice.apply(arguments, [1]);
        return (Drupal.theme[t] || Drupal.theme.prototype[t]).apply(this, e)
    };
    Drupal.freezeHeight = function() {
        Drupal.unfreezeHeight();
        t('<div id="freeze-height"></div>').css({
            position: 'absolute',
            top: '0px',
            left: '0px',
            width: '1px',
            height: t('body').css('height')
        }).appendTo('body')
    };
    Drupal.unfreezeHeight = function() {
        t('#freeze-height').remove()
    };
    Drupal.encodePath = function(t, e) {
        e = e || location.href;
        return encodeURIComponent(t).replace(/%2F/g, '/')
    };
    Drupal.getSelection = function(t) {
        if (typeof t.selectionStart != 'number' && document.selection) {
            var e = document.selection.createRange(),
                r = e.duplicate();
            r.moveToElementText(t);
            r.setEndPoint('EndToEnd', e);
            var a = r.text.length - e.text.length,
                n = a + e.text.length;
            return {
                'start': a,
                'end': n
            }
        };
        return {
            'start': t.selectionStart,
            'end': t.selectionEnd
        }
    };
    Drupal.beforeUnloadCalled = !1;
    t(window).bind('beforeunload pagehide', function() {
        Drupal.beforeUnloadCalled = !0
    });
    Drupal.displayAjaxError = function(t) {
        if (!Drupal.beforeUnloadCalled) {
            alert(t)
        }
    };
    Drupal.ajaxError = function(e, r, a) {
        var o, l, i, n, c, s;
        if (e.status) {
            o = '\n' + Drupal.t('An AJAX HTTP error occurred.') + '\n' + Drupal.t('HTTP Result Code: !status', {
                '!status': e.status
            })
        } else {
            o = '\n' + Drupal.t('An AJAX HTTP request terminated abnormally.')
        };
        o += '\n' + Drupal.t('Debugging information follows.');
        i = '\n' + Drupal.t('Path: !uri', {
            '!uri': r
        });
        l = '';
        try {
            l = '\n' + Drupal.t('StatusText: !statusText', {
                '!statusText': t.trim(e.statusText)
            })
        } catch (u) {};
        n = '';
        try {
            n = '\n' + Drupal.t('ResponseText: !responseText', {
                '!responseText': t.trim(e.responseText)
            })
        } catch (u) {};
        n = n.replace(/<("[^"]*"|'[^']*'|[^'">])*>/gi, '');
        n = n.replace(/[\n]+\s+/g, '\n');
        c = e.status == 0 ? ('\n' + Drupal.t('ReadyState: !readyState', {
            '!readyState': e.readyState
        })) : '';
        a = a ? ('\n' + Drupal.t('CustomMessage: !customMessage', {
            '!customMessage': a
        })) : '';
        s = o + i + l + a + n + c;
        return s
    };
    t('html').addClass('js');
    document.cookie = 'has_js=1; path=/';
    t(function() {
        if (jQuery.support.positionFixed === undefined) {
            var e = t('<div style="position:fixed; top:10px" />').appendTo(document.body);
            jQuery.support.positionFixed = e[0].offsetTop === 10;
            e.remove()
        }
    });
    t(function() {
        Drupal.attachBehaviors(document, Drupal.settings)
    });
    Drupal.theme.prototype = {
        placeholder: function(t) {
            return '<em class="placeholder">' + Drupal.checkPlain(t) + '</em>'
        }
    }
})(jQuery);
(function(e) {
    Drupal.viewsSlideshow = Drupal.viewsSlideshow || {};
    Drupal.viewsSlideshowControls = Drupal.viewsSlideshowControls || {};
    Drupal.viewsSlideshowControls.play = function(e) {
        try {
            if (typeof Drupal.settings.viewsSlideshowControls[e.slideshowID].top.type != 'undefined' && typeof Drupal[Drupal.settings.viewsSlideshowControls[e.slideshowID].top.type].play == 'function') {
                Drupal[Drupal.settings.viewsSlideshowControls[e.slideshowID].top.type].play(e)
            }
        } catch (s) {};
        try {
            if (typeof Drupal.settings.viewsSlideshowControls[e.slideshowID].bottom.type != 'undefined' && typeof Drupal[Drupal.settings.viewsSlideshowControls[e.slideshowID].bottom.type].play == 'function') {
                Drupal[Drupal.settings.viewsSlideshowControls[e.slideshowID].bottom.type].play(e)
            }
        } catch (s) {}
    };
    Drupal.viewsSlideshowControls.pause = function(e) {
        try {
            if (typeof Drupal.settings.viewsSlideshowControls[e.slideshowID].top.type != 'undefined' && typeof Drupal[Drupal.settings.viewsSlideshowControls[e.slideshowID].top.type].pause == 'function') {
                Drupal[Drupal.settings.viewsSlideshowControls[e.slideshowID].top.type].pause(e)
            }
        } catch (s) {};
        try {
            if (typeof Drupal.settings.viewsSlideshowControls[e.slideshowID].bottom.type != 'undefined' && typeof Drupal[Drupal.settings.viewsSlideshowControls[e.slideshowID].bottom.type].pause == 'function') {
                Drupal[Drupal.settings.viewsSlideshowControls[e.slideshowID].bottom.type].pause(e)
            }
        } catch (s) {}
    };
    Drupal.behaviors.viewsSlideshowControlsText = {
        attach: function(s) {
            e('.views_slideshow_controls_text_previous:not(.views-slideshow-controls-text-previous-processed)', s).addClass('views-slideshow-controls-text-previous-processed').each(function() {
                var s = e(this).attr('id').replace('views_slideshow_controls_text_previous_', '');
                e(this).click(function() {
                    Drupal.viewsSlideshow.action({
                        'action': 'previousSlide',
                        'slideshowID': s
                    });
                    return !1
                })
            });
            e('.views_slideshow_controls_text_next:not(.views-slideshow-controls-text-next-processed)', s).addClass('views-slideshow-controls-text-next-processed').each(function() {
                var s = e(this).attr('id').replace('views_slideshow_controls_text_next_', '');
                e(this).click(function() {
                    Drupal.viewsSlideshow.action({
                        'action': 'nextSlide',
                        'slideshowID': s
                    });
                    return !1
                })
            });
            e('.views_slideshow_controls_text_pause:not(.views-slideshow-controls-text-pause-processed)', s).addClass('views-slideshow-controls-text-pause-processed').each(function() {
                var s = e(this).attr('id').replace('views_slideshow_controls_text_pause_', '');
                e(this).click(function() {
                    if (Drupal.settings.viewsSlideshow[s].paused) {
                        Drupal.viewsSlideshow.action({
                            'action': 'play',
                            'slideshowID': s,
                            'force': !0
                        })
                    } else {
                        Drupal.viewsSlideshow.action({
                            'action': 'pause',
                            'slideshowID': s,
                            'force': !0
                        })
                    };
                    return !1
                })
            })
        }
    };
    Drupal.viewsSlideshowControlsText = Drupal.viewsSlideshowControlsText || {};
    Drupal.viewsSlideshowControlsText.pause = function(s) {
        var i = Drupal.theme.prototype['viewsSlideshowControlsPause'] ? Drupal.theme('viewsSlideshowControlsPause') : '';
        e('#views_slideshow_controls_text_pause_' + s.slideshowID + ' a').text(i);
        e('#views_slideshow_controls_text_pause_' + s.slideshowID).removeClass('views-slideshow-controls-text-status-play');
        e('#views_slideshow_controls_text_pause_' + s.slideshowID).addClass('views-slideshow-controls-text-status-pause')
    };
    Drupal.viewsSlideshowControlsText.play = function(s) {
        var i = Drupal.theme.prototype['viewsSlideshowControlsPlay'] ? Drupal.theme('viewsSlideshowControlsPlay') : '';
        e('#views_slideshow_controls_text_pause_' + s.slideshowID + ' a').text(i);
        e('#views_slideshow_controls_text_pause_' + s.slideshowID).removeClass('views-slideshow-controls-text-status-pause');
        e('#views_slideshow_controls_text_pause_' + s.slideshowID).addClass('views-slideshow-controls-text-status-play')
    };
    Drupal.theme.prototype.viewsSlideshowControlsPause = function() {
        return Drupal.t('Resume')
    };
    Drupal.theme.prototype.viewsSlideshowControlsPlay = function() {
        return Drupal.t('Pause')
    };
    Drupal.viewsSlideshowPager = Drupal.viewsSlideshowPager || {};
    Drupal.viewsSlideshowPager.transitionBegin = function(s) {
        try {
            if (typeof Drupal.settings.viewsSlideshowPager != 'undefined' && typeof Drupal.settings.viewsSlideshowPager[s.slideshowID].top.type != 'undefined' && typeof Drupal[Drupal.settings.viewsSlideshowPager[s.slideshowID].top.type].transitionBegin == 'function') {
                Drupal[Drupal.settings.viewsSlideshowPager[s.slideshowID].top.type].transitionBegin(s);
                if (Drupal.settings.viewsSlideshowPager[s.slideshowID].top.master_pager === 1) {
                    e.each(Drupal.settings.viewsSlideshow, function(e, i) {
                        if (e != s.slideshowID) {
                            s.slideshowID = e;
                            s.action = 'goToSlide';
                            Drupal[Drupal.settings.viewsSlideshowPager[s.slideshowID].top.type].goToSlide(s)
                        }
                    })
                }
            }
        } catch (i) {};
        try {
            if (typeof Drupal.settings.viewsSlideshowPager != 'undefined' && typeof Drupal.settings.viewsSlideshowPager[s.slideshowID].bottom.type != 'undefined' && typeof Drupal[Drupal.settings.viewsSlideshowPager[s.slideshowID].bottom.type].transitionBegin == 'function') {
                Drupal[Drupal.settings.viewsSlideshowPager[s.slideshowID].bottom.type].transitionBegin(s);
                if (Drupal.settings.viewsSlideshowPager[s.slideshowID].bottom.master_pager === 1) {
                    e.each(Drupal.settings.viewsSlideshow, function(e, i) {
                        if (e != s.slideshowID) {
                            s.slideshowID = e;
                            s.action = 'goToSlide';
                            Drupal[Drupal.settings.viewsSlideshowPager[s.slideshowID].bottom.type].goToSlide(s)
                        }
                    })
                }
            }
        } catch (i) {}
    };
    Drupal.viewsSlideshowPager.goToSlide = function(e) {
        try {
            if (typeof Drupal.settings.viewsSlideshowPager[e.slideshowID].top.type != 'undefined' && typeof Drupal[Drupal.settings.viewsSlideshowPager[e.slideshowID].top.type].goToSlide == 'function') {
                Drupal[Drupal.settings.viewsSlideshowPager[e.slideshowID].top.type].goToSlide(e)
            }
        } catch (s) {};
        try {
            if (typeof Drupal.settings.viewsSlideshowPager[e.slideshowID].bottom.type != 'undefined' && typeof Drupal[Drupal.settings.viewsSlideshowPager[e.slideshowID].bottom.type].goToSlide == 'function') {
                Drupal[Drupal.settings.viewsSlideshowPager[e.slideshowID].bottom.type].goToSlide(e)
            }
        } catch (s) {}
    };
    Drupal.viewsSlideshowPager.previousSlide = function(e) {
        try {
            if (typeof Drupal.settings.viewsSlideshowPager[e.slideshowID].top.type != 'undefined' && typeof Drupal[Drupal.settings.viewsSlideshowPager[e.slideshowID].top.type].previousSlide == 'function') {
                Drupal[Drupal.settings.viewsSlideshowPager[e.slideshowID].top.type].previousSlide(e)
            }
        } catch (s) {};
        try {
            if (typeof Drupal.settings.viewsSlideshowPager[e.slideshowID].bottom.type != 'undefined' && typeof Drupal[Drupal.settings.viewsSlideshowPager[e.slideshowID].bottom.type].previousSlide == 'function') {
                Drupal[Drupal.settings.viewsSlideshowPager[e.slideshowID].bottom.type].previousSlide(e)
            }
        } catch (s) {}
    };
    Drupal.viewsSlideshowPager.nextSlide = function(e) {
        try {
            if (typeof Drupal.settings.viewsSlideshowPager[e.slideshowID].top.type != 'undefined' && typeof Drupal[Drupal.settings.viewsSlideshowPager[e.slideshowID].top.type].nextSlide == 'function') {
                Drupal[Drupal.settings.viewsSlideshowPager[e.slideshowID].top.type].nextSlide(e)
            }
        } catch (s) {};
        try {
            if (typeof Drupal.settings.viewsSlideshowPager[e.slideshowID].bottom.type != 'undefined' && typeof Drupal[Drupal.settings.viewsSlideshowPager[e.slideshowID].bottom.type].nextSlide == 'function') {
                Drupal[Drupal.settings.viewsSlideshowPager[e.slideshowID].bottom.type].nextSlide(e)
            }
        } catch (s) {}
    };
    Drupal.behaviors.viewsSlideshowPagerFields = {
        attach: function(s) {
            e('.views_slideshow_pager_field:not(.views-slideshow-pager-field-processed)', s).addClass('views-slideshow-pager-field-processed').each(function() {
                var i = e(this).attr('id').split('_'),
                    o = i[2];
                i.splice(0, 3);
                var s = i.join('_');
                if (Drupal.settings.viewsSlideshowPagerFields[s][o].activatePauseOnHover) {
                    e(this).children().each(function(i, o) {
                        var t = function() {
                                Drupal.viewsSlideshow.action({
                                    'action': 'goToSlide',
                                    'slideshowID': s,
                                    'slideNum': i
                                });
                                Drupal.viewsSlideshow.action({
                                    'action': 'pause',
                                    'slideshowID': s
                                })
                            },
                            l = function() {
                                Drupal.viewsSlideshow.action({
                                    'action': 'play',
                                    'slideshowID': s
                                })
                            };
                        if (jQuery.fn.hoverIntent) {
                            e(o).hoverIntent(t, l)
                        } else {
                            e(o).hover(t, l)
                        }
                    })
                } else {
                    e(this).children().each(function(i, o) {
                        e(o).click(function() {
                            Drupal.viewsSlideshow.action({
                                'action': 'goToSlide',
                                'slideshowID': s,
                                'slideNum': i
                            })
                        })
                    })
                }
            })
        }
    };
    Drupal.viewsSlideshowPagerFields = Drupal.viewsSlideshowPagerFields || {};
    Drupal.viewsSlideshowPagerFields.transitionBegin = function(s) {
        for (pagerLocation in Drupal.settings.viewsSlideshowPager[s.slideshowID]) {
            e('[id^="views_slideshow_pager_field_item_' + pagerLocation + '_' + s.slideshowID + '"]').removeClass('active');
            e('#views_slideshow_pager_field_item_' + pagerLocation + '_' + s.slideshowID + '_' + s.slideNum).addClass('active')
        }
    };
    Drupal.viewsSlideshowPagerFields.goToSlide = function(s) {
        for (pagerLocation in Drupal.settings.viewsSlideshowPager[s.slideshowID]) {
            e('[id^="views_slideshow_pager_field_item_' + pagerLocation + '_' + s.slideshowID + '"]').removeClass('active');
            e('#views_slideshow_pager_field_item_' + pagerLocation + '_' + s.slideshowID + '_' + s.slideNum).addClass('active')
        }
    };
    Drupal.viewsSlideshowPagerFields.previousSlide = function(s) {
        for (pagerLocation in Drupal.settings.viewsSlideshowPager[s.slideshowID]) {
            var i = e('[id^="views_slideshow_pager_field_item_' + pagerLocation + '_' + s.slideshowID + '"].active').attr('id').replace('views_slideshow_pager_field_item_' + pagerLocation + '_' + s.slideshowID + '_', '');
            if (i == 0) {
                i = e('[id^="views_slideshow_pager_field_item_' + pagerLocation + '_' + s.slideshowID + '"]').length() - 1
            } else {
                i--
            };
            e('[id^="views_slideshow_pager_field_item_' + pagerLocation + '_' + s.slideshowID + '"]').removeClass('active');
            e('#views_slideshow_pager_field_item_' + pagerLocation + '_' + s.slideshowID + '_' + i).addClass('active')
        }
    };
    Drupal.viewsSlideshowPagerFields.nextSlide = function(s) {
        for (pagerLocation in Drupal.settings.viewsSlideshowPager[s.slideshowID]) {
            var i = e('[id^="views_slideshow_pager_field_item_' + pagerLocation + '_' + s.slideshowID + '"].active').attr('id').replace('views_slideshow_pager_field_item_' + pagerLocation + '_' + s.slideshowID + '_', ''),
                o = e('[id^="views_slideshow_pager_field_item_' + pagerLocation + '_' + s.slideshowID + '"]').length();
            i++;
            if (i == o) {
                i = 0
            };
            e('[id^="views_slideshow_pager_field_item_' + pagerLocation + '_' + s.slideshowID + '"]').removeClass('active');
            e('#views_slideshow_pager_field_item_' + pagerLocation + '_' + s.slideshowID + '_' + slideNum).addClass('active')
        }
    };
    Drupal.viewsSlideshowSlideCounter = Drupal.viewsSlideshowSlideCounter || {};
    Drupal.viewsSlideshowSlideCounter.transitionBegin = function(s) {
        e('#views_slideshow_slide_counter_' + s.slideshowID + ' .num').text(s.slideNum + 1)
    };
    Drupal.viewsSlideshow.action = function(e) {
        var i = {
            'value': !0,
            'text': ''
        };
        if (typeof e.action == 'undefined' || e.action == '') {
            i.value = !1;
            i.text = Drupal.t('There was no action specified.');
            return error
        };
        if (e.action == 'pause') {
            Drupal.settings.viewsSlideshow[e.slideshowID].paused = 1;
            if (e.force) {
                Drupal.settings.viewsSlideshow[e.slideshowID].pausedForce = 1
            }
        } else if (e.action == 'play') {
            if (!Drupal.settings.viewsSlideshow[e.slideshowID].pausedForce || e.force) {
                Drupal.settings.viewsSlideshow[e.slideshowID].paused = 0;
                Drupal.settings.viewsSlideshow[e.slideshowID].pausedForce = 0
            } else {
                i.value = !1;
                i.text += ' ' + Drupal.t('This slideshow is forced paused.');
                return i
            }
        };
        switch (e.action) {
            case 'goToSlide':
            case 'transitionBegin':
            case 'transitionEnd':
                if (typeof e.slideNum == 'undefined' || typeof e.slideNum !== 'number' || parseInt(e.slideNum) != (e.slideNum - 0)) {
                    i.value = !1;
                    i.text = Drupal.t('An invalid integer was specified for slideNum.')
                };
            case 'pause':
            case 'play':
            case 'nextSlide':
            case 'previousSlide':
                var o = Drupal.settings.viewsSlideshow[e.slideshowID]['methods'];
                var t = {};
                if (typeof e.excludeMethods !== 'undefined') {
                    for (var s = 0; s < excludeMethods.length; s++) {
                        t[excludeMethods[s]] = ''
                    }
                };
                for (s = 0; s < o[e.action].length; s++) {
                    if (Drupal[o[e.action][s]] != undefined && typeof Drupal[o[e.action][s]][e.action] == 'function' && !(o[e.action][s] in t)) {
                        Drupal[o[e.action][s]][e.action](e)
                    }
                };
                break;
            default:
                i.value = !1;
                i.text = Drupal.t('An invalid action "!action" was specified.', {
                    '!action': e.action
                })
        };
        return i
    }
})(jQuery);
(function(o) {
    Drupal.googleCSE = Drupal.googleCSE || {};
    Drupal.behaviors.googleCSE = {
        attach: function(o, e) {
            if (Drupal.settings.googleCSE.showWaterMark) {
                Drupal.googleCSE.googleCSEWatermark('#search-block-form.google-cse', o);
                Drupal.googleCSE.googleCSEWatermark('#search-form.google-cse', o);
                Drupal.googleCSE.googleCSEWatermark('#google-cse-results-searchbox-form', o)
            }
        }
    };
    Drupal.googleCSE.googleCSEWatermark = function(a, g) {
        var e = o(a, g)[0];
        if (e && (e.query || e['edit-search-block-form--2'] || e['edit-keys'])) {
            var r = e.query ? e.query : (e['edit-search-block-form--2'] ? e['edit-search-block-form--2'] : e['edit-keys']),
                t = navigator,
                s = location;
            if (t.platform == 'Win32') {
                r.style.cssText = 'border: 1px solid #7e9db9; padding: 2px;'
            };
            var l = function() {
                    if (r.value == '') {
                        r.style.background = '#FFFFFF url(https://www.google.com/cse/intl/' + Drupal.settings.googleCSE.language + '/images/google_custom_search_watermark.gif) left no-repeat'
                    }
                },
                e = function() {
                    r.style.background = '#ffffff'
                };
            r.onfocus = e;
            r.onblur = l;
            l()
        }
    }
})(jQuery);
(function(o, l, e, t, i) {
    l.behaviors.balloon_position = {
        attach: function(a, i) {
            o('.field-name-field-slide-image .image-widget-data #edit-field-slide-image-und-0-upload-button:not(.bf-processed)').each(function() {
                o(this).addClass('bf-processed').mousedown(function() {
                    setTimeout(function() {
                        if (o('#slideshow-node-form .field-name-field-slide-image .image-widget-data a').length > 0) {
                            var l = o('#slideshow-node-form .field-name-field-slide-image .image-widget-data a').attr('href');
                            if (o('.node-slideshow-form #coordinate_selector').length > 0) {
                                o('.node-slideshow-form #coordinate_selector').css({
                                    'background': 'url(' + l + ') no-repeat 0px 0px'
                                })
                            }
                        }
                    }, 1000)
                })
            });
            o(e).load(function() {
                if (o('#slideshow-node-form .field-name-field-slide-image .image-widget-data a').length > 0) {
                    var l = o('#slideshow-node-form .field-name-field-slide-image .image-widget-data a').attr('href');
                    if (o('.node-slideshow-form #coordinate_selector').length > 0) {
                        o('.node-slideshow-form #coordinate_selector').css({
                            'background': 'url(' + l + ') no-repeat 0px 0px'
                        })
                    }
                }
            });
            if (o('#coordinate_selector').length > 0) {
                var s = o('#coordinate_selector').css('width').replace('px', ''),
                    r = o('#coordinate_selector').css('height').replace('px', ''),
                    l = o('#edit-field-balloon-coordinate-y input').val(),
                    t = o('#edit-field-balloon-coordinate-x input').val();
                if ((o('#edit-field-balloon-coordinate-x input').val() != '') && (o('#edit-field-balloon-coordinate-y input').val() != '')) {
                    o('.balloon_cont').css('left', t + 'px');
                    o('.balloon_cont').css('top', l + 'px')
                } else {
                    o('.balloon_cont').hide()
                }
            };
            o('#edit-field-balloon-style .form-radios label:not(.bf-processed)').each(function() {
                o(this).addClass('bf-processed').click(function() {
                    o('.balloon_cont').removeClass('label_arrow-left-top').removeClass('label_arrow-left-bottom').removeClass('label_arrow-right-top').removeClass('label_arrow-right-bottom').removeClass('label_arrow-top-left').removeClass('label_arrow-top-right').removeClass('label_arrow-bottom-left').removeClass('label_arrow-bottom-right').addClass('label_' + o(this).parent().find('input').val())
                })
            });
            o('#coordinate_selector:not(.bf-processed)').each(function() {
                o(this).addClass('bf-processed').click(function(r) {
                    o('.balloon_cont').show();
                    var h = r.pageX - o(this).offset().left,
                        w = r.pageY - o(this).offset().top;
                    l = w;
                    t = h;
                    var n = o('#coordinate_selector').height(),
                        d = o('#coordinate_selector').width();
                    if (o('.balloon_cont').hasClass('label_arrow-left-top')) {
                        var e = t - 2,
                            a = l - 69,
                            i = o('.balloon_cont.label_arrow-left-top').height(),
                            s = o('.balloon_cont.label_arrow-left-top').width()
                    };
                    if (o('.balloon_cont').hasClass('label_arrow-left-bottom')) {
                        var e = t - 1,
                            a = l - 123,
                            i = o('.balloon_cont.label_arrow-left-bottom').height(),
                            s = o('.balloon_cont.label_arrow-left-bottom').width()
                    };
                    if (o('.balloon_cont').hasClass('label_arrow-right-top')) {
                        var e = t - 260,
                            a = l - 24,
                            i = o('.balloon_cont.label_arrow-right-top').height(),
                            s = o('.balloon_cont.label_arrow-right-top').width()
                    };
                    if (o('.balloon_cont').hasClass('label_arrow-right-bottom')) {
                        var e = t - 258,
                            a = l - 103,
                            i = o('.balloon_cont.label_arrow-right-bottom').height(),
                            s = o('.balloon_cont.label_arrow-right-bottom').width()
                    };
                    if (o('.balloon_cont').hasClass('label_arrow-top-left')) {
                        var e = t - 28,
                            a = l - 3,
                            i = o('.balloon_cont.label_arrow-top-left').height(),
                            s = o('.balloon_cont.label_arrow-top-left').width()
                    };
                    if (o('.balloon_cont').hasClass('label_arrow-top-right')) {
                        var e = t - 203,
                            a = l - 3,
                            i = o('.balloon_cont.label_arrow-top-right').height(),
                            s = o('.balloon_cont.label_arrow-top-right').width()
                    };
                    if (o('.balloon_cont').hasClass('label_arrow-bottom-left')) {
                        var e = t - 22.5,
                            a = l - 172,
                            i = o('.balloon_cont.label_arrow-bottom-left').height(),
                            s = o('.balloon_cont.label_arrow-bottom-left').width()
                    };
                    if (o('.balloon_cont').hasClass('label_arrow-bottom-right')) {
                        var e = t - 227,
                            a = l - 172,
                            i = o('.balloon_cont.label_arrow-bottom-right').height(),
                            s = o('.balloon_cont.label_arrow-bottom-right').width()
                    };
                    if (a + i > n) {
                        a = n - i
                    };
                    if (e + s > d) {
                        e = d - s
                    };
                    if (a < 0) {
                        a = 0
                    };
                    if (e < 0) {
                        e = 0
                    };
                    o('#edit-field-balloon-coordinate-x input').val(e.toFixed(2));
                    o('#edit-field-balloon-coordinate-y input').val(a.toFixed(2));
                    o('.balloon_cont').css('top', a.toFixed(2) + 'px');
                    o('.balloon_cont').css('left', e.toFixed(2) + 'px')
                })
            })
        }
    };
    l.behaviors.ballon_showing = {
        attach: function(s) {
            o(t).ready(function() {
                if (o('.view-slideshow').length > 0) {
                    o('.view-slideshow').each(function() {
                        var i = o(this).closest('.block-views').attr('id'),
                            l = o('#' + i + ' .view-slideshow'),
                            s = l.offset().top,
                            r = s - (o(e).height() - o(l).height());
                        o(e).scroll(function() {
                            if (r <= o(t).scrollTop()) {
                                if (!o(l).hasClass('not_first_time')) {
                                    a(i);
                                    o(l).addClass('not_first_time')
                                }
                            }
                        })
                    })
                };
                if (o('.page-node-87').length > 0) {
                    o('.arrow_box').each(function() {
                        o(this).css('top', -o(this).height() / 2 - 10)
                    })
                }
            });
            o('.view-slideshow .views-slideshow-controls-text-previous:not(.bf-processed), .view-slideshow .views-slideshow-controls-text-next:not(.bf-processed), .views-slideshow-controls-top .views-slideshow-pager-field-item .views-field-title:not(.bf-processed)').each(function() {
                o(this).addClass('bf-processed').click(function() {
                    o('.view-slideshow .views-slideshow-cycle-main-frame-row').fadeIn(10);
                    var e = o(this).closest('.block-views').attr('id');
                    o('.view-slideshow .balloon_wrapper').hide();
                    if (l.settings.belfabriek_slideshow_timer != i) {
                        clearTimeout(l.settings.belfabriek_slideshow_timer)
                    };
                    l.settings.belfabriek_slideshow_timer = setTimeout(function() {
                        a(e)
                    }, 800)
                })
            })
        }
    };

    function a(e) {
        var i = o('#' + e + ' .view-slideshow .views-slideshow-pager-field-item.active').attr('id').split('_'),
            l = '#views_slideshow_cycle_div_slideshow-block_' + i[7],
            t = o('#' + e + ' .view-slideshow ' + l + ' .balloon .balloon_wrapper').attr('initial_x'),
            a = o('#' + e + ' .view-slideshow ' + l + ' .balloon .balloon_wrapper').attr('initial_y');
        o('#' + e + ' .view-slideshow .balloon .balloon_wrapper').stop(!0, !0);
        if (o('#' + e + ' .view-slideshow ' + l + ' .balloon .balloon-type-arrow-left-top, .view-slideshow ' + l + ' .balloon .balloon-type-arrow-left-bottom').length > 0) {
            o('#' + e + ' .view-slideshow ' + l + ' .balloon .balloon-type-arrow-left-top, .view-slideshow ' + l + ' .balloon .balloon-type-arrow-left-bottom').hide().css('left', t + 'px').animate({
                'left': '-=10px',
                opacity: 'show'
            }, 'slow')
        };
        if (o('#' + e + ' .view-slideshow ' + l + ' .balloon .balloon-type-arrow-right-top, .view-slideshow ' + l + ' .balloon .balloon-type-arrow-right-bottom').length > 0) {
            o('#' + e + ' .view-slideshow ' + l + ' .balloon .balloon-type-arrow-right-top, .view-slideshow ' + l + ' .balloon .balloon-type-arrow-right-bottom').hide().css('left', t + 'px').animate({
                'left': '+=10px',
                opacity: 'show'
            }, 'slow')
        };
        if (o('#' + e + ' .view-slideshow ' + l + ' .balloon .balloon-type-arrow-top-left, .view-slideshow ' + l + ' .balloon .balloon-type-arrow-top-right').length > 0) {
            o('#' + e + ' .view-slideshow ' + l + ' .balloon .balloon-type-arrow-top-left, .view-slideshow ' + l + ' .balloon .balloon-type-arrow-top-right').hide().css('top', a + 'px').animate({
                'top': '-=10px',
                opacity: 'show'
            }, 'slow')
        };
        if (o('#' + e + ' .view-slideshow ' + l + ' .balloon .balloon-type-arrow-bottom-left, .view-slideshow ' + l + ' .balloon .balloon-type-arrow-bottom-right').length > 0) {
            o('#' + e + ' .view-slideshow ' + l + ' .balloon .balloon-type-arrow-bottom-left, .view-slideshow ' + l + ' .balloon .balloon-type-arrow-bottom-right').hide().css('top', a + 'px').animate({
                'top': '+=10px',
                opacity: 'show'
            }, 'slow')
        }
    }
})(jQuery, Drupal, this, this.document);
(function(a) {
    Drupal.behaviors.numbershop_change_setting = {
        attach: function(t, e) {
            a('.numbershop-use-ajax').once('bf', function() {
                a(this).click(function() {
                    var t = a(this),
                        e = 'table=' + t.data('table');
                    e += '&id=' + t.data('id');
                    e += '&key=' + t.data('key');
                    e += '&value=' + t.data('value');
                    a.ajax({
                        url: Drupal.settings.basePath + 'numbershop/ajax/change-setting',
                        type: 'POST',
                        dataType: 'json',
                        data: e,
                        cache: !1,
                        success: function(a) {
                            if (a != !1) {
                                t.replaceWith(a);
                                Drupal.attachBehaviors(t)
                            }
                        },
                        error: function(a, t) {
                            alert(t)
                        }
                    })
                })
            })
        }
    }
})(jQuery);
(function(a) {
    Drupal.behaviors.nummershop_show_more_numbers = {
        attach: function(r, e) {
            a('.number_blocks .load_more').once('bf', function() {
                a(this).click(function() {
                    var r = a(this);
                    a(this).parent().find('.ajax_overlay').show();
                    var e = 'block_id=' + r.data('block_id');
                    e += '&range=' + r.data('range');
                    e += '&type=' + r.data('type');
                    e += '&is_group=' + r.data('is_group');
                    a.ajax({
                        url: Drupal.settings.basePath + 'numbershop/ajax/show_more_numbers',
                        type: 'POST',
                        dataType: 'json',
                        data: e,
                        cache: !1,
                        success: function(a) {
                            var e = r.closest('.numberblock_wrapper');
                            e.replaceWith(a);
                            Drupal.attachBehaviors(e)
                        },
                        error: function(a, r) {
                            alert(r)
                        }
                    })
                })
            })
        }
    }
})(jQuery);
(function(a) {
    Drupal.behaviors.nummershop_add_to_cart = {
        attach: function(p, i) {
            a('.number_blocks .number_row.cart_action, .numbershop_cart .remove_from_cart').once('bf', function() {
                a(this).click(function() {
                    var i = a(this);
                    r(i, 'show');
                    data = 'id=' + i.data('number_id');
                    if (i.data('number_word') !== undefined) {
                        data += '&number_word=' + i.data('number_word')
                    };
                    if (a(this).hasClass('remove_from_cart')) {
                        var l = 'remove'
                    } else {
                        var l = 'add'
                    };
                    if (a('.cart_page_container').length > 0) {
                        var p = 'cart_page'
                    } else {
                        if (a('#block-callfactory-numbershop-cart-shopping-cart').length > 0) {
                            var p = 'numbershop_page'
                        } else {
                            var p = 'product_page'
                        }
                    };
                    data += '&page=' + p;
                    data += '&type=' + l;
                    a.ajax({
                        url: Drupal.settings.basePath + 'numbershop/ajax/add_remove_cart',
                        type: 'POST',
                        dataType: 'json',
                        data: data,
                        cache: !1,
                        success: function(u) {
                            if (u.status != 0) {
                                if (l == 'add') {
                                    if (p === 'product_page') {
                                        if (u.popup_details != undefined) {
                                            c(u.popup_details);
                                            a('#block-callfactory-numbershop-cart-add-to-cart-popup').fadeIn()
                                        }
                                    }
                                } else {
                                    if (p === 'cart_page') {
                                        o(u)
                                    }
                                };
                                if (p === 'numbershop_page') {
                                    n(u);
                                    if ((u.popup_details != undefined) && (u.popup_details.numbertype_id == '1')) {
                                        s(i, u.popup_details);
                                        a('#block-callfactory-numbershop-cart-add-to-cart-popup').fadeIn()
                                    }
                                };
                                t(u);
                                if (p !== 'cart_page') {
                                    e(i, (p === 'numbershop_page') && (i.parent().hasClass('numbershop_cart')))
                                };
                                r(i, 'hide');
                                if (a('#block-callfactory-numbershop-cart-shopping-cart').length > 0) {
                                    Drupal.cartRefresh()
                                }
                            } else {
                                alert(u.message)
                            }
                        },
                        error: function(a, r) {
                            alert(r)
                        }
                    })
                })
            })
        }
    };
    Drupal.behaviors.nummershop_close_popup = {
        attach: function(r, e) {
            a('.close_popup, .back-overlay, .simple_popup_container .popup-button').once('bf', function() {
                a(this).click(function() {
                    a('#block-callfactory-numbershop-cart-add-to-cart-popup').fadeOut();
                    a('body').removeAttr('style')
                })
            })
        }
    };

    function e(r, e) {
        var t = r.data('number_id');
        a('.number_blocks .number_row[data-number_id=' + t + ']').toggleClass('remove_from_cart');
        if (e) {} else {}
    };

    function t(r) {
        var e = '';
        if (r.cart_values.count == 0) {
            a('#shop-cart').removeClass('cart-not-empty')
        } else {
            if (!a('#shop-cart').hasClass('cart-not-empty')) {
                a('#shop-cart').addClass('cart-not-empty')
            };
            e = '<span>' + r.cart_values.count + '</span>'
        };
        a('#shop-cart').html(e);
        if (a('.fixed-header-navigation .cart span').length > 0) {
            a('.fixed-header-navigation .cart span').html(r.cart_values.count)
        } else {
            a('.fixed-header-navigation .cart a').html('<span>' + r.cart_values.count + '</span>')
        }
    };

    function o(r) {
        a('.cart_page_container').html(r.cart_page);
        if (r.cart_values.count == 0) {
            a('#callfactory-numbershop-search-form #edit-prefix').dropkick()
        };
        Drupal.attachBehaviors(a('.cart_page_container').parent())
    };

    function n(r) {
        a('#block-callfactory-numbershop-cart-shopping-cart .available_numbers.total_block').replaceWith(r.cart_numbershop);
        Drupal.attachBehaviors(a('#block-callfactory-numbershop-cart-shopping-cart .available_numbers.total_block'))
    };

    function r(r, e) {
        if (e == 'show') {
            var t = r.data('number_id');
            a('.number_blocks').each(function() {
                if (a(this).find('.number_row[data-number_id=' + t + ']').length > 0) {
                    a(this).find('.ajax_overlay').show()
                }
            });
            if (a('#block-callfactory-numbershop-cart-shopping-cart').length > 0) {
                a('#block-callfactory-numbershop-cart-shopping-cart .ajax_overlay').show()
            }
        };
        if (e == 'hide') {
            a('.number_blocks').find('.ajax_overlay').hide();
            if (a('#block-callfactory-numbershop-cart-shopping-cart').length > 0) {
                a('#block-callfactory-numbershop-cart-shopping-cart .ajax_overlay').hide()
            }
        }
    };

    function c(r) {
        if (a('.current_order_count').length > 0) {
            a('.current_order_count').html(r.current_order_count)
        };
        if (a('.current_order_prefix').length > 0) {
            a('.current_order_prefix').html(r.prefix)
        };
        if (a('.current_order_number').length > 0) {
            a('.current_order_number').html(r.display_number)
        };
        if (r.numbertype_id == '1') {
            a('.nl_0800_short_message').show()
        } else {
            a('.nl_0800_short_message').hide()
        }
    };

    function s(r, t) {
        var e = a('.simple_popup_container'),
            n = 263,
            p = 38,
            c = 20,
            o = r.offset().top - a(window).scrollTop(),
            s = ((r.offset().left) - ((e.width() / 2) - (r.width() / 2))),
            i = ((a(window).width() / 2) - (e.width() / 2)),
            l = (a(window).height() / 2) - (n / 2),
            u = o - n - c,
            h = o + p + c;
        e.removeClass('arrow-top no-arrow');
        if (o > 230) {
            e.css({
                'top': u,
                'left': s
            })
        } else if (o <= 230 && a(window).height() < 530) {
            e.addClass('no-arrow');
            e.css({
                'top': l,
                'left': i
            })
        } else {
            e.addClass('arrow-top');
            e.css({
                'top': h,
                'left': s
            })
        };
        if (!r.hasClass('remove_from_cart')) {
            a('body').css('overflow', 'hidden')
        }
    }
})(jQuery);
(function(e) {
    Drupal.behaviors.numbershop_mijn_login = {
        attach: function(t, a) {
            e('#edit-mijn-login').once('bf', function() {
                e(this).click(function(t) {
                    t.preventDefault();
                    var a = !1;
                    a = i(!1);
                    if (a) {
                        Drupal.attachBehaviors(e('#callfactory-numbershop-order-mijn-login-form'));
                        return !1
                    };
                    var n = 'user=' + e('#edit-mijn-user').val() + '&password=' + e('#edit-mijn-password').val();
                    e.ajax({
                        url: Drupal.settings.basePath + 'numbershop/ajax/login_mijn',
                        type: 'POST',
                        dataType: 'json',
                        data: n,
                        cache: !1,
                        success: function(t) {
                            if (t.status == 1) {
                                if (t.data.contact_gender_id == 2) {
                                    e('#edit-personal-title-mrs').attr('checked', 'checked')
                                } else {
                                    e('#edit-personal-title-mr').attr('checked', 'checked')
                                };
                                e('.messages-inline-error').hide();
                                e('.form-text').removeClass('error');
                                e('#edit-surname').val(t.data.contact_name);
                                e('#edit-first-name').val(t.data.contact_initials);
                                e('#edit-email').val(t.data.email);
                                e('#edit-phone-number').val(t.data.contact_gsm);
                                e('#edit-company-name').val(t.data.name);
                                e('#edit-street').val(t.data.street);
                                e('#edit-house-number').val(t.data.housenumber);
                                e('#edit-postcode').val(t.data.postcode);
                                e('#edit-city').val(t.data.city);
                                e('#edit-country').val(t.data.country_id);
                                e('#edit-country').dropkick('refresh');
                                e('#edit-billing-street').val(t.data.street);
                                e('#edit-billing-house-number').val(t.data.housenumber);
                                e('#edit-billing-postcode').val(t.data.postcode);
                                e('#edit-billing-city').val(t.data.city);
                                e('#edit-billing-country').val(t.data.country_id);
                                e('#edit-billing-country').dropkick('refresh');
                                e('.checkout_container').addClass('login-complete');
                                setTimeout(function() {
                                    e('.checkout_container .left_side_wrapper').hide()
                                }, 1000)
                            } else {
                                a = i(!0);
                                Drupal.attachBehaviors(e('#callfactory-numbershop-order-mijn-login-form'))
                            }
                        },
                        error: function(e, i) {
                            alert(i)
                        }
                    })
                })
            })
        }
    };

    function i(i) {
        var t = !1;
        if ((e('#edit-mijn-user').val() == '') || (e('#edit-mijn-user').val() == 'demo') || i) {
            if (e('.form-item-mijn-user .messages-inline-error').length <= 0) {
                e('.form-item-mijn-user').append('<div class="messages-inline-error">' + Drupal.t('Invalid Username') + '</div>');
                e('#edit-mijn-user').addClass('error')
            };
            t = !0
        };
        if ((e('#edit-mijn-password').val() == '') || ((e('#edit-mijn-user').val() == 'demo') && (e('#edit-mijn-password').val() == 'demo')) || i) {
            if (e('.form-item-mijn-password .messages-inline-error').length <= 0) {
                e('.form-item-mijn-password').append('<div class="messages-inline-error">' + Drupal.t('Invalid Password') + '</div>');
                e('#edit-mijn-password').addClass('error')
            };
            t = !0
        };
        return t
    };
    Drupal.behaviors.billing_address_address = {
        attach: function(i, t) {
            e('#edit-postcode, #edit-house-number, #edit-street, #edit-city').once('bf', function() {
                e(this).blur(function() {
                    if (e('#edit-billing-address-diff:checked').length > 0) {
                        e('#edit-billing-postcode').val(e('#edit-postcode').val());
                        e('#edit-billing-house-number').val(e('#edit-house-number').val());
                        e('#edit-billing-street').val(e('#edit-street').val());
                        e('#edit-billing-city').val(e('#edit-city').val())
                    }
                })
            });
            e('#edit-billing-address-diff').once('bf', function() {
                e(this).change(function() {
                    if (e(this).is(':checked')) {
                        e('#edit-billing-house-number').val(e('#edit-house-number').val());
                        e('#edit-billing-postcode').val(e('#edit-postcode').val());
                        e('#edit-billing-street').val(e('#edit-street').val());
                        e('#edit-billing-city').val(e('#edit-city').val());
                        e('#edit-billing-country').val(e('#edit-country').val());
                        e('#edit-billing-country').dropkick('refresh');
                        e('.billing-container').addClass('disabled')
                    } else {
                        e('.billing-container').removeClass('disabled')
                    }
                })
            })
        }
    };
    Drupal.behaviors.betaling_per_change_new = {
        attach: function(i, t) {
            e('.form-item-customer-type input').once('bf', function() {
                e(this).change(function() {
                    if (e(this).val() == 'private_customer') {
                        e('#edit-payment option[value=1]').attr('selected', 'selected');
                        e('#edit-payment option[value=2]').removeAttr('selected');
                        e('#edit-payment').val('1').dropkick('refresh').dropkick('disable');
                        e('#edit-company-name').data('default_value', e('#edit-company-name').val()).val('');
                        e('#edit-company-name').val('')
                    } else {
                        e('#edit-payment').dropkick('refresh').dropkick('disable', !1);
                        e('#edit-company-name').val(e('#edit-company-name').data('default_value'))
                    }
                })
            })
        }
    };
    e(document).ready(function() {
        if (e('.page_numbershop_checkout_complete').length > 0) {
            e.ajax({
                url: Drupal.settings.basePath + 'numbershop/ajax/checkout_complete',
                type: 'POST',
                dataType: 'json',
                cache: !1,
                success: function(e) {},
            })
        };
        if (e('#edit-country.form-select').length > 0) {
            e('#edit-country.form-select').dropkick({
                change: function(i, t) {
                    if (e('#edit-billing-address-diff:checked').length > 0) {
                        e('#edit-billing-country').val(i);
                        e('#edit-billing-country').dropkick('refresh')
                    }
                }
            });
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#edit-payment').length > 0) {
            e('#edit-payment').dropkick({
                change: function(e, i) {}
            });
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#edit-billing-country').length > 0) {
            e('#edit-billing-country').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        }
    })
})(jQuery);
(function(e) {
    Drupal.behaviors.online_order_webform = {
        attach: function(n, o) {
            e('.block-callfactory-numbershop-international .more_numbers:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function(n) {
                    t(e(this).parent().find('.form-item-tel-number'), '');
                    Drupal.attachBehaviors('.block-callfactory-numbershop-international')
                })
            })
        }
    };

    function t(t, n) {
        var o = '<input type="text" value="' + n + '" size="60" maxlength="128" class="form-text more last_more">';
        e('.last_more').removeClass('last_more');
        t.append(o)
    };
    Drupal.behaviors.telephone_numbers = {
        attach: function(t, n) {
            e('.block-callfactory-numbershop-international #edit-next-step:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function(t) {
                    var n = '';
                    if (e('.block-callfactory-numbershop-international #edit-tel-number').length > 0) {
                        var o = '.block-callfactory-numbershop-international #edit-tel-number',
                            a = '.block-callfactory-numbershop-international .more',
                            l = '#tel_number_list'
                    };
                    n = e(o).val();
                    e(a).each(function() {
                        if (e(this).val() != '') {
                            if (n != '') {
                                n += '@' + e(this).val()
                            } else {
                                n = e(this).val();
                                e(o).val(e(this).val())
                            }
                        }
                    });
                    e(l).val(n)
                })
            })
        }
    };
    e(window).load(function() {
        if (e('.block-callfactory-numbershop-international').length > 0) {
            if (e('#tel_number_list').val() != '') {
                var o = e('#tel_number_list').val().split('@'),
                    a = o.length;
                for (var n = 1; n < a; n++) {
                    t(e('.form-item-tel-number'), o[n])
                }
            }
        }
    });
    e(document).ready(function() {
        if (e('#edit-number-country').length > 0) {
            e('#edit-number-country').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        }
    })
})(jQuery);
(function(a) {
    Drupal.behaviors.nummershop_show_more_alternative_numbers = {
        attach: function(e, r) {
            a('.number_blocks .load_more_alternative').once('bf', function() {
                a(this).click(function() {
                    var e = a(this);
                    a(this).parent().parent().find('.ajax_overlay').show();
                    var r = 'numbertype_id=' + e.data('numbertype_id');
                    r += '&range=' + e.data('range');
                    r += '&search_string=' + e.data('search-string');
                    a.ajax({
                        url: Drupal.settings.basePath + 'numbershop/ajax/show_more_alternative_numbers',
                        type: 'POST',
                        dataType: 'json',
                        data: r,
                        cache: !1,
                        success: function(a) {
                            var r = e.closest('.number_blocks');
                            r.replaceWith(a);
                            Drupal.attachBehaviors(r)
                        },
                        error: function(a, e) {
                            alert(e)
                        }
                    })
                })
            })
        }
    }
})(jQuery);
(function(e) {
    Drupal.behaviors.belbundel_hide = {
        attach: function(n, a) {
            e('#aansluiten .form-item-tel-number input').once('b', function() {
                e(this).on('focusout', function() {
                    t()
                })
            })
        }
    };

    function t() {
        var t = !1;
        e('#aansluiten .form-item-tel-number input[type=text]').each(function() {
            var n = e(this).val();
            if (n.match('^31') || n.match('^0031') || (n.substring(0, 3) === '+31')) {
                t = !0
            };
            if ((n.substring(0, 1) === '0') && (n.substring(0, 2) !== '00')) {
                t = !0
            }
        });
        if (t) {
            e('#aansluiten .belbundel_wrapper').show();
            e('#aansluiten .form-item-belbundel input').attr('checked', !0)
        } else {
            e('#aansluiten .form-item-belbundel input').attr('checked', !1);
            e('#aansluiten .belbundel_wrapper').hide()
        }
    };
    Drupal.behaviors.online_order_webform = {
        attach: function(t, a) {
            e('#aansluiten .more_numbers:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function(t) {
                    n(e(this).parent().find('.form-item-tel-number'), '');
                    Drupal.attachBehaviors('#aansluiten')
                })
            })
        }
    };

    function n(t, n) {
        var a = '<input type="text" value="' + n + '" size="60" maxlength="128" class="form-text more last_more">';
        e('.last_more').removeClass('last_more');
        t.append(a)
    };
    Drupal.behaviors.telephone_numbers = {
        attach: function(t, n) {
            e('#aansluiten #edit-next-step:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function(t) {
                    var n = '';
                    if (e('#aansluiten #edit-tel-number').length > 0) {
                        var a = '#aansluiten #edit-tel-number',
                            i = '#aansluiten .more',
                            l = '#tel_number_list'
                    };
                    n = e(a).val();
                    e(i).each(function() {
                        if (e(this).val() != '') {
                            if (n != '') {
                                n += '@' + e(this).val()
                            } else {
                                n = e(this).val();
                                e(a).val(e(this).val())
                            }
                        }
                    });
                    e(l).val(n)
                })
            })
        }
    };
    e(document).ready(function() {
        if (e('#aansluiten').length > 0) {
            if (e('#tel_number_list').length > 0) {
                if (e('#tel_number_list').val() != '') {
                    var i = e('#tel_number_list').val().split('@'),
                        l = i.length;
                    for (var a = 1; a < l; a++) {
                        n(e('.form-item-tel-number'), i[a])
                    }
                };
                t()
            }
        }
    })
})(jQuery);
/*
 * jQuery Cycle Plugin (with Transition Definitions)
 * Examples and documentation at: http://jquery.malsup.com/cycle/
 * Copyright (c) 2007-2010 M. Alsup
 * Version: 2.86 (05-APR-2010)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 * Requires: jQuery v1.2.6 or later
 */
(function($) {
    var ver = "2.86";
    if ($.support == undefined) {
        $.support = {
            opacity: !($.browser.msie)
        };
    }

    function debug(s) {
        if ($.fn.cycle.debug) {
            log(s);
        }
    }

    function log() {
        if (window.console && window.console.log) {
            window.console.log("[cycle] " + Array.prototype.join.call(arguments, " "));
        }
    }
    $.fn.cycle = function(options, arg2) {
        var o = {
            s: this.selector,
            c: this.context
        };
        if (this.length === 0 && options != "stop") {
            if (!$.isReady && o.s) {
                log("DOM not ready, queuing slideshow");
                $(function() {
                    $(o.s, o.c).cycle(options, arg2);
                });
                return this;
            }
            log("terminating; zero elements found by selector" + ($.isReady ? "" : " (DOM not ready)"));
            return this;
        }
        return this.each(function() {
            var opts = handleArguments(this, options, arg2);
            if (opts === false) {
                return;
            }
            opts.updateActivePagerLink = opts.updateActivePagerLink || $.fn.cycle.updateActivePagerLink;
            if (this.cycleTimeout) {
                clearTimeout(this.cycleTimeout);
            }
            this.cycleTimeout = this.cyclePause = 0;
            var $cont = $(this);
            var $slides = opts.slideExpr ? $(opts.slideExpr, this) : $cont.children();
            var els = $slides.get();
            if (els.length < 2) {
                log("terminating; too few slides: " + els.length);
                return;
            }
            var opts2 = buildOptions($cont, $slides, els, opts, o);
            if (opts2 === false) {
                return;
            }
            var startTime = opts2.continuous ? 10 : getTimeout(opts2.currSlide, opts2.nextSlide, opts2, !opts2.rev);
            if (startTime) {
                startTime += (opts2.delay || 0);
                if (startTime < 10) {
                    startTime = 10;
                }
                debug("first timeout: " + startTime);
                this.cycleTimeout = setTimeout(function() {
                    go(els, opts2, 0, !opts2.rev);
                }, startTime);
            }
        });
    };

    function handleArguments(cont, options, arg2) {
        if (cont.cycleStop == undefined) {
            cont.cycleStop = 0;
        }
        if (options === undefined || options === null) {
            options = {};
        }
        if (options.constructor == String) {
            switch (options) {
                case "destroy":
                case "stop":
                    var opts = $(cont).data("cycle.opts");
                    if (!opts) {
                        return false;
                    }
                    cont.cycleStop++;
                    if (cont.cycleTimeout) {
                        clearTimeout(cont.cycleTimeout);
                    }
                    cont.cycleTimeout = 0;
                    $(cont).removeData("cycle.opts");
                    if (options == "destroy") {
                        destroy(opts);
                    }
                    return false;
                case "toggle":
                    cont.cyclePause = (cont.cyclePause === 1) ? 0 : 1;
                    checkInstantResume(cont.cyclePause, arg2, cont);
                    return false;
                case "pause":
                    cont.cyclePause = 1;
                    return false;
                case "resume":
                    cont.cyclePause = 0;
                    checkInstantResume(false, arg2, cont);
                    return false;
                case "prev":
                case "next":
                    var opts = $(cont).data("cycle.opts");
                    if (!opts) {
                        log('options not found, "prev/next" ignored');
                        return false;
                    }
                    $.fn.cycle[options](opts);
                    return false;
                default:
                    options = {
                        fx: options
                    };
            }
            return options;
        } else {
            if (options.constructor == Number) {
                var num = options;
                options = $(cont).data("cycle.opts");
                if (!options) {
                    log("options not found, can not advance slide");
                    return false;
                }
                if (num < 0 || num >= options.elements.length) {
                    log("invalid slide index: " + num);
                    return false;
                }
                options.nextSlide = num;
                if (cont.cycleTimeout) {
                    clearTimeout(cont.cycleTimeout);
                    cont.cycleTimeout = 0;
                }
                if (typeof arg2 == "string") {
                    options.oneTimeFx = arg2;
                }
                go(options.elements, options, 1, num >= options.currSlide);
                return false;
            }
        }
        return options;

        function checkInstantResume(isPaused, arg2, cont) {
            if (!isPaused && arg2 === true) {
                var options = $(cont).data("cycle.opts");
                if (!options) {
                    log("options not found, can not resume");
                    return false;
                }
                if (cont.cycleTimeout) {
                    clearTimeout(cont.cycleTimeout);
                    cont.cycleTimeout = 0;
                }
                go(options.elements, options, 1, 1);
            }
        }
    }

    function removeFilter(el, opts) {
        if (!$.support.opacity && opts.cleartype && el.style.filter) {
            try {
                el.style.removeAttribute("filter");
            } catch (smother) {}
        }
    }

    function destroy(opts) {
        if (opts.next) {
            $(opts.next).unbind(opts.prevNextEvent);
        }
        if (opts.prev) {
            $(opts.prev).unbind(opts.prevNextEvent);
        }
        if (opts.pager || opts.pagerAnchorBuilder) {
            $.each(opts.pagerAnchors || [], function() {
                this.unbind().remove();
            });
        }
        opts.pagerAnchors = null;
        if (opts.destroy) {
            opts.destroy(opts);
        }
    }

    function buildOptions($cont, $slides, els, options, o) {
        var opts = $.extend({}, $.fn.cycle.defaults, options || {}, $.metadata ? $cont.metadata() : $.meta ? $cont.data() : {});
        if (opts.autostop) {
            opts.countdown = opts.autostopCount || els.length;
        }
        var cont = $cont[0];
        $cont.data("cycle.opts", opts);
        opts.$cont = $cont;
        opts.stopCount = cont.cycleStop;
        opts.elements = els;
        opts.before = opts.before ? [opts.before] : [];
        opts.after = opts.after ? [opts.after] : [];
        opts.after.unshift(function() {
            opts.busy = 0;
        });
        if (!$.support.opacity && opts.cleartype) {
            opts.after.push(function() {
                removeFilter(this, opts);
            });
        }
        if (opts.continuous) {
            opts.after.push(function() {
                go(els, opts, 0, !opts.rev);
            });
        }
        saveOriginalOpts(opts);
        if (!$.support.opacity && opts.cleartype && !opts.cleartypeNoBg) {
            clearTypeFix($slides);
        }
        if ($cont.css("position") == "static") {
            $cont.css("position", "relative");
        }
        if (opts.width) {
            $cont.width(opts.width);
        }
        if (opts.height && opts.height != "auto") {
            $cont.height(opts.height);
        }
        if (opts.startingSlide) {
            opts.startingSlide = parseInt(opts.startingSlide);
        }
        if (opts.random) {
            opts.randomMap = [];
            for (var i = 0; i < els.length; i++) {
                opts.randomMap.push(i);
            }
            opts.randomMap.sort(function(a, b) {
                return Math.random() - 0.5;
            });
            opts.randomIndex = 1;
            opts.startingSlide = opts.randomMap[1];
        } else {
            if (opts.startingSlide >= els.length) {
                opts.startingSlide = 0;
            }
        }
        opts.currSlide = opts.startingSlide || 0;
        var first = opts.startingSlide;
        $slides.css({
            position: "absolute",
            top: 0,
            left: 0
        }).hide().each(function(i) {
            var z = first ? i >= first ? els.length - (i - first) : first - i : els.length - i;
            $(this).css("z-index", z);
        });
        $(els[first]).css("opacity", 1).show();
        removeFilter(els[first], opts);
        if (opts.fit && opts.width) {
            $slides.width(opts.width);
        }
        if (opts.fit && opts.height && opts.height != "auto") {
            $slides.height(opts.height);
        }
        var reshape = opts.containerResize && !$cont.innerHeight();
        if (reshape) {
            var maxw = 0,
                maxh = 0;
            for (var j = 0; j < els.length; j++) {
                var $e = $(els[j]),
                    e = $e[0],
                    w = $e.outerWidth(),
                    h = $e.outerHeight();
                if (!w) {
                    w = e.offsetWidth || e.width || $e.attr("width");
                }
                if (!h) {
                    h = e.offsetHeight || e.height || $e.attr("height");
                }
                maxw = w > maxw ? w : maxw;
                maxh = h > maxh ? h : maxh;
            }
            if (maxw > 0 && maxh > 0) {
                $cont.css({
                    width: maxw + "px",
                    height: maxh + "px"
                });
            }
        }
        if (opts.pause) {
            $cont.hover(function() {
                this.cyclePause++;
            }, function() {
                this.cyclePause--;
            });
        }
        if (supportMultiTransitions(opts) === false) {
            return false;
        }
        var requeue = false;
        options.requeueAttempts = options.requeueAttempts || 0;
        $slides.each(function() {
            var $el = $(this);
            this.cycleH = (opts.fit && opts.height) ? opts.height : ($el.height() || this.offsetHeight || this.height || $el.attr("height") || 0);
            this.cycleW = (opts.fit && opts.width) ? opts.width : ($el.width() || this.offsetWidth || this.width || $el.attr("width") || 0);
            if ($el.is("img")) {
                var loadingIE = ($.browser.msie && this.cycleW == 28 && this.cycleH == 30 && !this.complete);
                var loadingFF = ($.browser.mozilla && this.cycleW == 34 && this.cycleH == 19 && !this.complete);
                var loadingOp = ($.browser.opera && ((this.cycleW == 42 && this.cycleH == 19) || (this.cycleW == 37 && this.cycleH == 17)) && !this.complete);
                var loadingOther = (this.cycleH == 0 && this.cycleW == 0 && !this.complete);
                if (loadingIE || loadingFF || loadingOp || loadingOther) {
                    if (o.s && opts.requeueOnImageNotLoaded && ++options.requeueAttempts < 100) {
                        log(options.requeueAttempts, " - img slide not loaded, requeuing slideshow: ", this.src, this.cycleW, this.cycleH);
                        setTimeout(function() {
                            $(o.s, o.c).cycle(options);
                        }, opts.requeueTimeout);
                        requeue = true;
                        return false;
                    } else {
                        log("could not determine size of image: " + this.src, this.cycleW, this.cycleH);
                    }
                }
            }
            return true;
        });
        if (requeue) {
            return false;
        }
        opts.cssBefore = opts.cssBefore || {};
        opts.animIn = opts.animIn || {};
        opts.animOut = opts.animOut || {};
        $slides.not(":eq(" + first + ")").css(opts.cssBefore);
        if (opts.cssFirst) {
            $($slides[first]).css(opts.cssFirst);
        }
        if (opts.timeout) {
            opts.timeout = parseInt(opts.timeout);
            if (opts.speed.constructor == String) {
                opts.speed = $.fx.speeds[opts.speed] || parseInt(opts.speed);
            }
            if (!opts.sync) {
                opts.speed = opts.speed / 2;
            }
            var buffer = opts.fx == "shuffle" ? 500 : 250;
            while ((opts.timeout - opts.speed) < buffer) {
                opts.timeout += opts.speed;
            }
        }
        if (opts.easing) {
            opts.easeIn = opts.easeOut = opts.easing;
        }
        if (!opts.speedIn) {
            opts.speedIn = opts.speed;
        }
        if (!opts.speedOut) {
            opts.speedOut = opts.speed;
        }
        opts.slideCount = els.length;
        opts.currSlide = opts.lastSlide = first;
        if (opts.random) {
            if (++opts.randomIndex == els.length) {
                opts.randomIndex = 0;
            }
            opts.nextSlide = opts.randomMap[opts.randomIndex];
        } else {
            opts.nextSlide = opts.startingSlide >= (els.length - 1) ? 0 : opts.startingSlide + 1;
        }
        if (!opts.multiFx) {
            var init = $.fn.cycle.transitions[opts.fx];
            if ($.isFunction(init)) {
                init($cont, $slides, opts);
            } else {
                if (opts.fx != "custom" && !opts.multiFx) {
                    log("unknown transition: " + opts.fx, "; slideshow terminating");
                    return false;
                }
            }
        }
        var e0 = $slides[first];
        if (opts.before.length) {
            opts.before[0].apply(e0, [e0, e0, opts, true]);
        }
        if (opts.after.length > 1) {
            opts.after[1].apply(e0, [e0, e0, opts, true]);
        }
        if (opts.next) {
            $(opts.next).bind(opts.prevNextEvent, function() {
                return advance(opts, opts.rev ? -1 : 1);
            });
        }
        if (opts.prev) {
            $(opts.prev).bind(opts.prevNextEvent, function() {
                return advance(opts, opts.rev ? 1 : -1);
            });
        }
        if (opts.pager || opts.pagerAnchorBuilder) {
            buildPager(els, opts);
        }
        exposeAddSlide(opts, els);
        return opts;
    }

    function saveOriginalOpts(opts) {
        opts.original = {
            before: [],
            after: []
        };
        opts.original.cssBefore = $.extend({}, opts.cssBefore);
        opts.original.cssAfter = $.extend({}, opts.cssAfter);
        opts.original.animIn = $.extend({}, opts.animIn);
        opts.original.animOut = $.extend({}, opts.animOut);
        $.each(opts.before, function() {
            opts.original.before.push(this);
        });
        $.each(opts.after, function() {
            opts.original.after.push(this);
        });
    }

    function supportMultiTransitions(opts) {
        var i, tx, txs = $.fn.cycle.transitions;
        if (opts.fx.indexOf(",") > 0) {
            opts.multiFx = true;
            opts.fxs = opts.fx.replace(/\s*/g, "").split(",");
            for (i = 0; i < opts.fxs.length; i++) {
                var fx = opts.fxs[i];
                tx = txs[fx];
                if (!tx || !txs.hasOwnProperty(fx) || !$.isFunction(tx)) {
                    log("discarding unknown transition: ", fx);
                    opts.fxs.splice(i, 1);
                    i--;
                }
            }
            if (!opts.fxs.length) {
                log("No valid transitions named; slideshow terminating.");
                return false;
            }
        } else {
            if (opts.fx == "all") {
                opts.multiFx = true;
                opts.fxs = [];
                for (p in txs) {
                    tx = txs[p];
                    if (txs.hasOwnProperty(p) && $.isFunction(tx)) {
                        opts.fxs.push(p);
                    }
                }
            }
        }
        if (opts.multiFx && opts.randomizeEffects) {
            var r1 = Math.floor(Math.random() * 20) + 30;
            for (i = 0; i < r1; i++) {
                var r2 = Math.floor(Math.random() * opts.fxs.length);
                opts.fxs.push(opts.fxs.splice(r2, 1)[0]);
            }
            debug("randomized fx sequence: ", opts.fxs);
        }
        return true;
    }

    function exposeAddSlide(opts, els) {
        opts.addSlide = function(newSlide, prepend) {
            var $s = $(newSlide),
                s = $s[0];
            if (!opts.autostopCount) {
                opts.countdown++;
            }
            els[prepend ? "unshift" : "push"](s);
            if (opts.els) {
                opts.els[prepend ? "unshift" : "push"](s);
            }
            opts.slideCount = els.length;
            $s.css("position", "absolute");
            $s[prepend ? "prependTo" : "appendTo"](opts.$cont);
            if (prepend) {
                opts.currSlide++;
                opts.nextSlide++;
            }
            if (!$.support.opacity && opts.cleartype && !opts.cleartypeNoBg) {
                clearTypeFix($s);
            }
            if (opts.fit && opts.width) {
                $s.width(opts.width);
            }
            if (opts.fit && opts.height && opts.height != "auto") {
                $slides.height(opts.height);
            }
            s.cycleH = (opts.fit && opts.height) ? opts.height : $s.height();
            s.cycleW = (opts.fit && opts.width) ? opts.width : $s.width();
            $s.css(opts.cssBefore);
            if (opts.pager || opts.pagerAnchorBuilder) {
                $.fn.cycle.createPagerAnchor(els.length - 1, s, $(opts.pager), els, opts);
            }
            if ($.isFunction(opts.onAddSlide)) {
                opts.onAddSlide($s);
            } else {
                $s.hide();
            }
        };
    }
    $.fn.cycle.resetState = function(opts, fx) {
        fx = fx || opts.fx;
        opts.before = [];
        opts.after = [];
        opts.cssBefore = $.extend({}, opts.original.cssBefore);
        opts.cssAfter = $.extend({}, opts.original.cssAfter);
        opts.animIn = $.extend({}, opts.original.animIn);
        opts.animOut = $.extend({}, opts.original.animOut);
        opts.fxFn = null;
        $.each(opts.original.before, function() {
            opts.before.push(this);
        });
        $.each(opts.original.after, function() {
            opts.after.push(this);
        });
        var init = $.fn.cycle.transitions[fx];
        if ($.isFunction(init)) {
            init(opts.$cont, $(opts.elements), opts);
        }
    };

    function go(els, opts, manual, fwd) {
        if (manual && opts.busy && opts.manualTrump) {
            debug("manualTrump in go(), stopping active transition");
            $(els).stop(true, true);
            opts.busy = false;
        }
        if (opts.busy) {
            debug("transition active, ignoring new tx request");
            return;
        }
        var p = opts.$cont[0],
            curr = els[opts.currSlide],
            next = els[opts.nextSlide];
        if (p.cycleStop != opts.stopCount || p.cycleTimeout === 0 && !manual) {
            return;
        }
        if (!manual && !p.cyclePause && ((opts.autostop && (--opts.countdown <= 0)) || (opts.nowrap && !opts.random && opts.nextSlide < opts.currSlide))) {
            if (opts.end) {
                opts.end(opts);
            }
            return;
        }
        var changed = false;
        if ((manual || !p.cyclePause) && (opts.nextSlide != opts.currSlide)) {
            changed = true;
            var fx = opts.fx;
            curr.cycleH = curr.cycleH || $(curr).height();
            curr.cycleW = curr.cycleW || $(curr).width();
            next.cycleH = next.cycleH || $(next).height();
            next.cycleW = next.cycleW || $(next).width();
            if (opts.multiFx) {
                if (opts.lastFx == undefined || ++opts.lastFx >= opts.fxs.length) {
                    opts.lastFx = 0;
                }
                fx = opts.fxs[opts.lastFx];
                opts.currFx = fx;
            }
            if (opts.oneTimeFx) {
                fx = opts.oneTimeFx;
                opts.oneTimeFx = null;
            }
            $.fn.cycle.resetState(opts, fx);
            if (opts.before.length) {
                $.each(opts.before, function(i, o) {
                    if (p.cycleStop != opts.stopCount) {
                        return;
                    }
                    o.apply(next, [curr, next, opts, fwd]);
                });
            }
            var after = function() {
                $.each(opts.after, function(i, o) {
                    if (p.cycleStop != opts.stopCount) {
                        return;
                    }
                    o.apply(next, [curr, next, opts, fwd]);
                });
            };
            debug("tx firing; currSlide: " + opts.currSlide + "; nextSlide: " + opts.nextSlide);
            opts.busy = 1;
            if (opts.fxFn) {
                opts.fxFn(curr, next, opts, after, fwd, manual && opts.fastOnEvent);
            } else {
                if ($.isFunction($.fn.cycle[opts.fx])) {
                    $.fn.cycle[opts.fx](curr, next, opts, after, fwd, manual && opts.fastOnEvent);
                } else {
                    $.fn.cycle.custom(curr, next, opts, after, fwd, manual && opts.fastOnEvent);
                }
            }
        }
        if (changed || opts.nextSlide == opts.currSlide) {
            opts.lastSlide = opts.currSlide;
            if (opts.random) {
                opts.currSlide = opts.nextSlide;
                if (++opts.randomIndex == els.length) {
                    opts.randomIndex = 0;
                }
                opts.nextSlide = opts.randomMap[opts.randomIndex];
                if (opts.nextSlide == opts.currSlide) {
                    opts.nextSlide = (opts.currSlide == opts.slideCount - 1) ? 0 : opts.currSlide + 1;
                }
            } else {
                var roll = (opts.nextSlide + 1) == els.length;
                opts.nextSlide = roll ? 0 : opts.nextSlide + 1;
                opts.currSlide = roll ? els.length - 1 : opts.nextSlide - 1;
            }
        }
        if (changed && opts.pager) {
            opts.updateActivePagerLink(opts.pager, opts.currSlide, opts.activePagerClass);
        }
        var ms = 0;
        if (opts.timeout && !opts.continuous) {
            ms = getTimeout(curr, next, opts, fwd);
        } else {
            if (opts.continuous && p.cyclePause) {
                ms = 10;
            }
        }
        if (ms > 0) {
            p.cycleTimeout = setTimeout(function() {
                go(els, opts, 0, !opts.rev);
            }, ms);
        }
    }
    $.fn.cycle.updateActivePagerLink = function(pager, currSlide, clsName) {
        $(pager).each(function() {
            $(this).children().removeClass(clsName).eq(currSlide).addClass(clsName);
        });
    };

    function getTimeout(curr, next, opts, fwd) {
        if (opts.timeoutFn) {
            var t = opts.timeoutFn(curr, next, opts, fwd);
            while ((t - opts.speed) < 250) {
                t += opts.speed;
            }
            debug("calculated timeout: " + t + "; speed: " + opts.speed);
            if (t !== false) {
                return t;
            }
        }
        return opts.timeout;
    }
    $.fn.cycle.next = function(opts) {
        advance(opts, opts.rev ? -1 : 1);
    };
    $.fn.cycle.prev = function(opts) {
        advance(opts, opts.rev ? 1 : -1);
    };

    function advance(opts, val) {
        var els = opts.elements;
        var p = opts.$cont[0],
            timeout = p.cycleTimeout;
        if (timeout) {
            clearTimeout(timeout);
            p.cycleTimeout = 0;
        }
        if (opts.random && val < 0) {
            opts.randomIndex--;
            if (--opts.randomIndex == -2) {
                opts.randomIndex = els.length - 2;
            } else {
                if (opts.randomIndex == -1) {
                    opts.randomIndex = els.length - 1;
                }
            }
            opts.nextSlide = opts.randomMap[opts.randomIndex];
        } else {
            if (opts.random) {
                opts.nextSlide = opts.randomMap[opts.randomIndex];
            } else {
                opts.nextSlide = opts.currSlide + val;
                if (opts.nextSlide < 0) {
                    if (opts.nowrap) {
                        return false;
                    }
                    opts.nextSlide = els.length - 1;
                } else {
                    if (opts.nextSlide >= els.length) {
                        if (opts.nowrap) {
                            return false;
                        }
                        opts.nextSlide = 0;
                    }
                }
            }
        }
        var cb = opts.onPrevNextEvent || opts.prevNextClick;
        if ($.isFunction(cb)) {
            cb(val > 0, opts.nextSlide, els[opts.nextSlide]);
        }
        go(els, opts, 1, val >= 0);
        return false;
    }

    function buildPager(els, opts) {
        var $p = $(opts.pager);
        $.each(els, function(i, o) {
            $.fn.cycle.createPagerAnchor(i, o, $p, els, opts);
        });
        opts.updateActivePagerLink(opts.pager, opts.startingSlide, opts.activePagerClass);
    }
    $.fn.cycle.createPagerAnchor = function(i, el, $p, els, opts) {
        var a;
        if ($.isFunction(opts.pagerAnchorBuilder)) {
            a = opts.pagerAnchorBuilder(i, el);
            debug("pagerAnchorBuilder(" + i + ", el) returned: " + a);
        } else {
            a = '<a href="#">' + (i + 1) + "</a>";
        }
        if (!a) {
            return;
        }
        var $a = $(a);
        if ($a.parents("body").length === 0) {
            var arr = [];
            if ($p.length > 1) {
                $p.each(function() {
                    var $clone = $a.clone(true);
                    $(this).append($clone);
                    arr.push($clone[0]);
                });
                $a = $(arr);
            } else {
                $a.appendTo($p);
            }
        }
        opts.pagerAnchors = opts.pagerAnchors || [];
        opts.pagerAnchors.push($a);
        $a.bind(opts.pagerEvent, function(e) {
            e.preventDefault();
            opts.nextSlide = i;
            var p = opts.$cont[0],
                timeout = p.cycleTimeout;
            if (timeout) {
                clearTimeout(timeout);
                p.cycleTimeout = 0;
            }
            var cb = opts.onPagerEvent || opts.pagerClick;
            if ($.isFunction(cb)) {
                cb(opts.nextSlide, els[opts.nextSlide]);
            }
            go(els, opts, 1, opts.currSlide < i);
        });
        if (!/^click/.test(opts.pagerEvent) && !opts.allowPagerClickBubble) {
            $a.bind("click.cycle", function() {
                return false;
            });
        }
        if (opts.pauseOnPagerHover) {
            $a.hover(function() {
                opts.$cont[0].cyclePause++;
            }, function() {
                opts.$cont[0].cyclePause--;
            });
        }
    };
    $.fn.cycle.hopsFromLast = function(opts, fwd) {
        var hops, l = opts.lastSlide,
            c = opts.currSlide;
        if (fwd) {
            hops = c > l ? c - l : opts.slideCount - l;
        } else {
            hops = c < l ? l - c : l + opts.slideCount - c;
        }
        return hops;
    };

    function clearTypeFix($slides) {
        debug("applying clearType background-color hack");

        function hex(s) {
            s = parseInt(s).toString(16);
            return s.length < 2 ? "0" + s : s;
        }

        function getBg(e) {
            for (; e && e.nodeName.toLowerCase() != "html"; e = e.parentNode) {
                var v = $.css(e, "background-color");
                if (v.indexOf("rgb") >= 0) {
                    var rgb = v.match(/\d+/g);
                    return "#" + hex(rgb[0]) + hex(rgb[1]) + hex(rgb[2]);
                }
                if (v && v != "transparent") {
                    return v;
                }
            }
            return "#ffffff";
        }
        $slides.each(function() {
            $(this).css("background-color", getBg(this));
        });
    }
    $.fn.cycle.commonReset = function(curr, next, opts, w, h, rev) {
        $(opts.elements).not(curr).hide();
        opts.cssBefore.opacity = 1;
        opts.cssBefore.display = "block";
        if (w !== false && next.cycleW > 0) {
            opts.cssBefore.width = next.cycleW;
        }
        if (h !== false && next.cycleH > 0) {
            opts.cssBefore.height = next.cycleH;
        }
        opts.cssAfter = opts.cssAfter || {};
        opts.cssAfter.display = "none";
        $(curr).css("zIndex", opts.slideCount + (rev === true ? 1 : 0));
        $(next).css("zIndex", opts.slideCount + (rev === true ? 0 : 1));
    };
    $.fn.cycle.custom = function(curr, next, opts, cb, fwd, speedOverride) {
        var $l = $(curr),
            $n = $(next);
        var speedIn = opts.speedIn,
            speedOut = opts.speedOut,
            easeIn = opts.easeIn,
            easeOut = opts.easeOut;
        $n.css(opts.cssBefore);
        if (speedOverride) {
            if (typeof speedOverride == "number") {
                speedIn = speedOut = speedOverride;
            } else {
                speedIn = speedOut = 1;
            }
            easeIn = easeOut = null;
        }
        var fn = function() {
            $n.animate(opts.animIn, speedIn, easeIn, cb);
        };
        $l.animate(opts.animOut, speedOut, easeOut, function() {
            if (opts.cssAfter) {
                $l.css(opts.cssAfter);
            }
            if (!opts.sync) {
                fn();
            }
        });
        if (opts.sync) {
            fn();
        }
    };
    $.fn.cycle.transitions = {
        fade: function($cont, $slides, opts) {
            $slides.not(":eq(" + opts.currSlide + ")").css("opacity", 0);
            opts.before.push(function(curr, next, opts) {
                $.fn.cycle.commonReset(curr, next, opts);
                opts.cssBefore.opacity = 0;
            });
            opts.animIn = {
                opacity: 1
            };
            opts.animOut = {
                opacity: 0
            };
            opts.cssBefore = {
                top: 0,
                left: 0
            };
        }
    };
    $.fn.cycle.ver = function() {
        return ver;
    };
    $.fn.cycle.defaults = {
        fx: "fade",
        timeout: 4000,
        timeoutFn: null,
        continuous: 0,
        speed: 1000,
        speedIn: null,
        speedOut: null,
        next: null,
        prev: null,
        onPrevNextEvent: null,
        prevNextEvent: "click.cycle",
        pager: null,
        onPagerEvent: null,
        pagerEvent: "click.cycle",
        allowPagerClickBubble: false,
        pagerAnchorBuilder: null,
        before: null,
        after: null,
        end: null,
        easing: null,
        easeIn: null,
        easeOut: null,
        shuffle: null,
        animIn: null,
        animOut: null,
        cssBefore: null,
        cssAfter: null,
        fxFn: null,
        height: "auto",
        startingSlide: 0,
        sync: 1,
        random: 0,
        fit: 0,
        containerResize: 1,
        pause: 0,
        pauseOnPagerHover: 0,
        autostop: 0,
        autostopCount: 0,
        delay: 0,
        slideExpr: null,
        cleartype: !$.support.opacity,
        cleartypeNoBg: false,
        nowrap: 0,
        fastOnEvent: 0,
        randomizeEffects: 1,
        rev: 0,
        manualTrump: true,
        requeueOnImageNotLoaded: true,
        requeueTimeout: 250,
        activePagerClass: "activeSlide",
        updateActivePagerLink: null
    };
})(jQuery);
/*
 * jQuery Cycle Plugin Transition Definitions
 * This script is a plugin for the jQuery Cycle Plugin
 * Examples and documentation at: http://malsup.com/jquery/cycle/
 * Copyright (c) 2007-2008 M. Alsup
 * Version:	 2.72
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 */
(function($) {
    $.fn.cycle.transitions.none = function($cont, $slides, opts) {
        opts.fxFn = function(curr, next, opts, after) {
            $(next).show();
            $(curr).hide();
            after();
        };
    };
    $.fn.cycle.transitions.scrollUp = function($cont, $slides, opts) {
        $cont.css("overflow", "hidden");
        opts.before.push($.fn.cycle.commonReset);
        var h = $cont.height();
        opts.cssBefore = {
            top: h,
            left: 0
        };
        opts.cssFirst = {
            top: 0
        };
        opts.animIn = {
            top: 0
        };
        opts.animOut = {
            top: -h
        };
    };
    $.fn.cycle.transitions.scrollDown = function($cont, $slides, opts) {
        $cont.css("overflow", "hidden");
        opts.before.push($.fn.cycle.commonReset);
        var h = $cont.height();
        opts.cssFirst = {
            top: 0
        };
        opts.cssBefore = {
            top: -h,
            left: 0
        };
        opts.animIn = {
            top: 0
        };
        opts.animOut = {
            top: h
        };
    };
    $.fn.cycle.transitions.scrollLeft = function($cont, $slides, opts) {
        $cont.css("overflow", "hidden");
        opts.before.push($.fn.cycle.commonReset);
        var w = $cont.width();
        opts.cssFirst = {
            left: 0
        };
        opts.cssBefore = {
            left: w,
            top: 0
        };
        opts.animIn = {
            left: 0
        };
        opts.animOut = {
            left: 0 - w
        };
    };
    $.fn.cycle.transitions.scrollRight = function($cont, $slides, opts) {
        $cont.css("overflow", "hidden");
        opts.before.push($.fn.cycle.commonReset);
        var w = $cont.width();
        opts.cssFirst = {
            left: 0
        };
        opts.cssBefore = {
            left: -w,
            top: 0
        };
        opts.animIn = {
            left: 0
        };
        opts.animOut = {
            left: w
        };
    };
    $.fn.cycle.transitions.scrollHorz = function($cont, $slides, opts) {
        $cont.css("overflow", "hidden").width();
        opts.before.push(function(curr, next, opts, fwd) {
            $.fn.cycle.commonReset(curr, next, opts);
            opts.cssBefore.left = fwd ? (next.cycleW - 1) : (1 - next.cycleW);
            opts.animOut.left = fwd ? -curr.cycleW : curr.cycleW;
        });
        opts.cssFirst = {
            left: 0
        };
        opts.cssBefore = {
            top: 0
        };
        opts.animIn = {
            left: 0
        };
        opts.animOut = {
            top: 0
        };
    };
    $.fn.cycle.transitions.scrollVert = function($cont, $slides, opts) {
        $cont.css("overflow", "hidden");
        opts.before.push(function(curr, next, opts, fwd) {
            $.fn.cycle.commonReset(curr, next, opts);
            opts.cssBefore.top = fwd ? (1 - next.cycleH) : (next.cycleH - 1);
            opts.animOut.top = fwd ? curr.cycleH : -curr.cycleH;
        });
        opts.cssFirst = {
            top: 0
        };
        opts.cssBefore = {
            left: 0
        };
        opts.animIn = {
            top: 0
        };
        opts.animOut = {
            left: 0
        };
    };
    $.fn.cycle.transitions.slideX = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $(opts.elements).not(curr).hide();
            $.fn.cycle.commonReset(curr, next, opts, false, true);
            opts.animIn.width = next.cycleW;
        });
        opts.cssBefore = {
            left: 0,
            top: 0,
            width: 0
        };
        opts.animIn = {
            width: "show"
        };
        opts.animOut = {
            width: 0
        };
    };
    $.fn.cycle.transitions.slideY = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $(opts.elements).not(curr).hide();
            $.fn.cycle.commonReset(curr, next, opts, true, false);
            opts.animIn.height = next.cycleH;
        });
        opts.cssBefore = {
            left: 0,
            top: 0,
            height: 0
        };
        opts.animIn = {
            height: "show"
        };
        opts.animOut = {
            height: 0
        };
    };
    $.fn.cycle.transitions.shuffle = function($cont, $slides, opts) {
        var i, w = $cont.css("overflow", "visible").width();
        $slides.css({
            left: 0,
            top: 0
        });
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, true, true);
        });
        if (!opts.speedAdjusted) {
            opts.speed = opts.speed / 2;
            opts.speedAdjusted = true;
        }
        opts.random = 0;
        opts.shuffle = opts.shuffle || {
            left: -w,
            top: 15
        };
        opts.els = [];
        for (i = 0; i < $slides.length; i++) {
            opts.els.push($slides[i]);
        }
        for (i = 0; i < opts.currSlide; i++) {
            opts.els.push(opts.els.shift());
        }
        opts.fxFn = function(curr, next, opts, cb, fwd) {
            var $el = fwd ? $(curr) : $(next);
            $(next).css(opts.cssBefore);
            var count = opts.slideCount;
            $el.animate(opts.shuffle, opts.speedIn, opts.easeIn, function() {
                var hops = $.fn.cycle.hopsFromLast(opts, fwd);
                for (var k = 0; k < hops; k++) {
                    fwd ? opts.els.push(opts.els.shift()) : opts.els.unshift(opts.els.pop());
                }
                if (fwd) {
                    for (var i = 0, len = opts.els.length; i < len; i++) {
                        $(opts.els[i]).css("z-index", len - i + count);
                    }
                } else {
                    var z = $(curr).css("z-index");
                    $el.css("z-index", parseInt(z) + 1 + count);
                }
                $el.animate({
                    left: 0,
                    top: 0
                }, opts.speedOut, opts.easeOut, function() {
                    $(fwd ? this : curr).hide();
                    if (cb) {
                        cb();
                    }
                });
            });
        };
        opts.cssBefore = {
            display: "block",
            opacity: 1,
            top: 0,
            left: 0
        };
    };
    $.fn.cycle.transitions.turnUp = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, false);
            opts.cssBefore.top = next.cycleH;
            opts.animIn.height = next.cycleH;
        });
        opts.cssFirst = {
            top: 0
        };
        opts.cssBefore = {
            left: 0,
            height: 0
        };
        opts.animIn = {
            top: 0
        };
        opts.animOut = {
            height: 0
        };
    };
    $.fn.cycle.transitions.turnDown = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, false);
            opts.animIn.height = next.cycleH;
            opts.animOut.top = curr.cycleH;
        });
        opts.cssFirst = {
            top: 0
        };
        opts.cssBefore = {
            left: 0,
            top: 0,
            height: 0
        };
        opts.animOut = {
            height: 0
        };
    };
    $.fn.cycle.transitions.turnLeft = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, true);
            opts.cssBefore.left = next.cycleW;
            opts.animIn.width = next.cycleW;
        });
        opts.cssBefore = {
            top: 0,
            width: 0
        };
        opts.animIn = {
            left: 0
        };
        opts.animOut = {
            width: 0
        };
    };
    $.fn.cycle.transitions.turnRight = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, true);
            opts.animIn.width = next.cycleW;
            opts.animOut.left = curr.cycleW;
        });
        opts.cssBefore = {
            top: 0,
            left: 0,
            width: 0
        };
        opts.animIn = {
            left: 0
        };
        opts.animOut = {
            width: 0
        };
    };
    $.fn.cycle.transitions.zoom = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, false, true);
            opts.cssBefore.top = next.cycleH / 2;
            opts.cssBefore.left = next.cycleW / 2;
            opts.animIn = {
                top: 0,
                left: 0,
                width: next.cycleW,
                height: next.cycleH
            };
            opts.animOut = {
                width: 0,
                height: 0,
                top: curr.cycleH / 2,
                left: curr.cycleW / 2
            };
        });
        opts.cssFirst = {
            top: 0,
            left: 0
        };
        opts.cssBefore = {
            width: 0,
            height: 0
        };
    };
    $.fn.cycle.transitions.fadeZoom = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, false);
            opts.cssBefore.left = next.cycleW / 2;
            opts.cssBefore.top = next.cycleH / 2;
            opts.animIn = {
                top: 0,
                left: 0,
                width: next.cycleW,
                height: next.cycleH
            };
        });
        opts.cssBefore = {
            width: 0,
            height: 0
        };
        opts.animOut = {
            opacity: 0
        };
    };
    $.fn.cycle.transitions.blindX = function($cont, $slides, opts) {
        var w = $cont.css("overflow", "hidden").width();
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts);
            opts.animIn.width = next.cycleW;
            opts.animOut.left = curr.cycleW;
        });
        opts.cssBefore = {
            left: w,
            top: 0
        };
        opts.animIn = {
            left: 0
        };
        opts.animOut = {
            left: w
        };
    };
    $.fn.cycle.transitions.blindY = function($cont, $slides, opts) {
        var h = $cont.css("overflow", "hidden").height();
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts);
            opts.animIn.height = next.cycleH;
            opts.animOut.top = curr.cycleH;
        });
        opts.cssBefore = {
            top: h,
            left: 0
        };
        opts.animIn = {
            top: 0
        };
        opts.animOut = {
            top: h
        };
    };
    $.fn.cycle.transitions.blindZ = function($cont, $slides, opts) {
        var h = $cont.css("overflow", "hidden").height();
        var w = $cont.width();
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts);
            opts.animIn.height = next.cycleH;
            opts.animOut.top = curr.cycleH;
        });
        opts.cssBefore = {
            top: h,
            left: w
        };
        opts.animIn = {
            top: 0,
            left: 0
        };
        opts.animOut = {
            top: h,
            left: w
        };
    };
    $.fn.cycle.transitions.growX = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, true);
            opts.cssBefore.left = this.cycleW / 2;
            opts.animIn = {
                left: 0,
                width: this.cycleW
            };
            opts.animOut = {
                left: 0
            };
        });
        opts.cssBefore = {
            width: 0,
            top: 0
        };
    };
    $.fn.cycle.transitions.growY = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, false);
            opts.cssBefore.top = this.cycleH / 2;
            opts.animIn = {
                top: 0,
                height: this.cycleH
            };
            opts.animOut = {
                top: 0
            };
        });
        opts.cssBefore = {
            height: 0,
            left: 0
        };
    };
    $.fn.cycle.transitions.curtainX = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, true, true);
            opts.cssBefore.left = next.cycleW / 2;
            opts.animIn = {
                left: 0,
                width: this.cycleW
            };
            opts.animOut = {
                left: curr.cycleW / 2,
                width: 0
            };
        });
        opts.cssBefore = {
            top: 0,
            width: 0
        };
    };
    $.fn.cycle.transitions.curtainY = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, false, true);
            opts.cssBefore.top = next.cycleH / 2;
            opts.animIn = {
                top: 0,
                height: next.cycleH
            };
            opts.animOut = {
                top: curr.cycleH / 2,
                height: 0
            };
        });
        opts.cssBefore = {
            left: 0,
            height: 0
        };
    };
    $.fn.cycle.transitions.cover = function($cont, $slides, opts) {
        var d = opts.direction || "left";
        var w = $cont.css("overflow", "hidden").width();
        var h = $cont.height();
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts);
            if (d == "right") {
                opts.cssBefore.left = -w;
            } else {
                if (d == "up") {
                    opts.cssBefore.top = h;
                } else {
                    if (d == "down") {
                        opts.cssBefore.top = -h;
                    } else {
                        opts.cssBefore.left = w;
                    }
                }
            }
        });
        opts.animIn = {
            left: 0,
            top: 0
        };
        opts.animOut = {
            opacity: 1
        };
        opts.cssBefore = {
            top: 0,
            left: 0
        };
    };
    $.fn.cycle.transitions.uncover = function($cont, $slides, opts) {
        var d = opts.direction || "left";
        var w = $cont.css("overflow", "hidden").width();
        var h = $cont.height();
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, true, true);
            if (d == "right") {
                opts.animOut.left = w;
            } else {
                if (d == "up") {
                    opts.animOut.top = -h;
                } else {
                    if (d == "down") {
                        opts.animOut.top = h;
                    } else {
                        opts.animOut.left = -w;
                    }
                }
            }
        });
        opts.animIn = {
            left: 0,
            top: 0
        };
        opts.animOut = {
            opacity: 1
        };
        opts.cssBefore = {
            top: 0,
            left: 0
        };
    };
    $.fn.cycle.transitions.toss = function($cont, $slides, opts) {
        var w = $cont.css("overflow", "visible").width();
        var h = $cont.height();
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, true, true);
            if (!opts.animOut.left && !opts.animOut.top) {
                opts.animOut = {
                    left: w * 2,
                    top: -h / 2,
                    opacity: 0
                };
            } else {
                opts.animOut.opacity = 0;
            }
        });
        opts.cssBefore = {
            left: 0,
            top: 0
        };
        opts.animIn = {
            left: 0
        };
    };
    $.fn.cycle.transitions.wipe = function($cont, $slides, opts) {
        var w = $cont.css("overflow", "hidden").width();
        var h = $cont.height();
        opts.cssBefore = opts.cssBefore || {};
        var clip;
        if (opts.clip) {
            if (/l2r/.test(opts.clip)) {
                clip = "rect(0px 0px " + h + "px 0px)";
            } else {
                if (/r2l/.test(opts.clip)) {
                    clip = "rect(0px " + w + "px " + h + "px " + w + "px)";
                } else {
                    if (/t2b/.test(opts.clip)) {
                        clip = "rect(0px " + w + "px 0px 0px)";
                    } else {
                        if (/b2t/.test(opts.clip)) {
                            clip = "rect(" + h + "px " + w + "px " + h + "px 0px)";
                        } else {
                            if (/zoom/.test(opts.clip)) {
                                var top = parseInt(h / 2);
                                var left = parseInt(w / 2);
                                clip = "rect(" + top + "px " + left + "px " + top + "px " + left + "px)";
                            }
                        }
                    }
                }
            }
        }
        opts.cssBefore.clip = opts.cssBefore.clip || clip || "rect(0px 0px 0px 0px)";
        var d = opts.cssBefore.clip.match(/(\d+)/g);
        var t = parseInt(d[0]),
            r = parseInt(d[1]),
            b = parseInt(d[2]),
            l = parseInt(d[3]);
        opts.before.push(function(curr, next, opts) {
            if (curr == next) {
                return;
            }
            var $curr = $(curr),
                $next = $(next);
            $.fn.cycle.commonReset(curr, next, opts, true, true, false);
            opts.cssAfter.display = "block";
            var step = 1,
                count = parseInt((opts.speedIn / 13)) - 1;
            (function f() {
                var tt = t ? t - parseInt(step * (t / count)) : 0;
                var ll = l ? l - parseInt(step * (l / count)) : 0;
                var bb = b < h ? b + parseInt(step * ((h - b) / count || 1)) : h;
                var rr = r < w ? r + parseInt(step * ((w - r) / count || 1)) : w;
                $next.css({
                    clip: "rect(" + tt + "px " + rr + "px " + bb + "px " + ll + "px)"
                });
                (step++ <= count) ? setTimeout(f, 13): $curr.css("display", "none");
            })();
        });
        opts.cssBefore = {
            display: "block",
            opacity: 1,
            top: 0,
            left: 0
        };
        opts.animIn = {
            left: 0
        };
        opts.animOut = {
            left: 0
        };
    };
})(jQuery);; /**/
(function(e) {
    Drupal.behaviors.viewsSlideshowCycle = {
        attach: function(a) {
            e(".views_slideshow_cycle_main:not(.viewsSlideshowCycle-processed)", a).addClass("viewsSlideshowCycle-processed").each(function() {
                var n = "#" + e(this).attr("id"),
                    a = Drupal.settings.viewsSlideshowCycle[n];
                a.targetId = "#" + e(n + " :first").attr("id");
                a.slideshowId = a.targetId.replace("#views_slideshow_cycle_teaser_section_", "");
                var E = function(e, s, i) {
                        var t = i.currSlide;
                        if (typeof a.processedAfter == "undefined" || !a.processedAfter) {
                            a.processedAfter = 1;
                            t = (typeof a.opts.startingSlide == "undefined") ? 0 : a.opts.startingSlide
                        };
                        if (a.pause_after_slideshow) {
                            i.counter += 1;
                            if (i.counter == a.num_divs + 1) {
                                i.counter = 1;
                                Drupal.viewsSlideshow.action({
                                    "action": "pause",
                                    "slideshowID": a.slideshowId,
                                    "force": !0
                                })
                            }
                        };
                        Drupal.viewsSlideshow.action({
                            "action": "transitionEnd",
                            "slideshowID": a.slideshowId,
                            "slideNum": t
                        })
                    },
                    M = function(i, t, l) {
                        e(document).trigger("drupal:views_slideshow_cycle:before", {
                            curr: i,
                            next: t,
                            opts: l,
                            settings: a
                        });
                        var o = l.nextSlide;
                        if (a.remember_slide) {
                            s(a.vss_id, o, a.remember_slide_days)
                        };
                        if (!a.fixed_height) {
                            var n = e(t).height();
                            e(t).parent().animate({
                                height: n
                            })
                        };
                        if (typeof a.processedBefore == "undefined" || !a.processedBefore) {
                            a.processedBefore = 1;
                            o = (typeof l.startingSlide == "undefined") ? 0 : l.startingSlide
                        };
                        Drupal.viewsSlideshow.action({
                            "action": "transitionBegin",
                            "slideshowID": a.slideshowId,
                            "slideNum": o
                        })
                    };
                a.loaded = !1;
                a.opts = {
                    speed: a.speed,
                    timeout: a.timeout,
                    delay: a.delay,
                    sync: a.sync,
                    random: a.random,
                    nowrap: a.nowrap,
                    pause_after_slideshow: a.pause_after_slideshow,
                    counter: 0,
                    after: E,
                    before: M,
                    cleartype: (a.cleartype) ? !0 : !1,
                    cleartypeNoBg: (a.cleartypenobg) ? !0 : !1
                };
                if (a.remember_slide) {
                    var x = i(a.vss_id);
                    if (x == null) {
                        x = 0
                    };
                    a.opts.startingSlide = parseInt(x)
                };
                if (a.effect == "none") {
                    a.opts.speed = 1
                } else {
                    a.opts.fx = a.effect
                };
                var d = location.hash;
                if (d) {
                    var d = d.replace("#", ""),
                        k = d.split(";"),
                        N = k.length;
                    for (var O = 0; O < N; O++) {
                        var b = k[O].split(":");
                        if (a.slideshowId == b[0] && a.num_divs > b[1]) {
                            a.opts.startingSlide = parseInt(b[1])
                        }
                    }
                };
                if (a.pause) {
                    var r = function() {
                            Drupal.viewsSlideshow.action({
                                "action": "pause",
                                "slideshowID": a.slideshowId
                            })
                        },
                        c = function() {
                            Drupal.viewsSlideshow.action({
                                "action": "play",
                                "slideshowID": a.slideshowId
                            })
                        };
                    if (jQuery.fn.hoverIntent) {
                        e("#views_slideshow_cycle_teaser_section_" + a.vss_id).hoverIntent(r, c)
                    } else {
                        e("#views_slideshow_cycle_teaser_section_" + a.vss_id).hover(r, c)
                    }
                };
                if (a.play_on_hover) {
                    var r = function() {
                            Drupal.viewsSlideshow.action({
                                "action": "play",
                                "slideshowID": a.slideshowId,
                                "force": !0
                            })
                        },
                        c = function() {
                            Drupal.viewsSlideshow.action({
                                "action": "pause",
                                "slideshowID": a.slideshowId
                            })
                        };
                    if (jQuery.fn.hoverIntent) {
                        e("#views_slideshow_cycle_teaser_section_" + a.vss_id).hoverIntent(r, c)
                    } else {
                        e("#views_slideshow_cycle_teaser_section_" + a.vss_id).hover(r, c)
                    }
                };
                if (a.pause_on_click) {
                    e("#views_slideshow_cycle_teaser_section_" + a.vss_id).click(function() {
                        Drupal.viewsSlideshow.action({
                            "action": "pause",
                            "slideshowID": a.slideshowId,
                            "force": !0
                        })
                    })
                };
                if (typeof JSON != "undefined") {
                    var l = JSON.parse(a.advanced_options);
                    for (var t in l) {
                        switch (t) {
                            case "activePagerClass":
                            case "allowPagerClickBubble":
                            case "autostop":
                            case "autostopCount":
                            case "backwards":
                            case "bounce":
                            case "cleartype":
                            case "cleartypeNoBg":
                            case "containerResize":
                            case "continuous":
                            case "delay":
                            case "easeIn":
                            case "easeOut":
                            case "easing":
                            case "fastOnEvent":
                            case "fit":
                            case "fx":
                            case "manualTrump":
                            case "metaAttr":
                            case "next":
                            case "nowrap":
                            case "pager":
                            case "pagerEvent":
                            case "pause":
                            case "pauseOnPagerHover":
                            case "prev":
                            case "prevNextEvent":
                            case "random":
                            case "randomizeEffects":
                            case "requeueOnImageNotLoaded":
                            case "requeueTimeout":
                            case "rev":
                            case "slideExpr":
                            case "slideResize":
                            case "speed":
                            case "speedIn":
                            case "speedOut":
                            case "startingSlide":
                            case "sync":
                            case "timeout":
                                var o = l[t];
                                o = Drupal.viewsSlideshowCycle.advancedOptionCleanup(o);
                                a.opts[t] = o;
                                break;
                            case "width":
                                var o = l["width"];
                                o = Drupal.viewsSlideshowCycle.advancedOptionCleanup(o);
                                a.opts["width"] = o;
                                a.opts["containerResize"] = 0;
                                break;
                            case "height":
                                var o = l["height"];
                                o = Drupal.viewsSlideshowCycle.advancedOptionCleanup(o);
                                a.opts["height"] = o;
                                a.fixed_height = 1;
                                break;
                            case "animIn":
                            case "animInDelay":
                            case "animOut":
                            case "animOutDelay":
                            case "cssBefore":
                            case "cssAfter":
                            case "shuffle":
                                var m = l[t];
                                m = Drupal.viewsSlideshowCycle.advancedOptionCleanup(m);
                                a.opts[t] = eval("(" + m + ")");
                                break;
                            case "after":
                                var I = l[t];
                                I = Drupal.viewsSlideshowCycle.advancedOptionCleanup(I);
                                a.opts[t] = function(e, s, i, a) {
                                    E(e, s, i);
                                    eval(I)
                                };
                                break;
                            case "before":
                                var C = l[t];
                                C = Drupal.viewsSlideshowCycle.advancedOptionCleanup(C);
                                a.opts[t] = function(e, s, i, a) {
                                    M(e, s, i);
                                    eval(C)
                                };
                                break;
                            case "end":
                                var S = l[t];
                                S = Drupal.viewsSlideshowCycle.advancedOptionCleanup(S);
                                a.opts[t] = function(e) {
                                    eval(S)
                                };
                                break;
                            case "fxFn":
                                var D = l[t];
                                D = Drupal.viewsSlideshowCycle.advancedOptionCleanup(D);
                                a.opts[t] = function(e, s, i, a, t) {
                                    eval(D)
                                };
                                break;
                            case "onPagerEvent":
                                var g = l[t];
                                g = Drupal.viewsSlideshowCycle.advancedOptionCleanup(g);
                                a.opts[t] = function(e, s) {
                                    eval(g)
                                };
                                break;
                            case "onPrevNextEvent":
                                var y = l[t];
                                y = Drupal.viewsSlideshowCycle.advancedOptionCleanup(y);
                                a.opts[t] = function(e, s, i) {
                                    eval(y)
                                };
                                break;
                            case "pagerAnchorBuilder":
                                var f = l[t];
                                f = Drupal.viewsSlideshowCycle.advancedOptionCleanup(f);
                                a.opts[t] = function(e, s) {
                                    var i = "";
                                    eval(f);
                                    return i
                                };
                                break;
                            case "pagerClick":
                                var v = l[t];
                                v = Drupal.viewsSlideshowCycle.advancedOptionCleanup(v);
                                a.opts[t] = function(e, s) {
                                    eval(v)
                                };
                                break;
                            case "paused":
                                var h = l[t];
                                h = Drupal.viewsSlideshowCycle.advancedOptionCleanup(h);
                                a.opts[t] = function(e, s, i) {
                                    eval(h)
                                };
                                break;
                            case "resumed":
                                var w = l[t];
                                w = Drupal.viewsSlideshowCycle.advancedOptionCleanup(w);
                                a.opts[t] = function(e, s, i) {
                                    eval(w)
                                };
                                break;
                            case "timeoutFn":
                                var p = l[t];
                                p = Drupal.viewsSlideshowCycle.advancedOptionCleanup(p);
                                a.opts[t] = function(e, s, i, t) {
                                    var l = a.timeout;
                                    eval(p);
                                    return l
                                };
                                break;
                            case "updateActivePagerLink":
                                var u = l[t];
                                u = Drupal.viewsSlideshowCycle.advancedOptionCleanup(u);
                                a.opts[t] = function(e, s) {
                                    eval(u)
                                };
                                break
                        }
                    }
                };
                if (a.wait_for_image_load) {
                    a.totalImages = e(a.targetId + " img").length;
                    if (a.totalImages) {
                        a.loadedImages = 0;
                        e(a.targetId + " img").each(function() {
                            var s = e(this);
                            s.bind("load", function() {
                                Drupal.viewsSlideshowCycle.imageWait(n)
                            });
                            var i = s.attr("src");
                            s.attr("src", "");
                            s.attr("src", i)
                        });
                        setTimeout("Drupal.viewsSlideshowCycle.load('" + n + "')", a.wait_for_image_load_timeout)
                    } else {
                        Drupal.viewsSlideshowCycle.load(n)
                    }
                } else {
                    Drupal.viewsSlideshowCycle.load(n)
                }
            })
        }
    };
    Drupal.behaviors.viewsSlideshowSwipe = {
        attach: function(s) {
            var n = (("ontouchstart" in window) || (navigator.msMaxTouchPoints > 0));
            if (n === !0 && e(".views-slideshow-cycle-main-frame").length) {
                var i = e(".views-slideshow-cycle-main-frame"),
                    a = {
                        start: {
                            x: 0,
                            y: 0
                        },
                        end: {
                            x: 0,
                            y: 0
                        },
                        hdiff: 0,
                        vdiff: 0,
                        length: 0,
                        angle: null,
                        direction: null,
                    },
                    t = e.extend(!0, {}, a),
                    l = 110,
                    o = 50;
                i.data("bw", a).bind("touchstart.cycle", function(s) {
                    var a = s.originalEvent.touches[0] || s.originalEvent.changedTouches[0];
                    if (s.originalEvent.touches.length == 1) {
                        var i = e(this).data("bw");
                        i.start.x = a.pageX;
                        i.start.y = a.pageY;
                        e(this).data("bw", i)
                    }
                }).bind("touchend.cycle", function(s) {
                    var c = s.originalEvent.touches[0] || s.originalEvent.changedTouches[0],
                        a = e(this).data("bw");
                    a.end.x = c.pageX;
                    a.end.y = c.pageY;
                    e(this).data("bw", a);
                    if (a.start.x != 0 && a.start.y != 0) {
                        a.vdiff = a.start.x - a.end.x;
                        a.hdiff = a.end.y - a.start.y;
                        if (Math.abs(a.vdiff) == a.start.x && Math.abs(a.hdiff) == a.start.y) {
                            a.vdiff = 0;
                            a.hdiff = 0
                        };
                        var d = Math.round(Math.sqrt(Math.pow(a.vdiff, 2) + Math.pow(a.hdiff, 2))),
                            u = Math.atan2(a.hdiff, a.vdiff),
                            n = Math.round(u * 180 / Math.PI);
                        if (n < 0) {
                            n = 360 - Math.abs(n)
                        };
                        if (d > l && o > a.hdiff) {
                            s.preventDefault();
                            if (n > 135 && n < 225) {
                                var r = i.data("cycle.opts");
                                if (r.currSlide > 0) {
                                    i.cycle((r.currSlide - 1), "scrollRight")
                                } else {
                                    i.cycle((r.slideCount - 1), "scrollRight")
                                }
                            } else if (n > 315 || n < 45) {
                                i.cycle("next")
                            }
                        }
                    };
                    a = e.extend(!0, {}, t)
                })
            }
        }
    };
    Drupal.viewsSlideshowCycle = Drupal.viewsSlideshowCycle || {};
    Drupal.viewsSlideshowCycle.advancedOptionCleanup = function(s) {
        s = e.trim(s);
        s = s.replace(/\n/g, "");
        if (s.match(/^[\d.]+%$/)) {} else if (!isNaN(parseInt(s))) {
            s = parseInt(s)
        } else if (s.toLowerCase() == "true") {
            s = !0
        } else if (s.toLowerCase() == "false") {
            s = !1
        };
        return s
    };
    Drupal.viewsSlideshowCycle.imageWait = function(e) {
        if (++Drupal.settings.viewsSlideshowCycle[e].loadedImages == Drupal.settings.viewsSlideshowCycle[e].totalImages) {
            Drupal.viewsSlideshowCycle.load(e)
        }
    };
    Drupal.viewsSlideshowCycle.load = function(s) {
        var i = Drupal.settings.viewsSlideshowCycle[s];
        if (!i.loaded) {
            e(i.targetId).cycle(i.opts);
            e(i.targetId).parent().parent().addClass("views-slideshow-cycle-processed");
            i.loaded = !0;
            if (i.start_paused) {
                Drupal.viewsSlideshow.action({
                    "action": "pause",
                    "slideshowID": i.slideshowId,
                    "force": !0
                })
            };
            if (i.pause_when_hidden) {
                var t = function(e) {
                    var s = a(e.targetId, e.pause_when_hidden_type, e.amount_allowed_visible);
                    if (s) {
                        Drupal.viewsSlideshow.action({
                            "action": "play",
                            "slideshowID": e.slideshowId
                        })
                    } else {
                        Drupal.viewsSlideshow.action({
                            "action": "pause",
                            "slideshowID": e.slideshowId
                        })
                    }
                };
                e(window).scroll(function() {
                    t(i)
                });
                e(window).resize(function() {
                    t(i)
                })
            }
        }
    };
    Drupal.viewsSlideshowCycle.pause = function(s) {
        try {
            if (s.pause_in_middle && e.fn.pause) {
                e("#views_slideshow_cycle_teaser_section_" + s.slideshowID).pause()
            } else {
                e("#views_slideshow_cycle_teaser_section_" + s.slideshowID).cycle("pause")
            }
        } catch (i) {
            if (!i instanceof TypeError) {
                throw i
            }
        }
    };
    Drupal.viewsSlideshowCycle.play = function(s) {
        Drupal.settings.viewsSlideshowCycle["#views_slideshow_cycle_main_" + s.slideshowID].paused = !1;
        if (s.pause_in_middle && e.fn.resume) {
            e("#views_slideshow_cycle_teaser_section_" + s.slideshowID).resume()
        } else {
            e("#views_slideshow_cycle_teaser_section_" + s.slideshowID).cycle("resume")
        }
    };
    Drupal.viewsSlideshowCycle.previousSlide = function(s) {
        e("#views_slideshow_cycle_teaser_section_" + s.slideshowID).cycle("prev")
    };
    Drupal.viewsSlideshowCycle.nextSlide = function(s) {
        e("#views_slideshow_cycle_teaser_section_" + s.slideshowID).cycle("next")
    };
    Drupal.viewsSlideshowCycle.goToSlide = function(s) {
        e("#views_slideshow_cycle_teaser_section_" + s.slideshowID).cycle(s.slideNum)
    };

    function t(e) {
        var t = "0123456789",
            i = !0,
            a;
        for (var s = 0; s < e.length && i == !0; s++) {
            a = e.charAt(s);
            if (t.indexOf(a) == -1) {
                i = !1
            }
        };
        return i
    };

    function s(e, s, i) {
        if (i) {
            var a = new Date();
            a.setTime(a.getTime() + (i * 24 * 60 * 60 * 1000));
            var t = "; expires=" + a.toGMTString()
        } else {
            var t = ""
        };
        document.cookie = e + "=" + s + t + "; path=/"
    };

    function i(e) {
        var a = e + "=",
            t = document.cookie.split(";");
        for (var i = 0; i < t.length; i++) {
            var s = t[i];
            while (s.charAt(0) == " ") s = s.substring(1, s.length);
            if (s.indexOf(a) == 0) {
                return s.substring(a.length, s.length)
            }
        };
        return null
    };

    function l(e) {
        s(e, "", -1)
    };

    function a(s, a, i) {
        var t = e(window).scrollTop(),
            d = t + e(window).height(),
            l = e(window).scrollLeft(),
            u = l + e(window).width(),
            o = e(s).offset().top,
            n = e(s).height(),
            p = o + n,
            r = e(s).offset().left,
            c = e(s).width(),
            w = r + c,
            C = n * c,
            h = 0,
            v = 0,
            f = 0,
            y = 0;
        if (r < l) {
            h = l - r
        };
        if (w > u) {
            v = w - u
        };
        if (o < t) {
            f = t - o
        };
        if (p > d) {
            y = p - d
        };
        if (a == "full") {
            return ((p >= t) && (o <= d) && (p <= d) && (o >= t) && (r >= l) && (w <= u) && (r <= u) && (w >= l))
        } else if (a == "vertical") {
            var S = n - f - y;
            if (typeof i === "string" && i.indexOf("%")) {
                return (((S / n) * 100) >= parseInt(i))
            } else {
                return (S >= parseInt(i))
            }
        } else if (a == "horizontal") {
            var D = c - h - v;
            if (typeof i === "string" && i.indexOf("%")) {
                return (((D / c) * 100) >= parseInt(i))
            } else {
                return (D >= parseInt(i))
            }
        } else if (a == "area") {
            var g = (c - h - v) * (n - f - y);
            if (typeof i === "string" && i.indexOf("%")) {
                return (((g / C) * 100) >= parseInt(i))
            } else {
                return (g >= parseInt(i))
            }
        }
    }
})(jQuery);
(function(e, t, o) {
    'use strict';
    var h = navigator.userAgent.match(/MSIE ([0-9]{1,}[\.0-9]{0,})/),
        c = !!h,
        C = c && parseFloat(h[1]) < 7,
        w = navigator.userAgent.match(/iPad|iPhone|Android|IEMobile|BlackBerry/i),
        x = c ? 'mousedown' : 'click',
        A = 'onwheel' in t ? 'wheel' : 'onmousewheel' in o ? 'mousewheel' : 'MouseScrollEvent' in t && 'DOMMouseScroll MozMousePixelScroll',
        g = {
            fired: !1,
            fire: function() {
                e(o).on(x, '.dk_options a', function() {
                    var t = e(this),
                        a = t.parent(),
                        i = t.parents('.dk_container').first();
                    if (!a.hasClass('disabled') && !a.closest('.dk_optgroup', i).hasClass('disabled')) {
                        if (!a.hasClass('dk_option_current')) {
                            d(t, i);
                            n(t.parent(), i)
                        };
                        r(i)
                    };
                    return !1
                }).on(A, '.dk_options_inner', function(e) {
                    var t = e.originalEvent.wheelDelta || -e.originalEvent.deltaY || -e.originalEvent.detail;
                    if (c) {
                        this.scrollTop -= Math.round(t / 10);
                        return !1
                    };
                    return (t > 0 && this.scrollTop <= 0) || (t < 0 && this.scrollTop >= this.scrollHeight - this.offsetHeight) ? !1 : !0
                }).on({
                    'keydown.dk_nav': function(e) {
                        var t = a || u;
                        t && H(e, t)
                    },
                    'click': function(t) {
                        var i = e(t.target),
                            n;
                        if (a && i.closest('.dk_container').length === 0) {
                            r(a)
                        } else if (i.is('.dk_toggle, .dk_label')) {
                            n = i.parents('.dk_container').first();
                            if (n.hasClass('dk_open')) {
                                r(n)
                            } else {
                                a && r(a);
                                !n.attr('disabled') && p(n, t)
                            };
                            return !1
                        } else if (i.attr('for') && !!e('#dk_container_' + i.attr('for'))[0]) {
                            e('#dk_container_' + i.attr('for')).trigger('focus.dropkick')
                        }
                    }
                });
                this.fired = !0
            }
        },
        i = {},
        b = [],
        l = {
            'left': 37,
            'up': 38,
            'right': 39,
            'down': 40,
            'enter': 13,
            'tab': 9,
            'zero': 48,
            'z': 90,
            'last': 221
        },
        s = ['<div class="dk_container" id="dk_container_{{ id }}" tabindex="{{ tabindex }}" aria-hidden="true">', '<a class="dk_toggle dk_label">{{ label }}</a>', '<div class="dk_options">', '<ul class="dk_options_inner" role="main" aria-hidden="true">', '</ul>', '</div>', '</div>'].join(''),
        f = '<li class="{{ current }}{{ disabled }}"><a data-dk-dropdown-value="{{ value }}">{{ text }}</a></li>',
        y = '<li class="dk_optgroup{{ disabled }}"><span>{{ text }}</span>',
        T = {
            startSpeed: 400,
            theme: !1,
            changes: !1,
            syncReverse: !0,
            nativeMobile: !0,
            autoWidth: !0
        },
        a = null,
        u = null,
        d = function(e, t, i) {
            var n = t.data('dropkick'),
                a = n.$select,
                o = e.length ? e : n.$original,
                d = o.attr('data-dk-dropdown-value') || e.attr('value'),
                r = o.text();
            t.find('.dk_label').html(!!r ? r : '&nbsp;');
            !i ? a.val(d).trigger('change') : a.val(d);
            n.settings.change && !i && !n.settings.syncReverse && n.settings.change.call(a, d, r)
        },
        r = function(e) {
            e.removeClass('dk_open dk_open_top');
            a = null
        },
        M = function(i) {
            if (i.data('dropkick').settings.fixedMove) {
                return i.data('dropkick').settings.fixedMove == 'up' ? !1 : !0
            };
            var n = i.find('.dk_toggle'),
                a = i.find('.dk_options').outerHeight(),
                d = e(t).height() - n.outerHeight() - n.offset().top + e(t).scrollTop(),
                r = n.offset().top - e(t).scrollTop();
            return !(a < r) ? !0 : (a < d)
        },
        v = function(e, t, n) {
            var i = e.find('.dk_options_inner'),
                a = t.prevAll('li').outerHeight() * t.prevAll('li').length + (t.closest('.dk_optgroup', i).length && t.closest('.dk_optgroup', i).prevAll('li').outerHeight() * t.closest('.dk_optgroup', i).prevAll('li').length),
                d = i.scrollTop(),
                r = i.height() + i.scrollTop() - t.outerHeight();
            ((n && n.type === 'keydown') || (a < d || a > r)) && i.scrollTop(a)
        },
        p = function(e, t) {
            var i = M(e),
                n = 'dk_open' + (i ? '' : ' dk_open_top');
            e.find('.dk_options').css({
                top: i ? e.find('.dk_toggle').outerHeight() - 1 : '',
                bottom: i ? '' : e.find('.dk_toggle').outerHeight() - 1
            });
            a = e.addClass(n);
            v(e, e.find('.dk_option_current'), t)
        },
        n = function(e, t, i) {
            t.find('.dk_option_current').removeClass('dk_option_current');
            e.addClass('dk_option_current');
            v(t, e, i)
        },
        H = function(t, i) {
            var g = t.keyCode,
                a = i.data('dropkick'),
                m = String.fromCharCode(g),
                C = i.find('.dk_options'),
                b = i.hasClass('dk_open'),
                f = C.find('li:not(.disabled)'),
                u = i.find('.dk_option_current'),
                o = u.closest('.dk_optgroup', C),
                A = f.first().hasClass('dk_optgroup') ? f.first().find('li:not(.disabled)').first() : f.first(),
                y = f.last().hasClass('dk_optgroup') ? f.last().find('li:not(.disabled)').last() : f.last(),
                s, c, k, w, v, x, h;
            switch (g) {
                case l.enter:
                    if (b) {
                        if (!u.hasClass('disabled')) {
                            d(u.find('a'), i);
                            r(i)
                        }
                    } else {
                        p(i, t)
                    };
                    t.preventDefault();
                    break;
                case l.tab:
                    if (b) {
                        u.length && d(u.find('a'), i);
                        r(i)
                    };
                    break;
                case l.up:
                    if (b) {
                        c = u.prevAll('li:not(.disabled)').first();
                        if (c.hasClass('dk_optgroup')) c = c.find('li:not(.disabled)').last();
                        if (!c.length && o.length) c = o.prevAll('li:not(.disabled)').first().hasClass('dk_optgroup') ? o.prevAll('li:not(.disabled)').first().find('li:not(.disabled)').last() : o.prevAll('li:not(.disabled)').first();
                        n(c.length ? c : y, i, t)
                    } else {
                        p(i, t)
                    };
                    t.preventDefault();
                    break;
                case l.down:
                    if (b) {
                        s = u.nextAll('li:not(.disabled)').first();
                        if (s.hasClass('dk_optgroup')) s = s.find('li:not(.disabled)').first();
                        if (!s.length && o.length) s = o.nextAll('li:not(.disabled)').first().hasClass('dk_optgroup') ? o.nextAll('li:not(.disabled)').first().find('li:not(.disabled)').first() : o.nextAll('li:not(.disabled)').first();
                        n(s.length ? s : A, i, t)
                    } else {
                        p(i, t)
                    };
                    t.preventDefault();
                    break;
                default:
                    break
            };
            if (g >= l.zero && g <= l.z) {
                k = new Date().getTime();
                if (a.finder === null || a.finder === undefined) {
                    a.finder = m.toUpperCase();
                    a.timer = k
                } else {
                    if (k > parseInt(a.timer, 10) + 1000) {
                        a.finder = m.toUpperCase();
                        a.timer = k
                    } else {
                        a.finder = a.finder + m.toUpperCase();
                        a.timer = k
                    }
                };
                w = f.find('a');
                for (v = 0, x = w.length; v < x; v++) {
                    h = e(w[v]);
                    if (h.html().toUpperCase().indexOf(a.finder) === 0 && !h.closest('.dk_optgroup', C).hasClass('disabled')) {
                        d(h, i);
                        n(h.parent(), i, t);
                        break
                    }
                };
                i.data('dropkick', a)
            }
        },
        k = function(t) {
            return (e.trim(t).length > 0) ? t : !1
        },
        m = function(t, i) {
            var s = function(t) {
                    var n = t.val(),
                        a = t.html(),
                        d = t.attr('disabled') !== undefined;
                    return f.replace('{{ value }}', n).replace('{{ current }}', (k(n) === i.value && !d) ? 'dk_option_current' : '').replace('{{ disabled }}', (d) ? 'disabled' : '').replace('{{ text }}', !!e.trim(a) ? e.trim(a) : '&nbsp;')
                },
                h = t.replace('{{ id }}', i.id).replace('{{ label }}', i.label).replace('{{ tabindex }}', i.tabindex),
                o = [],
                l, n, p, a, d;
            if (i.options && i.options.length) {
                for (n = 0, p = i.options.length; n < p; n++) {
                    a = e(i.options[n]);
                    if (a.is('option')) {
                        d = (n === 0 && a.attr('selected') !== undefined && a.attr('disabled') !== undefined) ? null : s(a)
                    } else if (a.is('optgroup')) {
                        d = y.replace('{{ text }}', a.attr('label') || '---').replace('{{ disabled }}', (a.attr('disabled') !== undefined) ? ' disabled' : '');
                        if (e(i.options[n]).children().length) {
                            d += '<ul>';
                            for (var r = 0, u = e(i.options[n]).children().length; r < u; r++) {
                                var c = e(i.options[n]).children().eq(r);
                                d += s(c)
                            };
                            d += '</ul>'
                        };
                        d += '</li>'
                    };
                    o[o.length] = d
                }
            };
            l = e(h);
            l.find('.dk_options_inner').html(o.join(''));
            return l
        };
    i.init = function(t) {
        t = e.extend({}, T, t);
        s = t.dropdownTemplate ? t.dropdownTemplate : s;
        f = t.optionTemplate ? t.optionTemplate : f;
        !g.fired && g.fire();
        return this.each(function() {
            var i = e(this),
                r = i.find(':selected').first(),
                p = i.children(),
                a = i.data('dropkick') || {},
                c = i.attr('id') || i.attr('name'),
                o = i.parent('.dk_wrap'),
                f = t.width || o.length ? o.width() - (i.innerWidth() - i.width()) : i.outerWidth(),
                h = i.attr('tabindex') || '0',
                g = !!i.attr('disabled'),
                d = !1,
                l;
            if (a.id) {
                return i
            };
            a.settings = t;
            a.tabindex = h;
            a.id = c;
            a.$original = r;
            a.$select = i;
            a.value = k(i.val()) || k(r.attr('value'));
            a.label = !!r.text() ? r.text() : '&nbsp;';
            a.options = p;
            a.theme = t.theme || 'default';
            d = m(s, a);
            a.settings.autoWidth && d.find('.dk_toggle').css({
                'width': f + 'px'
            });
            g && d.attr({
                disabled: 'disabled',
                tabindex: -1
            });
            i.before(d).appendTo(d.addClass('dk_theme_' + a.theme));
            if (o.length) {
                o.removeClass('dk_wrap');
                d.show()
            } else {
                d.fadeIn(t.startSpeed)
            };
            a.$dk = d;
            i.data('dropkick', a);
            d.addClass(i.attr('class'));
            d.data('dropkick', a);
            b[b.length] = i;
            d.on({
                'focus.dropkick': function() {
                    u = !d.attr('disabled') && d.addClass('dk_focus')
                },
                'blur.dropkick': function() {
                    d.removeClass('dk_focus');
                    u = null
                }
            });
            w && a.settings.nativeMobile && d.addClass('dk_mobile');
            if (a.settings.syncReverse) {
                i.on('change', function(t) {
                    var o = i.val(),
                        l = e('a[data-dk-dropdown-value="' + o + '"]', d),
                        r = l.text();
                    d.find('.dk_label').html(!!r ? r : '&nbsp;');
                    n(l.parent(), d, t);
                    a.settings.change && a.settings.change.call(i, o, r)
                })
            };
            l = i.attr('form') ? e('#' + i.attr('form').replace(' ', ', #')) : i.closest('form');
            l.length && l.on('reset', function() {
                i.dropkick('reset')
            })
        })
    };
    i.theme = function(t) {
        var i = e(this).data('dropkick'),
            n = i.$dk,
            a = 'dk_theme_' + i.theme;
        i.theme = t || i.theme;
        n.removeClass(a).addClass('dk_theme_' + t)
    };
    i.reset = function(t) {
        return this.each(function() {
            var i = e(this).data('dropkick'),
                a = i.$dk,
                r = e('a[data-dk-dropdown-value="' + i.$original.attr('value') + '"]', a);
            i.$original.prop('selected', !0);
            n(r.parent(), a);
            d(r, a, !t)
        })
    };
    i.setValue = function(t) {
        return this.each(function() {
            var i = e(this).data('dropkick').$dk,
                a = e('.dk_options a[data-dk-dropdown-value="' + t + '"]', i);
            a.length && d(a, i) | n(a.parent(), i)
        })
    };
    i.refresh = function(t) {
        return this.each(function() {
            var i = e(this).data('dropkick'),
                r = i.$select,
                a = i.$dk,
                o, l;
            i.options = r.children();
            l = m(s, i).find('.dk_options_inner');
            a.find('.dk_options_inner').replaceWith(l);
            if (!i.$original.parent().length) {
                i.$original = r.find(':selected').first();
                i.label = i.$original.text()
            };
            o = e('a[data-dk-dropdown-value="' + r.val() + '"]', a);
            n(o.parent(), a);
            d(o, a, !t)
        })
    };
    i.destroy = function() {
        return this.each(function() {
            var t = e(this).data('dropkick');
            t.$dk.before(function() {
                return t.$select.removeData('dropkick')
            }).remove()
        })
    };
    i.clone = function(t, i, n) {
        var a = [];
        e.each(this, function(d) {
            var o = e(this).data('dropkick'),
                l = o.settings,
                r = o.$select.clone();
            if (l.autoWidth) {
                l.width = o.$dk.find('.dk_label').width()
            };
            i && r.attr({
                id: i
            });
            n && r.attr({
                name: n
            });
            r.removeData('dropkick');
            if (t === !1) {
                a[d] = r[0]
            } else {
                r.dropkick(l);
                a[d] = r.data('dropkick').$dk[0]
            }
        })
    };
    i.disable = function(t) {
        return this.each(function() {
            var n = e(this).data('dropkick'),
                a = n.$select,
                i = n.$dk;
            if (t === !1) {
                a.removeAttr('disabled');
                i.removeAttr('disabled').attr({
                    tabindex: n.tabindex
                })
            } else {
                i.hasClass('dk_open') && r(i);
                a.attr({
                    disabled: 'disabled'
                });
                i.attr({
                    disabled: 'disabled',
                    tabindex: -1
                })
            }
        })
    };
    e.fn.dropkick = function(e) {
        if (!C) {
            if (i[e]) {
                return i[e].apply(this, Array.prototype.slice.call(arguments, 1))
            };
            if (typeof e === 'object' || !e) {
                return i.init.apply(this, arguments)
            }
        }
    }
}(jQuery, window, document)); /*! waitForImages jQuery Plugin 2013-07-20 */
! function(a) {
    var b = "waitForImages";
    a.waitForImages = {
        hasImageProperties: ["backgroundImage", "listStyleImage", "borderImage", "borderCornerImage", "cursor"]
    }, a.expr[":"].uncached = function(b) {
        if (!a(b).is('img[src!=""]')) return !1;
        var c = new Image;
        return c.src = b.src, !c.complete
    }, a.fn.waitForImages = function(c, d, e) {
        var f = 0,
            g = 0;
        if (a.isPlainObject(arguments[0]) && (e = arguments[0].waitForAll, d = arguments[0].each, c = arguments[0].finished), c = c || a.noop, d = d || a.noop, e = !!e, !a.isFunction(c) || !a.isFunction(d)) throw new TypeError("An invalid callback was supplied.");
        return this.each(function() {
            var h = a(this),
                i = [],
                j = a.waitForImages.hasImageProperties || [],
                k = /url\(\s*(['"]?)(.*?)\1\s*\)/g;
            e ? h.find("*").addBack().each(function() {
                var b = a(this);
                b.is("img:uncached") && i.push({
                    src: b.attr("src"),
                    element: b[0]
                }), a.each(j, function(a, c) {
                    var d, e = b.css(c);
                    if (!e) return !0;
                    for (; d = k.exec(e);) i.push({
                        src: d[2],
                        element: b[0]
                    })
                })
            }) : h.find("img:uncached").each(function() {
                i.push({
                    src: this.src,
                    element: this
                })
            }), f = i.length, g = 0, 0 === f && c.call(h[0]), a.each(i, function(e, i) {
                var j = new Image;
                a(j).on("load." + b + " error." + b, function(a) {
                    return g++, d.call(i.element, g, f, "load" == a.type), g == f ? (c.call(h[0]), !1) : void 0
                }), j.src = i.src
            })
        })
    }
}(jQuery);; /**/
/*! jQuery UI - v1.10.3 - 2013-05-03
 * http://jqueryui.com
 * Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.sortable.js, jquery.ui.effect.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.effect-blind.js, jquery.ui.effect-bounce.js, jquery.ui.effect-clip.js, jquery.ui.effect-drop.js, jquery.ui.effect-explode.js, jquery.ui.effect-fade.js, jquery.ui.effect-fold.js, jquery.ui.effect-highlight.js, jquery.ui.effect-pulsate.js, jquery.ui.effect-scale.js, jquery.ui.effect-shake.js, jquery.ui.effect-slide.js, jquery.ui.effect-transfer.js, jquery.ui.menu.js, jquery.ui.position.js, jquery.ui.progressbar.js, jquery.ui.slider.js, jquery.ui.spinner.js, jquery.ui.tabs.js, jquery.ui.tooltip.js
 * Copyright 2013 jQuery Foundation and other contributors; Licensed MIT */
(function(t, e) {
    var n = 0,
        o = /^ui-id-\d+$/;
    t.ui = t.ui || {};
    t.extend(t.ui, {
        version: "1.10.3",
        keyCode: {
            BACKSPACE: 8,
            COMMA: 188,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            LEFT: 37,
            NUMPAD_ADD: 107,
            NUMPAD_DECIMAL: 110,
            NUMPAD_DIVIDE: 111,
            NUMPAD_ENTER: 108,
            NUMPAD_MULTIPLY: 106,
            NUMPAD_SUBTRACT: 109,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38
        }
    });
    t.fn.extend({
        focus: (function(e) {
            return function(i, s) {
                return typeof i === "number" ? this.each(function() {
                    var e = this;
                    setTimeout(function() {
                        t(e).focus();
                        if (s) {
                            s.call(e)
                        }
                    }, i)
                }) : e.apply(this, arguments)
            }
        })(t.fn.focus),
        scrollParent: function() {
            var e;
            if ((t.ui.ie && (/(static|relative)/).test(this.css("position"))) || (/absolute/).test(this.css("position"))) {
                e = this.parents().filter(function() {
                    return (/(relative|absolute|fixed)/).test(t.css(this, "position")) && (/(auto|scroll)/).test(t.css(this, "overflow") + t.css(this, "overflow-y") + t.css(this, "overflow-x"))
                }).eq(0)
            } else {
                e = this.parents().filter(function() {
                    return (/(auto|scroll)/).test(t.css(this, "overflow") + t.css(this, "overflow-y") + t.css(this, "overflow-x"))
                }).eq(0)
            };
            return (/fixed/).test(this.css("position")) || !e.length ? t(document) : e
        },
        zIndex: function(i) {
            if (i !== e) {
                return this.css("zIndex", i)
            };
            if (this.length) {
                var s = t(this[0]),
                    n, o;
                while (s.length && s[0] !== document) {
                    n = s.css("position");
                    if (n === "absolute" || n === "relative" || n === "fixed") {
                        o = parseInt(s.css("zIndex"), 10);
                        if (!isNaN(o) && o !== 0) {
                            return o
                        }
                    };
                    s = s.parent()
                }
            };
            return 0
        },
        uniqueId: function() {
            return this.each(function() {
                if (!this.id) {
                    this.id = "ui-id-" + (++n)
                }
            })
        },
        removeUniqueId: function() {
            return this.each(function() {
                if (o.test(this.id)) {
                    t(this).removeAttr("id")
                }
            })
        }
    });

    function i(e, i) {
        var n, o, a, r = e.nodeName.toLowerCase();
        if ("area" === r) {
            n = e.parentNode;
            o = n.name;
            if (!e.href || !o || n.nodeName.toLowerCase() !== "map") {
                return !1
            };
            a = t("img[usemap=#" + o + "]")[0];
            return !!a && s(a)
        };
        return (/input|select|textarea|button|object/.test(r) ? !e.disabled : "a" === r ? e.href || i : i) && s(e)
    };

    function s(e) {
        return t.expr.filters.visible(e) && !t(e).parents().addBack().filter(function() {
            return t.css(this, "visibility") === "hidden"
        }).length
    };
    t.extend(t.expr[":"], {
        data: t.expr.createPseudo ? t.expr.createPseudo(function(e) {
            return function(i) {
                return !!t.data(i, e)
            }
        }) : function(e, i, s) {
            return !!t.data(e, s[3])
        },
        focusable: function(e) {
            return i(e, !isNaN(t.attr(e, "tabindex")))
        },
        tabbable: function(e) {
            var s = t.attr(e, "tabindex"),
                n = isNaN(s);
            return (n || s >= 0) && i(e, !n)
        }
    });
    if (!t("<a>").outerWidth(1).jquery) {
        t.each(["Width", "Height"], function(i, s) {
            var r = s === "Width" ? ["Left", "Right"] : ["Top", "Bottom"],
                n = s.toLowerCase(),
                o = {
                    innerWidth: t.fn.innerWidth,
                    innerHeight: t.fn.innerHeight,
                    outerWidth: t.fn.outerWidth,
                    outerHeight: t.fn.outerHeight
                };

            function a(e, i, s, n) {
                t.each(r, function() {
                    i -= parseFloat(t.css(e, "padding" + this)) || 0;
                    if (s) {
                        i -= parseFloat(t.css(e, "border" + this + "Width")) || 0
                    };
                    if (n) {
                        i -= parseFloat(t.css(e, "margin" + this)) || 0
                    }
                });
                return i
            };
            t.fn["inner" + s] = function(i) {
                if (i === e) {
                    return o["inner" + s].call(this)
                };
                return this.each(function() {
                    t(this).css(n, a(this, i) + "px")
                })
            };
            t.fn["outer" + s] = function(e, i) {
                if (typeof e !== "number") {
                    return o["outer" + s].call(this, e)
                };
                return this.each(function() {
                    t(this).css(n, a(this, e, !0, i) + "px")
                })
            }
        })
    };
    if (!t.fn.addBack) {
        t.fn.addBack = function(t) {
            return this.add(t == null ? this.prevObject : this.prevObject.filter(t))
        }
    };
    if (t("<a>").data("a-b", "a").removeData("a-b").data("a-b")) {
        t.fn.removeData = (function(e) {
            return function(i) {
                if (arguments.length) {
                    return e.call(this, t.camelCase(i))
                } else {
                    return e.call(this)
                }
            }
        })(t.fn.removeData)
    };
    t.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());
    t.support.selectstart = "onselectstart" in document.createElement("div");
    t.fn.extend({
        disableSelection: function() {
            return this.bind((t.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function(t) {
                t.preventDefault()
            })
        },
        enableSelection: function() {
            return this.unbind(".ui-disableSelection")
        }
    });
    t.extend(t.ui, {
        plugin: {
            add: function(e, i, s) {
                var n, o = t.ui[e].prototype;
                for (n in s) {
                    o.plugins[n] = o.plugins[n] || [];
                    o.plugins[n].push([i, s[n]])
                }
            },
            call: function(t, e, i) {
                var s, n = t.plugins[e];
                if (!n || !t.element[0].parentNode || t.element[0].parentNode.nodeType === 11) {
                    return
                };
                for (s = 0; s < n.length; s++) {
                    if (t.options[n[s][0]]) {
                        n[s][1].apply(t.element, i)
                    }
                }
            }
        },
        hasScroll: function(e, i) {
            if (t(e).css("overflow") === "hidden") {
                return !1
            };
            var s = (i && i === "left") ? "scrollLeft" : "scrollTop",
                n = !1;
            if (e[s] > 0) {
                return !0
            };
            e[s] = 1;
            n = (e[s] > 0);
            e[s] = 0;
            return n
        }
    })
})(jQuery);
(function(t, e) {
    var s = 0,
        i = Array.prototype.slice,
        n = t.cleanData;
    t.cleanData = function(e) {
        for (var s = 0, o;
            (o = e[s]) != null; s++) {
            try {
                t(o).triggerHandler("remove")
            } catch (i) {}
        };
        n(e)
    };
    t.widget = function(e, i, s) {
        var l, o, n, r, h = {},
            a = e.split(".")[0];
        e = e.split(".")[1];
        l = a + "-" + e;
        if (!s) {
            s = i;
            i = t.Widget
        };
        t.expr[":"][l.toLowerCase()] = function(e) {
            return !!t.data(e, l)
        };
        t[a] = t[a] || {};
        o = t[a][e];
        n = t[a][e] = function(t, e) {
            if (!this._createWidget) {
                return new n(t, e)
            };
            if (arguments.length) {
                this._createWidget(t, e)
            }
        };
        t.extend(n, o, {
            version: s.version,
            _proto: t.extend({}, s),
            _childConstructors: []
        });
        r = new i();
        r.options = t.widget.extend({}, r.options);
        t.each(s, function(e, s) {
            if (!t.isFunction(s)) {
                h[e] = s;
                return
            };
            h[e] = (function() {
                var t = function() {
                        return i.prototype[e].apply(this, arguments)
                    },
                    n = function(t) {
                        return i.prototype[e].apply(this, t)
                    };
                return function() {
                    var i = this._super,
                        o = this._superApply,
                        e;
                    this._super = t;
                    this._superApply = n;
                    e = s.apply(this, arguments);
                    this._super = i;
                    this._superApply = o;
                    return e
                }
            })()
        });
        n.prototype = t.widget.extend(r, {
            widgetEventPrefix: o ? r.widgetEventPrefix : e
        }, h, {
            constructor: n,
            namespace: a,
            widgetName: e,
            widgetFullName: l
        });
        if (o) {
            t.each(o._childConstructors, function(e, i) {
                var s = i.prototype;
                t.widget(s.namespace + "." + s.widgetName, n, i._proto)
            });
            delete o._childConstructors
        } else {
            i._childConstructors.push(n)
        };
        t.widget.bridge(e, n)
    };
    t.widget.extend = function(s) {
        var r = i.call(arguments, 1),
            a = 0,
            l = r.length,
            n, o;
        for (; a < l; a++) {
            for (n in r[a]) {
                o = r[a][n];
                if (r[a].hasOwnProperty(n) && o !== e) {
                    if (t.isPlainObject(o)) {
                        s[n] = t.isPlainObject(s[n]) ? t.widget.extend({}, s[n], o) : t.widget.extend({}, o)
                    } else {
                        s[n] = o
                    }
                }
            }
        };
        return s
    };
    t.widget.bridge = function(s, n) {
        var o = n.prototype.widgetFullName || s;
        t.fn[s] = function(a) {
            var h = typeof a === "string",
                r = i.call(arguments, 1),
                l = this;
            a = !h && r.length ? t.widget.extend.apply(null, [a].concat(r)) : a;
            if (h) {
                this.each(function() {
                    var i, n = t.data(this, o);
                    if (!n) {
                        return t.error("cannot call methods on " + s + " prior to initialization; attempted to call method '" + a + "'")
                    };
                    if (!t.isFunction(n[a]) || a.charAt(0) === "_") {
                        return t.error("no such method '" + a + "' for " + s + " widget instance")
                    };
                    i = n[a].apply(n, r);
                    if (i !== n && i !== e) {
                        l = i && i.jquery ? l.pushStack(i.get()) : i;
                        return !1
                    }
                })
            } else {
                this.each(function() {
                    var e = t.data(this, o);
                    if (e) {
                        e.option(a || {})._init()
                    } else {
                        t.data(this, o, new n(a, this))
                    }
                })
            };
            return l
        }
    };
    t.Widget = function() {};
    t.Widget._childConstructors = [];
    t.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            disabled: !1,
            create: null
        },
        _createWidget: function(e, i) {
            i = t(i || this.defaultElement || this)[0];
            this.element = t(i);
            this.uuid = s++;
            this.eventNamespace = "." + this.widgetName + this.uuid;
            this.options = t.widget.extend({}, this.options, this._getCreateOptions(), e);
            this.bindings = t();
            this.hoverable = t();
            this.focusable = t();
            if (i !== this) {
                t.data(i, this.widgetFullName, this);
                this._on(!0, this.element, {
                    remove: function(t) {
                        if (t.target === i) {
                            this.destroy()
                        }
                    }
                });
                this.document = t(i.style ? i.ownerDocument : i.document || i);
                this.window = t(this.document[0].defaultView || this.document[0].parentWindow)
            };
            this._create();
            this._trigger("create", null, this._getCreateEventData());
            this._init()
        },
        _getCreateOptions: t.noop,
        _getCreateEventData: t.noop,
        _create: t.noop,
        _init: t.noop,
        destroy: function() {
            this._destroy();
            this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(t.camelCase(this.widgetFullName));
            this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled ui-state-disabled");
            this.bindings.unbind(this.eventNamespace);
            this.hoverable.removeClass("ui-state-hover");
            this.focusable.removeClass("ui-state-focus")
        },
        _destroy: t.noop,
        widget: function() {
            return this.element
        },
        option: function(i, s) {
            var r = i,
                n, o, a;
            if (arguments.length === 0) {
                return t.widget.extend({}, this.options)
            };
            if (typeof i === "string") {
                r = {};
                n = i.split(".");
                i = n.shift();
                if (n.length) {
                    o = r[i] = t.widget.extend({}, this.options[i]);
                    for (a = 0; a < n.length - 1; a++) {
                        o[n[a]] = o[n[a]] || {};
                        o = o[n[a]]
                    };
                    i = n.pop();
                    if (s === e) {
                        return o[i] === e ? null : o[i]
                    };
                    o[i] = s
                } else {
                    if (s === e) {
                        return this.options[i] === e ? null : this.options[i]
                    };
                    r[i] = s
                }
            };
            this._setOptions(r);
            return this
        },
        _setOptions: function(t) {
            var e;
            for (e in t) {
                this._setOption(e, t[e])
            };
            return this
        },
        _setOption: function(t, e) {
            this.options[t] = e;
            if (t === "disabled") {
                this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!e).attr("aria-disabled", e);
                this.hoverable.removeClass("ui-state-hover");
                this.focusable.removeClass("ui-state-focus")
            };
            return this
        },
        enable: function() {
            return this._setOption("disabled", !1)
        },
        disable: function() {
            return this._setOption("disabled", !0)
        },
        _on: function(e, i, s) {
            var o, n = this;
            if (typeof e !== "boolean") {
                s = i;
                i = e;
                e = !1
            };
            if (!s) {
                s = i;
                i = this.element;
                o = this.widget()
            } else {
                i = o = t(i);
                this.bindings = this.bindings.add(i)
            };
            t.each(s, function(s, a) {
                function r() {
                    if (!e && (n.options.disabled === !0 || t(this).hasClass("ui-state-disabled"))) {
                        return
                    };
                    return (typeof a === "string" ? n[a] : a).apply(n, arguments)
                };
                if (typeof a !== "string") {
                    r.guid = a.guid = a.guid || r.guid || t.guid++
                };
                var l = s.match(/^(\w+)\s*(.*)$/),
                    h = l[1] + n.eventNamespace,
                    u = l[2];
                if (u) {
                    o.delegate(u, h, r)
                } else {
                    i.bind(h, r)
                }
            })
        },
        _off: function(t, e) {
            e = (e || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace;
            t.unbind(e).undelegate(e)
        },
        _delay: function(t, e) {
            function s() {
                return (typeof t === "string" ? i[t] : t).apply(i, arguments)
            };
            var i = this;
            return setTimeout(s, e || 0)
        },
        _hoverable: function(e) {
            this.hoverable = this.hoverable.add(e);
            this._on(e, {
                mouseenter: function(e) {
                    t(e.currentTarget).addClass("ui-state-hover")
                },
                mouseleave: function(e) {
                    t(e.currentTarget).removeClass("ui-state-hover")
                }
            })
        },
        _focusable: function(e) {
            this.focusable = this.focusable.add(e);
            this._on(e, {
                focusin: function(e) {
                    t(e.currentTarget).addClass("ui-state-focus")
                },
                focusout: function(e) {
                    t(e.currentTarget).removeClass("ui-state-focus")
                }
            })
        },
        _trigger: function(e, i, s) {
            var n, o, a = this.options[e];
            s = s || {};
            i = t.Event(i);
            i.type = (e === this.widgetEventPrefix ? e : this.widgetEventPrefix + e).toLowerCase();
            i.target = this.element[0];
            o = i.originalEvent;
            if (o) {
                for (n in o) {
                    if (!(n in i)) {
                        i[n] = o[n]
                    }
                }
            };
            this.element.trigger(i, s);
            return !(t.isFunction(a) && a.apply(this.element[0], [i].concat(s)) === !1 || i.isDefaultPrevented())
        }
    };
    t.each({
        show: "fadeIn",
        hide: "fadeOut"
    }, function(e, i) {
        t.Widget.prototype["_" + e] = function(s, n, o) {
            if (typeof n === "string") {
                n = {
                    effect: n
                }
            };
            var r, a = !n ? e : n === !0 || typeof n === "number" ? i : n.effect || i;
            n = n || {};
            if (typeof n === "number") {
                n = {
                    duration: n
                }
            };
            r = !t.isEmptyObject(n);
            n.complete = o;
            if (n.delay) {
                s.delay(n.delay)
            };
            if (r && t.effects && t.effects.effect[a]) {
                s[e](n)
            } else if (a !== e && s[a]) {
                s[a](n.duration, n.easing, o)
            } else {
                s.queue(function(i) {
                    t(this)[e]();
                    if (o) {
                        o.call(s[0])
                    };
                    i()
                })
            }
        }
    })
})(jQuery);
(function(t, e) {
    var i = !1;
    t(document).mouseup(function() {
        i = !1
    });
    t.widget("ui.mouse", {
        version: "1.10.3",
        options: {
            cancel: "input,textarea,button,select,option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function() {
            var e = this;
            this.element.bind("mousedown." + this.widgetName, function(t) {
                return e._mouseDown(t)
            }).bind("click." + this.widgetName, function(i) {
                if (!0 === t.data(i.target, e.widgetName + ".preventClickEvent")) {
                    t.removeData(i.target, e.widgetName + ".preventClickEvent");
                    i.stopImmediatePropagation();
                    return !1
                }
            });
            this.started = !1
        },
        _mouseDestroy: function() {
            this.element.unbind("." + this.widgetName);
            if (this._mouseMoveDelegate) {
                t(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate)
            }
        },
        _mouseDown: function(e) {
            if (i) {
                return
            }(this._mouseStarted && this._mouseUp(e));
            this._mouseDownEvent = e;
            var s = this,
                n = (e.which === 1),
                o = (typeof this.options.cancel === "string" && e.target.nodeName ? t(e.target).closest(this.options.cancel).length : !1);
            if (!n || o || !this._mouseCapture(e)) {
                return !0
            };
            this.mouseDelayMet = !this.options.delay;
            if (!this.mouseDelayMet) {
                this._mouseDelayTimer = setTimeout(function() {
                    s.mouseDelayMet = !0
                }, this.options.delay)
            };
            if (this._mouseDistanceMet(e) && this._mouseDelayMet(e)) {
                this._mouseStarted = (this._mouseStart(e) !== !1);
                if (!this._mouseStarted) {
                    e.preventDefault();
                    return !0
                }
            };
            if (!0 === t.data(e.target, this.widgetName + ".preventClickEvent")) {
                t.removeData(e.target, this.widgetName + ".preventClickEvent")
            };
            this._mouseMoveDelegate = function(t) {
                return s._mouseMove(t)
            };
            this._mouseUpDelegate = function(t) {
                return s._mouseUp(t)
            };
            t(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate);
            e.preventDefault();
            i = !0;
            return !0
        },
        _mouseMove: function(e) {
            if (t.ui.ie && (!document.documentMode || document.documentMode < 9) && !e.button) {
                return this._mouseUp(e)
            };
            if (this._mouseStarted) {
                this._mouseDrag(e);
                return e.preventDefault()
            };
            if (this._mouseDistanceMet(e) && this._mouseDelayMet(e)) {
                this._mouseStarted = (this._mouseStart(this._mouseDownEvent, e) !== !1);
                (this._mouseStarted ? this._mouseDrag(e) : this._mouseUp(e))
            };
            return !this._mouseStarted
        },
        _mouseUp: function(e) {
            t(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
            if (this._mouseStarted) {
                this._mouseStarted = !1;
                if (e.target === this._mouseDownEvent.target) {
                    t.data(e.target, this.widgetName + ".preventClickEvent", !0)
                };
                this._mouseStop(e)
            };
            return !1
        },
        _mouseDistanceMet: function(t) {
            return (Math.max(Math.abs(this._mouseDownEvent.pageX - t.pageX), Math.abs(this._mouseDownEvent.pageY - t.pageY)) >= this.options.distance)
        },
        _mouseDelayMet: function() {
            return this.mouseDelayMet
        },
        _mouseStart: function() {},
        _mouseDrag: function() {},
        _mouseStop: function() {},
        _mouseCapture: function() {
            return !0
        }
    })
})(jQuery);
(function(t, e) {
    t.widget("ui.draggable", t.ui.mouse, {
        version: "1.10.3",
        widgetEventPrefix: "drag",
        options: {
            addClasses: !0,
            appendTo: "parent",
            axis: !1,
            connectToSortable: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            iframeFix: !1,
            opacity: !1,
            refreshPositions: !1,
            revert: !1,
            revertDuration: 500,
            scope: "default",
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: !1,
            snapMode: "both",
            snapTolerance: 20,
            stack: !1,
            zIndex: !1,
            drag: null,
            start: null,
            stop: null
        },
        _create: function() {
            if (this.options.helper === "original" && !(/^(?:r|a|f)/).test(this.element.css("position"))) {
                this.element[0].style.position = "relative"
            };
            if (this.options.addClasses) {
                this.element.addClass("ui-draggable")
            };
            if (this.options.disabled) {
                this.element.addClass("ui-draggable-disabled")
            };
            this._mouseInit()
        },
        _destroy: function() {
            this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");
            this._mouseDestroy()
        },
        _mouseCapture: function(e) {
            var i = this.options;
            if (this.helper || i.disabled || t(e.target).closest(".ui-resizable-handle").length > 0) {
                return !1
            };
            this.handle = this._getHandle(e);
            if (!this.handle) {
                return !1
            };
            t(i.iframeFix === !0 ? "iframe" : i.iframeFix).each(function() {
                t("<div class='ui-draggable-iframeFix' style='background: #fff;'></div>").css({
                    width: this.offsetWidth + "px",
                    height: this.offsetHeight + "px",
                    position: "absolute",
                    opacity: "0.001",
                    zIndex: 1000
                }).css(t(this).offset()).appendTo("body")
            });
            return !0
        },
        _mouseStart: function(e) {
            var i = this.options;
            this.helper = this._createHelper(e);
            this.helper.addClass("ui-draggable-dragging");
            this._cacheHelperProportions();
            if (t.ui.ddmanager) {
                t.ui.ddmanager.current = this
            };
            this._cacheMargins();
            this.cssPosition = this.helper.css("position");
            this.scrollParent = this.helper.scrollParent();
            this.offsetParent = this.helper.offsetParent();
            this.offsetParentCssPosition = this.offsetParent.css("position");
            this.offset = this.positionAbs = this.element.offset();
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            };
            this.offset.scroll = !1;
            t.extend(this.offset, {
                click: {
                    left: e.pageX - this.offset.left,
                    top: e.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            });
            this.originalPosition = this.position = this._generatePosition(e);
            this.originalPageX = e.pageX;
            this.originalPageY = e.pageY;
            (i.cursorAt && this._adjustOffsetFromHelper(i.cursorAt));
            this._setContainment();
            if (this._trigger("start", e) === !1) {
                this._clear();
                return !1
            };
            this._cacheHelperProportions();
            if (t.ui.ddmanager && !i.dropBehaviour) {
                t.ui.ddmanager.prepareOffsets(this, e)
            };
            this._mouseDrag(e, !0);
            if (t.ui.ddmanager) {
                t.ui.ddmanager.dragStart(this, e)
            };
            return !0
        },
        _mouseDrag: function(e, i) {
            if (this.offsetParentCssPosition === "fixed") {
                this.offset.parent = this._getParentOffset()
            };
            this.position = this._generatePosition(e);
            this.positionAbs = this._convertPositionTo("absolute");
            if (!i) {
                var s = this._uiHash();
                if (this._trigger("drag", e, s) === !1) {
                    this._mouseUp({});
                    return !1
                };
                this.position = s.position
            };
            if (!this.options.axis || this.options.axis !== "y") {
                this.helper[0].style.left = this.position.left + "px"
            };
            if (!this.options.axis || this.options.axis !== "x") {
                this.helper[0].style.top = this.position.top + "px"
            };
            if (t.ui.ddmanager) {
                t.ui.ddmanager.drag(this, e)
            };
            return !1
        },
        _mouseStop: function(e) {
            var s = this,
                i = !1;
            if (t.ui.ddmanager && !this.options.dropBehaviour) {
                i = t.ui.ddmanager.drop(this, e)
            };
            if (this.dropped) {
                i = this.dropped;
                this.dropped = !1
            };
            if (this.options.helper === "original" && !t.contains(this.element[0].ownerDocument, this.element[0])) {
                return !1
            };
            if ((this.options.revert === "invalid" && !i) || (this.options.revert === "valid" && i) || this.options.revert === !0 || (t.isFunction(this.options.revert) && this.options.revert.call(this.element, i))) {
                t(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
                    if (s._trigger("stop", e) !== !1) {
                        s._clear()
                    }
                })
            } else {
                if (this._trigger("stop", e) !== !1) {
                    this._clear()
                }
            };
            return !1
        },
        _mouseUp: function(e) {
            t("div.ui-draggable-iframeFix").each(function() {
                this.parentNode.removeChild(this)
            });
            if (t.ui.ddmanager) {
                t.ui.ddmanager.dragStop(this, e)
            };
            return t.ui.mouse.prototype._mouseUp.call(this, e)
        },
        cancel: function() {
            if (this.helper.is(".ui-draggable-dragging")) {
                this._mouseUp({})
            } else {
                this._clear()
            };
            return this
        },
        _getHandle: function(e) {
            return this.options.handle ? !!t(e.target).closest(this.element.find(this.options.handle)).length : !0
        },
        _createHelper: function(e) {
            var s = this.options,
                i = t.isFunction(s.helper) ? t(s.helper.apply(this.element[0], [e])) : (s.helper === "clone" ? this.element.clone().removeAttr("id") : this.element);
            if (!i.parents("body").length) {
                i.appendTo((s.appendTo === "parent" ? this.element[0].parentNode : s.appendTo))
            };
            if (i[0] !== this.element[0] && !(/(fixed|absolute)/).test(i.css("position"))) {
                i.css("position", "absolute")
            };
            return i
        },
        _adjustOffsetFromHelper: function(e) {
            if (typeof e === "string") {
                e = e.split(" ")
            };
            if (t.isArray(e)) {
                e = {
                    left: +e[0],
                    top: +e[1] || 0
                }
            };
            if ("left" in e) {
                this.offset.click.left = e.left + this.margins.left
            };
            if ("right" in e) {
                this.offset.click.left = this.helperProportions.width - e.right + this.margins.left
            };
            if ("top" in e) {
                this.offset.click.top = e.top + this.margins.top
            };
            if ("bottom" in e) {
                this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top
            }
        },
        _getParentOffset: function() {
            var e = this.offsetParent.offset();
            if (this.cssPosition === "absolute" && this.scrollParent[0] !== document && t.contains(this.scrollParent[0], this.offsetParent[0])) {
                e.left += this.scrollParent.scrollLeft();
                e.top += this.scrollParent.scrollTop()
            };
            if ((this.offsetParent[0] === document.body) || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === "html" && t.ui.ie)) {
                e = {
                    top: 0,
                    left: 0
                }
            };
            return {
                top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if (this.cssPosition === "relative") {
                var t = this.element.position();
                return {
                    top: t.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: t.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            } else {
                return {
                    top: 0,
                    left: 0
                }
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: (parseInt(this.element.css("marginLeft"), 10) || 0),
                top: (parseInt(this.element.css("marginTop"), 10) || 0),
                right: (parseInt(this.element.css("marginRight"), 10) || 0),
                bottom: (parseInt(this.element.css("marginBottom"), 10) || 0)
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var n, e, i, s = this.options;
            if (!s.containment) {
                this.containment = null;
                return
            };
            if (s.containment === "window") {
                this.containment = [t(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, t(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, t(window).scrollLeft() + t(window).width() - this.helperProportions.width - this.margins.left, t(window).scrollTop() + (t(window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
                return
            };
            if (s.containment === "document") {
                this.containment = [0, 0, t(document).width() - this.helperProportions.width - this.margins.left, (t(document).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
                return
            };
            if (s.containment.constructor === Array) {
                this.containment = s.containment;
                return
            };
            if (s.containment === "parent") {
                s.containment = this.helper[0].parentNode
            };
            e = t(s.containment);
            i = e[0];
            if (!i) {
                return
            };
            n = e.css("overflow") !== "hidden";
            this.containment = [(parseInt(e.css("borderLeftWidth"), 10) || 0) + (parseInt(e.css("paddingLeft"), 10) || 0), (parseInt(e.css("borderTopWidth"), 10) || 0) + (parseInt(e.css("paddingTop"), 10) || 0), (n ? Math.max(i.scrollWidth, i.offsetWidth) : i.offsetWidth) - (parseInt(e.css("borderRightWidth"), 10) || 0) - (parseInt(e.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (n ? Math.max(i.scrollHeight, i.offsetHeight) : i.offsetHeight) - (parseInt(e.css("borderBottomWidth"), 10) || 0) - (parseInt(e.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom];
            this.relative_container = e
        },
        _convertPositionTo: function(e, i) {
            if (!i) {
                i = this.position
            };
            var s = e === "absolute" ? 1 : -1,
                n = this.cssPosition === "absolute" && !(this.scrollParent[0] !== document && t.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent;
            if (!this.offset.scroll) {
                this.offset.scroll = {
                    top: n.scrollTop(),
                    left: n.scrollLeft()
                }
            };
            return {
                top: (i.top + this.offset.relative.top * s + this.offset.parent.top * s - ((this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : this.offset.scroll.top) * s)),
                left: (i.left + this.offset.relative.left * s + this.offset.parent.left * s - ((this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : this.offset.scroll.left) * s))
            }
        },
        _generatePosition: function(e) {
            var i, a, n, o, s = this.options,
                h = this.cssPosition === "absolute" && !(this.scrollParent[0] !== document && t.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                r = e.pageX,
                l = e.pageY;
            if (!this.offset.scroll) {
                this.offset.scroll = {
                    top: h.scrollTop(),
                    left: h.scrollLeft()
                }
            };
            if (this.originalPosition) {
                if (this.containment) {
                    if (this.relative_container) {
                        a = this.relative_container.offset();
                        i = [this.containment[0] + a.left, this.containment[1] + a.top, this.containment[2] + a.left, this.containment[3] + a.top]
                    } else {
                        i = this.containment
                    };
                    if (e.pageX - this.offset.click.left < i[0]) {
                        r = i[0] + this.offset.click.left
                    };
                    if (e.pageY - this.offset.click.top < i[1]) {
                        l = i[1] + this.offset.click.top
                    };
                    if (e.pageX - this.offset.click.left > i[2]) {
                        r = i[2] + this.offset.click.left
                    };
                    if (e.pageY - this.offset.click.top > i[3]) {
                        l = i[3] + this.offset.click.top
                    }
                };
                if (s.grid) {
                    n = s.grid[1] ? this.originalPageY + Math.round((l - this.originalPageY) / s.grid[1]) * s.grid[1] : this.originalPageY;
                    l = i ? ((n - this.offset.click.top >= i[1] || n - this.offset.click.top > i[3]) ? n : ((n - this.offset.click.top >= i[1]) ? n - s.grid[1] : n + s.grid[1])) : n;
                    o = s.grid[0] ? this.originalPageX + Math.round((r - this.originalPageX) / s.grid[0]) * s.grid[0] : this.originalPageX;
                    r = i ? ((o - this.offset.click.left >= i[0] || o - this.offset.click.left > i[2]) ? o : ((o - this.offset.click.left >= i[0]) ? o - s.grid[0] : o + s.grid[0])) : o
                }
            };
            return {
                top: (l - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : this.offset.scroll.top)),
                left: (r - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : this.offset.scroll.left))
            }
        },
        _clear: function() {
            this.helper.removeClass("ui-draggable-dragging");
            if (this.helper[0] !== this.element[0] && !this.cancelHelperRemoval) {
                this.helper.remove()
            };
            this.helper = null;
            this.cancelHelperRemoval = !1
        },
        _trigger: function(e, i, s) {
            s = s || this._uiHash();
            t.ui.plugin.call(this, e, [i, s]);
            if (e === "drag") {
                this.positionAbs = this._convertPositionTo("absolute")
            };
            return t.Widget.prototype._trigger.call(this, e, i, s)
        },
        plugins: {},
        _uiHash: function() {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            }
        }
    });
    t.ui.plugin.add("draggable", "connectToSortable", {
        start: function(e, i) {
            var s = t(this).data("ui-draggable"),
                n = s.options,
                o = t.extend({}, i, {
                    item: s.element
                });
            s.sortables = [];
            t(n.connectToSortable).each(function() {
                var i = t.data(this, "ui-sortable");
                if (i && !i.options.disabled) {
                    s.sortables.push({
                        instance: i,
                        shouldRevert: i.options.revert
                    });
                    i.refreshPositions();
                    i._trigger("activate", e, o)
                }
            })
        },
        stop: function(e, i) {
            var s = t(this).data("ui-draggable"),
                n = t.extend({}, i, {
                    item: s.element
                });
            t.each(s.sortables, function() {
                if (this.instance.isOver) {
                    this.instance.isOver = 0;
                    s.cancelHelperRemoval = !0;
                    this.instance.cancelHelperRemoval = !1;
                    if (this.shouldRevert) {
                        this.instance.options.revert = this.shouldRevert
                    };
                    this.instance._mouseStop(e);
                    this.instance.options.helper = this.instance.options._helper;
                    if (s.options.helper === "original") {
                        this.instance.currentItem.css({
                            top: "auto",
                            left: "auto"
                        })
                    }
                } else {
                    this.instance.cancelHelperRemoval = !1;
                    this.instance._trigger("deactivate", e, n)
                }
            })
        },
        drag: function(e, i) {
            var s = t(this).data("ui-draggable"),
                n = this;
            t.each(s.sortables, function() {
                var o = !1,
                    a = this;
                this.instance.positionAbs = s.positionAbs;
                this.instance.helperProportions = s.helperProportions;
                this.instance.offset.click = s.offset.click;
                if (this.instance._intersectsWith(this.instance.containerCache)) {
                    o = !0;
                    t.each(s.sortables, function() {
                        this.instance.positionAbs = s.positionAbs;
                        this.instance.helperProportions = s.helperProportions;
                        this.instance.offset.click = s.offset.click;
                        if (this !== a && this.instance._intersectsWith(this.instance.containerCache) && t.contains(a.instance.element[0], this.instance.element[0])) {
                            o = !1
                        };
                        return o
                    })
                };
                if (o) {
                    if (!this.instance.isOver) {
                        this.instance.isOver = 1;
                        this.instance.currentItem = t(n).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item", !0);
                        this.instance.options._helper = this.instance.options.helper;
                        this.instance.options.helper = function() {
                            return i.helper[0]
                        };
                        e.target = this.instance.currentItem[0];
                        this.instance._mouseCapture(e, !0);
                        this.instance._mouseStart(e, !0, !0);
                        this.instance.offset.click.top = s.offset.click.top;
                        this.instance.offset.click.left = s.offset.click.left;
                        this.instance.offset.parent.left -= s.offset.parent.left - this.instance.offset.parent.left;
                        this.instance.offset.parent.top -= s.offset.parent.top - this.instance.offset.parent.top;
                        s._trigger("toSortable", e);
                        s.dropped = this.instance.element;
                        s.currentItem = s.element;
                        this.instance.fromOutside = s
                    };
                    if (this.instance.currentItem) {
                        this.instance._mouseDrag(e)
                    }
                } else {
                    if (this.instance.isOver) {
                        this.instance.isOver = 0;
                        this.instance.cancelHelperRemoval = !0;
                        this.instance.options.revert = !1;
                        this.instance._trigger("out", e, this.instance._uiHash(this.instance));
                        this.instance._mouseStop(e, !0);
                        this.instance.options.helper = this.instance.options._helper;
                        this.instance.currentItem.remove();
                        if (this.instance.placeholder) {
                            this.instance.placeholder.remove()
                        };
                        s._trigger("fromSortable", e);
                        s.dropped = !1
                    }
                }
            })
        }
    });
    t.ui.plugin.add("draggable", "cursor", {
        start: function() {
            var e = t("body"),
                i = t(this).data("ui-draggable").options;
            if (e.css("cursor")) {
                i._cursor = e.css("cursor")
            };
            e.css("cursor", i.cursor)
        },
        stop: function() {
            var e = t(this).data("ui-draggable").options;
            if (e._cursor) {
                t("body").css("cursor", e._cursor)
            }
        }
    });
    t.ui.plugin.add("draggable", "opacity", {
        start: function(e, i) {
            var s = t(i.helper),
                n = t(this).data("ui-draggable").options;
            if (s.css("opacity")) {
                n._opacity = s.css("opacity")
            };
            s.css("opacity", n.opacity)
        },
        stop: function(e, i) {
            var s = t(this).data("ui-draggable").options;
            if (s._opacity) {
                t(i.helper).css("opacity", s._opacity)
            }
        }
    });
    t.ui.plugin.add("draggable", "scroll", {
        start: function() {
            var e = t(this).data("ui-draggable");
            if (e.scrollParent[0] !== document && e.scrollParent[0].tagName !== "HTML") {
                e.overflowOffset = e.scrollParent.offset()
            }
        },
        drag: function(e) {
            var s = t(this).data("ui-draggable"),
                i = s.options,
                n = !1;
            if (s.scrollParent[0] !== document && s.scrollParent[0].tagName !== "HTML") {
                if (!i.axis || i.axis !== "x") {
                    if ((s.overflowOffset.top + s.scrollParent[0].offsetHeight) - e.pageY < i.scrollSensitivity) {
                        s.scrollParent[0].scrollTop = n = s.scrollParent[0].scrollTop + i.scrollSpeed
                    } else if (e.pageY - s.overflowOffset.top < i.scrollSensitivity) {
                        s.scrollParent[0].scrollTop = n = s.scrollParent[0].scrollTop - i.scrollSpeed
                    }
                };
                if (!i.axis || i.axis !== "y") {
                    if ((s.overflowOffset.left + s.scrollParent[0].offsetWidth) - e.pageX < i.scrollSensitivity) {
                        s.scrollParent[0].scrollLeft = n = s.scrollParent[0].scrollLeft + i.scrollSpeed
                    } else if (e.pageX - s.overflowOffset.left < i.scrollSensitivity) {
                        s.scrollParent[0].scrollLeft = n = s.scrollParent[0].scrollLeft - i.scrollSpeed
                    }
                }
            } else {
                if (!i.axis || i.axis !== "x") {
                    if (e.pageY - t(document).scrollTop() < i.scrollSensitivity) {
                        n = t(document).scrollTop(t(document).scrollTop() - i.scrollSpeed)
                    } else if (t(window).height() - (e.pageY - t(document).scrollTop()) < i.scrollSensitivity) {
                        n = t(document).scrollTop(t(document).scrollTop() + i.scrollSpeed)
                    }
                };
                if (!i.axis || i.axis !== "y") {
                    if (e.pageX - t(document).scrollLeft() < i.scrollSensitivity) {
                        n = t(document).scrollLeft(t(document).scrollLeft() - i.scrollSpeed)
                    } else if (t(window).width() - (e.pageX - t(document).scrollLeft()) < i.scrollSensitivity) {
                        n = t(document).scrollLeft(t(document).scrollLeft() + i.scrollSpeed)
                    }
                }
            };
            if (n !== !1 && t.ui.ddmanager && !i.dropBehaviour) {
                t.ui.ddmanager.prepareOffsets(s, e)
            }
        }
    });
    t.ui.plugin.add("draggable", "snap", {
        start: function() {
            var e = t(this).data("ui-draggable"),
                i = e.options;
            e.snapElements = [];
            t(i.snap.constructor !== String ? (i.snap.items || ":data(ui-draggable)") : i.snap).each(function() {
                var i = t(this),
                    s = i.offset();
                if (this !== e.element[0]) {
                    e.snapElements.push({
                        item: this,
                        width: i.outerWidth(),
                        height: i.outerHeight(),
                        top: s.top,
                        left: s.left
                    })
                }
            })
        },
        drag: function(e, i) {
            var a, r, l, h, u, f, c, d, n, m, s = t(this).data("ui-draggable"),
                v = s.options,
                o = v.snapTolerance,
                p = i.offset.left,
                b = p + s.helperProportions.width,
                g = i.offset.top,
                y = g + s.helperProportions.height;
            for (n = s.snapElements.length - 1; n >= 0; n--) {
                u = s.snapElements[n].left;
                f = u + s.snapElements[n].width;
                c = s.snapElements[n].top;
                d = c + s.snapElements[n].height;
                if (b < u - o || p > f + o || y < c - o || g > d + o || !t.contains(s.snapElements[n].item.ownerDocument, s.snapElements[n].item)) {
                    if (s.snapElements[n].snapping) {
                        (s.options.snap.release && s.options.snap.release.call(s.element, e, t.extend(s._uiHash(), {
                            snapItem: s.snapElements[n].item
                        })))
                    };
                    s.snapElements[n].snapping = !1;
                    continue
                };
                if (v.snapMode !== "inner") {
                    a = Math.abs(c - y) <= o;
                    r = Math.abs(d - g) <= o;
                    l = Math.abs(u - b) <= o;
                    h = Math.abs(f - p) <= o;
                    if (a) {
                        i.position.top = s._convertPositionTo("relative", {
                            top: c - s.helperProportions.height,
                            left: 0
                        }).top - s.margins.top
                    };
                    if (r) {
                        i.position.top = s._convertPositionTo("relative", {
                            top: d,
                            left: 0
                        }).top - s.margins.top
                    };
                    if (l) {
                        i.position.left = s._convertPositionTo("relative", {
                            top: 0,
                            left: u - s.helperProportions.width
                        }).left - s.margins.left
                    };
                    if (h) {
                        i.position.left = s._convertPositionTo("relative", {
                            top: 0,
                            left: f
                        }).left - s.margins.left
                    }
                };
                m = (a || r || l || h);
                if (v.snapMode !== "outer") {
                    a = Math.abs(c - g) <= o;
                    r = Math.abs(d - y) <= o;
                    l = Math.abs(u - p) <= o;
                    h = Math.abs(f - b) <= o;
                    if (a) {
                        i.position.top = s._convertPositionTo("relative", {
                            top: c,
                            left: 0
                        }).top - s.margins.top
                    };
                    if (r) {
                        i.position.top = s._convertPositionTo("relative", {
                            top: d - s.helperProportions.height,
                            left: 0
                        }).top - s.margins.top
                    };
                    if (l) {
                        i.position.left = s._convertPositionTo("relative", {
                            top: 0,
                            left: u
                        }).left - s.margins.left
                    };
                    if (h) {
                        i.position.left = s._convertPositionTo("relative", {
                            top: 0,
                            left: f - s.helperProportions.width
                        }).left - s.margins.left
                    }
                };
                if (!s.snapElements[n].snapping && (a || r || l || h || m)) {
                    (s.options.snap.snap && s.options.snap.snap.call(s.element, e, t.extend(s._uiHash(), {
                        snapItem: s.snapElements[n].item
                    })))
                };
                s.snapElements[n].snapping = (a || r || l || h || m)
            }
        }
    });
    t.ui.plugin.add("draggable", "stack", {
        start: function() {
            var i, s = this.data("ui-draggable").options,
                e = t.makeArray(t(s.stack)).sort(function(e, i) {
                    return (parseInt(t(e).css("zIndex"), 10) || 0) - (parseInt(t(i).css("zIndex"), 10) || 0)
                });
            if (!e.length) {
                return
            };
            i = parseInt(t(e[0]).css("zIndex"), 10) || 0;
            t(e).each(function(e) {
                t(this).css("zIndex", i + e)
            });
            this.css("zIndex", (i + e.length))
        }
    });
    t.ui.plugin.add("draggable", "zIndex", {
        start: function(e, i) {
            var s = t(i.helper),
                n = t(this).data("ui-draggable").options;
            if (s.css("zIndex")) {
                n._zIndex = s.css("zIndex")
            };
            s.css("zIndex", n.zIndex)
        },
        stop: function(e, i) {
            var s = t(this).data("ui-draggable").options;
            if (s._zIndex) {
                t(i.helper).css("zIndex", s._zIndex)
            }
        }
    })
})(jQuery);
(function(t, e) {
    function i(t, e, i) {
        return (t > e) && (t < (e + i))
    };
    t.widget("ui.droppable", {
        version: "1.10.3",
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            activeClass: !1,
            addClasses: !0,
            greedy: !1,
            hoverClass: !1,
            scope: "default",
            tolerance: "intersect",
            activate: null,
            deactivate: null,
            drop: null,
            out: null,
            over: null
        },
        _create: function() {
            var e = this.options,
                i = e.accept;
            this.isover = !1;
            this.isout = !0;
            this.accept = t.isFunction(i) ? i : function(t) {
                return t.is(i)
            };
            this.proportions = {
                width: this.element[0].offsetWidth,
                height: this.element[0].offsetHeight
            };
            t.ui.ddmanager.droppables[e.scope] = t.ui.ddmanager.droppables[e.scope] || [];
            t.ui.ddmanager.droppables[e.scope].push(this);
            (e.addClasses && this.element.addClass("ui-droppable"))
        },
        _destroy: function() {
            var e = 0,
                i = t.ui.ddmanager.droppables[this.options.scope];
            for (; e < i.length; e++) {
                if (i[e] === this) {
                    i.splice(e, 1)
                }
            };
            this.element.removeClass("ui-droppable ui-droppable-disabled")
        },
        _setOption: function(e, i) {
            if (e === "accept") {
                this.accept = t.isFunction(i) ? i : function(t) {
                    return t.is(i)
                }
            };
            t.Widget.prototype._setOption.apply(this, arguments)
        },
        _activate: function(e) {
            var i = t.ui.ddmanager.current;
            if (this.options.activeClass) {
                this.element.addClass(this.options.activeClass)
            };
            if (i) {
                this._trigger("activate", e, this.ui(i))
            }
        },
        _deactivate: function(e) {
            var i = t.ui.ddmanager.current;
            if (this.options.activeClass) {
                this.element.removeClass(this.options.activeClass)
            };
            if (i) {
                this._trigger("deactivate", e, this.ui(i))
            }
        },
        _over: function(e) {
            var i = t.ui.ddmanager.current;
            if (!i || (i.currentItem || i.element)[0] === this.element[0]) {
                return
            };
            if (this.accept.call(this.element[0], (i.currentItem || i.element))) {
                if (this.options.hoverClass) {
                    this.element.addClass(this.options.hoverClass)
                };
                this._trigger("over", e, this.ui(i))
            }
        },
        _out: function(e) {
            var i = t.ui.ddmanager.current;
            if (!i || (i.currentItem || i.element)[0] === this.element[0]) {
                return
            };
            if (this.accept.call(this.element[0], (i.currentItem || i.element))) {
                if (this.options.hoverClass) {
                    this.element.removeClass(this.options.hoverClass)
                };
                this._trigger("out", e, this.ui(i))
            }
        },
        _drop: function(e, i) {
            var s = i || t.ui.ddmanager.current,
                n = !1;
            if (!s || (s.currentItem || s.element)[0] === this.element[0]) {
                return !1
            };
            this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function() {
                var e = t.data(this, "ui-droppable");
                if (e.options.greedy && !e.options.disabled && e.options.scope === s.options.scope && e.accept.call(e.element[0], (s.currentItem || s.element)) && t.ui.intersect(s, t.extend(e, {
                        offset: e.element.offset()
                    }), e.options.tolerance)) {
                    n = !0;
                    return !1
                }
            });
            if (n) {
                return !1
            };
            if (this.accept.call(this.element[0], (s.currentItem || s.element))) {
                if (this.options.activeClass) {
                    this.element.removeClass(this.options.activeClass)
                };
                if (this.options.hoverClass) {
                    this.element.removeClass(this.options.hoverClass)
                };
                this._trigger("drop", e, this.ui(s));
                return this.element
            };
            return !1
        },
        ui: function(t) {
            return {
                draggable: (t.currentItem || t.element),
                helper: t.helper,
                position: t.position,
                offset: t.positionAbs
            }
        }
    });
    t.ui.intersect = function(t, e, s) {
        if (!e.offset) {
            return !1
        };
        var f, d, a = (t.positionAbs || t.position.absolute).left,
            l = a + t.helperProportions.width,
            r = (t.positionAbs || t.position.absolute).top,
            h = r + t.helperProportions.height,
            n = e.offset.left,
            u = n + e.proportions.width,
            o = e.offset.top,
            c = o + e.proportions.height;
        switch (s) {
            case "fit":
                return (n <= a && l <= u && o <= r && h <= c);
            case "intersect":
                return (n < a + (t.helperProportions.width / 2) && l - (t.helperProportions.width / 2) < u && o < r + (t.helperProportions.height / 2) && h - (t.helperProportions.height / 2) < c);
            case "pointer":
                f = ((t.positionAbs || t.position.absolute).left + (t.clickOffset || t.offset.click).left);
                d = ((t.positionAbs || t.position.absolute).top + (t.clickOffset || t.offset.click).top);
                return i(d, o, e.proportions.height) && i(f, n, e.proportions.width);
            case "touch":
                return ((r >= o && r <= c) || (h >= o && h <= c) || (r < o && h > c)) && ((a >= n && a <= u) || (l >= n && l <= u) || (a < n && l > u));
            default:
                return !1
        }
    };
    t.ui.ddmanager = {
        current: null,
        droppables: {
            "default": []
        },
        prepareOffsets: function(e, i) {
            var s, o, n = t.ui.ddmanager.droppables[e.options.scope] || [],
                r = i ? i.type : null,
                a = (e.currentItem || e.element).find(":data(ui-droppable)").addBack();
            droppablesLoop: for (s = 0; s < n.length; s++) {
                if (n[s].options.disabled || (e && !n[s].accept.call(n[s].element[0], (e.currentItem || e.element)))) {
                    continue
                };
                for (o = 0; o < a.length; o++) {
                    if (a[o] === n[s].element[0]) {
                        n[s].proportions.height = 0;
                        continue;
                        droppablesLoop
                    }
                };
                n[s].visible = n[s].element.css("display") !== "none";
                if (!n[s].visible) {
                    continue
                };
                if (r === "mousedown") {
                    n[s]._activate.call(n[s], i)
                };
                n[s].offset = n[s].element.offset();
                n[s].proportions = {
                    width: n[s].element[0].offsetWidth,
                    height: n[s].element[0].offsetHeight
                }
            }
        },
        drop: function(e, i) {
            var s = !1;
            t.each((t.ui.ddmanager.droppables[e.options.scope] || []).slice(), function() {
                if (!this.options) {
                    return
                };
                if (!this.options.disabled && this.visible && t.ui.intersect(e, this, this.options.tolerance)) {
                    s = this._drop.call(this, i) || s
                };
                if (!this.options.disabled && this.visible && this.accept.call(this.element[0], (e.currentItem || e.element))) {
                    this.isout = !0;
                    this.isover = !1;
                    this._deactivate.call(this, i)
                }
            });
            return s
        },
        dragStart: function(e, i) {
            e.element.parentsUntil("body").bind("scroll.droppable", function() {
                if (!e.options.refreshPositions) {
                    t.ui.ddmanager.prepareOffsets(e, i)
                }
            })
        },
        drag: function(e, i) {
            if (e.options.refreshPositions) {
                t.ui.ddmanager.prepareOffsets(e, i)
            };
            t.each(t.ui.ddmanager.droppables[e.options.scope] || [], function() {
                if (this.options.disabled || this.greedyChild || !this.visible) {
                    return
                };
                var s, a, o, r = t.ui.intersect(e, this, this.options.tolerance),
                    n = !r && this.isover ? "isout" : (r && !this.isover ? "isover" : null);
                if (!n) {
                    return
                };
                if (this.options.greedy) {
                    a = this.options.scope;
                    o = this.element.parents(":data(ui-droppable)").filter(function() {
                        return t.data(this, "ui-droppable").options.scope === a
                    });
                    if (o.length) {
                        s = t.data(o[0], "ui-droppable");
                        s.greedyChild = (n === "isover")
                    }
                };
                if (s && n === "isover") {
                    s.isover = !1;
                    s.isout = !0;
                    s._out.call(s, i)
                };
                this[n] = !0;
                this[n === "isout" ? "isover" : "isout"] = !1;
                this[n === "isover" ? "_over" : "_out"].call(this, i);
                if (s && n === "isout") {
                    s.isout = !1;
                    s.isover = !0;
                    s._over.call(s, i)
                }
            })
        },
        dragStop: function(e, i) {
            e.element.parentsUntil("body").unbind("scroll.droppable");
            if (!e.options.refreshPositions) {
                t.ui.ddmanager.prepareOffsets(e, i)
            }
        }
    }
})(jQuery);
(function(t, e) {
    function s(t) {
        return parseInt(t, 10) || 0
    };

    function i(t) {
        return !isNaN(parseInt(t, 10))
    };
    t.widget("ui.resizable", t.ui.mouse, {
        version: "1.10.3",
        widgetEventPrefix: "resize",
        options: {
            alsoResize: !1,
            animate: !1,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: !1,
            autoHide: !1,
            containment: !1,
            ghost: !1,
            grid: !1,
            handles: "e,s,se",
            helper: !1,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            zIndex: 90,
            resize: null,
            start: null,
            stop: null
        },
        _create: function() {
            var a, o, s, i, r, n = this,
                e = this.options;
            this.element.addClass("ui-resizable");
            t.extend(this, {
                _aspectRatio: !!(e.aspectRatio),
                aspectRatio: e.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: e.helper || e.ghost || e.animate ? e.helper || "ui-resizable-helper" : null
            });
            if (this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) {
                this.element.wrap(t("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
                    position: this.element.css("position"),
                    width: this.element.outerWidth(),
                    height: this.element.outerHeight(),
                    top: this.element.css("top"),
                    left: this.element.css("left")
                }));
                this.element = this.element.parent().data("ui-resizable", this.element.data("ui-resizable"));
                this.elementIsWrapper = !0;
                this.element.css({
                    marginLeft: this.originalElement.css("marginLeft"),
                    marginTop: this.originalElement.css("marginTop"),
                    marginRight: this.originalElement.css("marginRight"),
                    marginBottom: this.originalElement.css("marginBottom")
                });
                this.originalElement.css({
                    marginLeft: 0,
                    marginTop: 0,
                    marginRight: 0,
                    marginBottom: 0
                });
                this.originalResizeStyle = this.originalElement.css("resize");
                this.originalElement.css("resize", "none");
                this._proportionallyResizeElements.push(this.originalElement.css({
                    position: "static",
                    zoom: 1,
                    display: "block"
                }));
                this.originalElement.css({
                    margin: this.originalElement.css("margin")
                });
                this._proportionallyResize()
            };
            this.handles = e.handles || (!t(".ui-resizable-handle", this.element).length ? "e,s,se" : {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw"
            });
            if (this.handles.constructor === String) {
                if (this.handles === "all") {
                    this.handles = "n,e,s,w,se,sw,ne,nw"
                };
                a = this.handles.split(",");
                this.handles = {};
                for (o = 0; o < a.length; o++) {
                    s = t.trim(a[o]);
                    r = "ui-resizable-" + s;
                    i = t("<div class='ui-resizable-handle " + r + "'></div>");
                    i.css({
                        zIndex: e.zIndex
                    });
                    if ("se" === s) {
                        i.addClass("ui-icon ui-icon-gripsmall-diagonal-se")
                    };
                    this.handles[s] = ".ui-resizable-" + s;
                    this.element.append(i)
                }
            };
            this._renderAxis = function(e) {
                var i, s, n, o;
                e = e || this.element;
                for (i in this.handles) {
                    if (this.handles[i].constructor === String) {
                        this.handles[i] = t(this.handles[i], this.element).show()
                    };
                    if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {
                        s = t(this.handles[i], this.element);
                        o = /sw|ne|nw|se|n|s/.test(i) ? s.outerHeight() : s.outerWidth();
                        n = ["padding", /ne|nw|n/.test(i) ? "Top" : /se|sw|s/.test(i) ? "Bottom" : /^e$/.test(i) ? "Right" : "Left"].join("");
                        e.css(n, o);
                        this._proportionallyResize()
                    };
                    if (!t(this.handles[i]).length) {
                        continue
                    }
                }
            };
            this._renderAxis(this.element);
            this._handles = t(".ui-resizable-handle", this.element).disableSelection();
            this._handles.mouseover(function() {
                if (!n.resizing) {
                    if (this.className) {
                        i = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)
                    };
                    n.axis = i && i[1] ? i[1] : "se"
                }
            });
            if (e.autoHide) {
                this._handles.hide();
                t(this.element).addClass("ui-resizable-autohide").mouseenter(function() {
                    if (e.disabled) {
                        return
                    };
                    t(this).removeClass("ui-resizable-autohide");
                    n._handles.show()
                }).mouseleave(function() {
                    if (e.disabled) {
                        return
                    };
                    if (!n.resizing) {
                        t(this).addClass("ui-resizable-autohide");
                        n._handles.hide()
                    }
                })
            };
            this._mouseInit()
        },
        _destroy: function() {
            this._mouseDestroy();
            var e, i = function(e) {
                t(e).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
            };
            if (this.elementIsWrapper) {
                i(this.element);
                e = this.element;
                this.originalElement.css({
                    position: e.css("position"),
                    width: e.outerWidth(),
                    height: e.outerHeight(),
                    top: e.css("top"),
                    left: e.css("left")
                }).insertAfter(e);
                e.remove()
            };
            this.originalElement.css("resize", this.originalResizeStyle);
            i(this.originalElement);
            return this
        },
        _mouseCapture: function(e) {
            var s, i, n = !1;
            for (s in this.handles) {
                i = t(this.handles[s])[0];
                if (i === e.target || t.contains(i, e.target)) {
                    n = !0
                }
            };
            return !this.options.disabled && n
        },
        _mouseStart: function(e) {
            var o, a, r, n = this.options,
                l = this.element.position(),
                i = this.element;
            this.resizing = !0;
            if ((/absolute/).test(i.css("position"))) {
                i.css({
                    position: "absolute",
                    top: i.css("top"),
                    left: i.css("left")
                })
            } else if (i.is(".ui-draggable")) {
                i.css({
                    position: "absolute",
                    top: l.top,
                    left: l.left
                })
            };
            this._renderProxy();
            o = s(this.helper.css("left"));
            a = s(this.helper.css("top"));
            if (n.containment) {
                o += t(n.containment).scrollLeft() || 0;
                a += t(n.containment).scrollTop() || 0
            };
            this.offset = this.helper.offset();
            this.position = {
                left: o,
                top: a
            };
            this.size = this._helper ? {
                width: i.outerWidth(),
                height: i.outerHeight()
            } : {
                width: i.width(),
                height: i.height()
            };
            this.originalSize = this._helper ? {
                width: i.outerWidth(),
                height: i.outerHeight()
            } : {
                width: i.width(),
                height: i.height()
            };
            this.originalPosition = {
                left: o,
                top: a
            };
            this.sizeDiff = {
                width: i.outerWidth() - i.width(),
                height: i.outerHeight() - i.height()
            };
            this.originalMousePosition = {
                left: e.pageX,
                top: e.pageY
            };
            this.aspectRatio = (typeof n.aspectRatio === "number") ? n.aspectRatio : ((this.originalSize.width / this.originalSize.height) || 1);
            r = t(".ui-resizable-" + this.axis).css("cursor");
            t("body").css("cursor", r === "auto" ? this.axis + "-resize" : r);
            i.addClass("ui-resizable-resizing");
            this._propagate("start", e);
            return !0
        },
        _mouseDrag: function(e) {
            var i, a = this.helper,
                s = {},
                n = this.originalMousePosition,
                r = this.axis,
                l = this.position.top,
                h = this.position.left,
                u = this.size.width,
                c = this.size.height,
                f = (e.pageX - n.left) || 0,
                d = (e.pageY - n.top) || 0,
                o = this._change[r];
            if (!o) {
                return !1
            };
            i = o.apply(this, [e, f, d]);
            this._updateVirtualBoundaries(e.shiftKey);
            if (this._aspectRatio || e.shiftKey) {
                i = this._updateRatio(i, e)
            };
            i = this._respectSize(i, e);
            this._updateCache(i);
            this._propagate("resize", e);
            if (this.position.top !== l) {
                s.top = this.position.top + "px"
            };
            if (this.position.left !== h) {
                s.left = this.position.left + "px"
            };
            if (this.size.width !== u) {
                s.width = this.size.width + "px"
            };
            if (this.size.height !== c) {
                s.height = this.size.height + "px"
            };
            a.css(s);
            if (!this._helper && this._proportionallyResizeElements.length) {
                this._proportionallyResize()
            };
            if (!t.isEmptyObject(s)) {
                this._trigger("resize", e, this.ui())
            };
            return !1
        },
        _mouseStop: function(e) {
            this.resizing = !1;
            var s, n, o, a, r, l, h, u = this.options,
                i = this;
            if (this._helper) {
                s = this._proportionallyResizeElements;
                n = s.length && (/textarea/i).test(s[0].nodeName);
                o = n && t.ui.hasScroll(s[0], "left") ? 0 : i.sizeDiff.height;
                a = n ? 0 : i.sizeDiff.width;
                r = {
                    width: (i.helper.width() - a),
                    height: (i.helper.height() - o)
                };
                l = (parseInt(i.element.css("left"), 10) + (i.position.left - i.originalPosition.left)) || null;
                h = (parseInt(i.element.css("top"), 10) + (i.position.top - i.originalPosition.top)) || null;
                if (!u.animate) {
                    this.element.css(t.extend(r, {
                        top: h,
                        left: l
                    }))
                };
                i.helper.height(i.size.height);
                i.helper.width(i.size.width);
                if (this._helper && !u.animate) {
                    this._proportionallyResize()
                }
            };
            t("body").css("cursor", "auto");
            this.element.removeClass("ui-resizable-resizing");
            this._propagate("stop", e);
            if (this._helper) {
                this.helper.remove()
            };
            return !1
        },
        _updateVirtualBoundaries: function(t) {
            var n, o, a, r, e, s = this.options;
            e = {
                minWidth: i(s.minWidth) ? s.minWidth : 0,
                maxWidth: i(s.maxWidth) ? s.maxWidth : Infinity,
                minHeight: i(s.minHeight) ? s.minHeight : 0,
                maxHeight: i(s.maxHeight) ? s.maxHeight : Infinity
            };
            if (this._aspectRatio || t) {
                n = e.minHeight * this.aspectRatio;
                a = e.minWidth / this.aspectRatio;
                o = e.maxHeight * this.aspectRatio;
                r = e.maxWidth / this.aspectRatio;
                if (n > e.minWidth) {
                    e.minWidth = n
                };
                if (a > e.minHeight) {
                    e.minHeight = a
                };
                if (o < e.maxWidth) {
                    e.maxWidth = o
                };
                if (r < e.maxHeight) {
                    e.maxHeight = r
                }
            };
            this._vBoundaries = e
        },
        _updateCache: function(t) {
            this.offset = this.helper.offset();
            if (i(t.left)) {
                this.position.left = t.left
            };
            if (i(t.top)) {
                this.position.top = t.top
            };
            if (i(t.height)) {
                this.size.height = t.height
            };
            if (i(t.width)) {
                this.size.width = t.width
            }
        },
        _updateRatio: function(t) {
            var e = this.position,
                s = this.size,
                n = this.axis;
            if (i(t.height)) {
                t.width = (t.height * this.aspectRatio)
            } else if (i(t.width)) {
                t.height = (t.width / this.aspectRatio)
            };
            if (n === "sw") {
                t.left = e.left + (s.width - t.width);
                t.top = null
            };
            if (n === "nw") {
                t.top = e.top + (s.height - t.height);
                t.left = e.left + (s.width - t.width)
            };
            return t
        },
        _respectSize: function(t) {
            var e = this._vBoundaries,
                s = this.axis,
                n = i(t.width) && e.maxWidth && (e.maxWidth < t.width),
                o = i(t.height) && e.maxHeight && (e.maxHeight < t.height),
                a = i(t.width) && e.minWidth && (e.minWidth > t.width),
                r = i(t.height) && e.minHeight && (e.minHeight > t.height),
                l = this.originalPosition.left + this.originalSize.width,
                h = this.position.top + this.size.height,
                u = /sw|nw|w/.test(s),
                c = /nw|ne|n/.test(s);
            if (a) {
                t.width = e.minWidth
            };
            if (r) {
                t.height = e.minHeight
            };
            if (n) {
                t.width = e.maxWidth
            };
            if (o) {
                t.height = e.maxHeight
            };
            if (a && u) {
                t.left = l - e.minWidth
            };
            if (n && u) {
                t.left = l - e.maxWidth
            };
            if (r && c) {
                t.top = h - e.minHeight
            };
            if (o && c) {
                t.top = h - e.maxHeight
            };
            if (!t.width && !t.height && !t.left && t.top) {
                t.top = null
            } else if (!t.width && !t.height && !t.top && t.left) {
                t.left = null
            };
            return t
        },
        _proportionallyResize: function() {
            if (!this._proportionallyResizeElements.length) {
                return
            };
            var i, e, s, n, t, o = this.helper || this.element;
            for (i = 0; i < this._proportionallyResizeElements.length; i++) {
                t = this._proportionallyResizeElements[i];
                if (!this.borderDif) {
                    this.borderDif = [];
                    s = [t.css("borderTopWidth"), t.css("borderRightWidth"), t.css("borderBottomWidth"), t.css("borderLeftWidth")];
                    n = [t.css("paddingTop"), t.css("paddingRight"), t.css("paddingBottom"), t.css("paddingLeft")];
                    for (e = 0; e < s.length; e++) {
                        this.borderDif[e] = (parseInt(s[e], 10) || 0) + (parseInt(n[e], 10) || 0)
                    }
                };
                t.css({
                    height: (o.height() - this.borderDif[0] - this.borderDif[2]) || 0,
                    width: (o.width() - this.borderDif[1] - this.borderDif[3]) || 0
                })
            }
        },
        _renderProxy: function() {
            var e = this.element,
                i = this.options;
            this.elementOffset = e.offset();
            if (this._helper) {
                this.helper = this.helper || t("<div style='overflow:hidden;'></div>");
                this.helper.addClass(this._helper).css({
                    width: this.element.outerWidth() - 1,
                    height: this.element.outerHeight() - 1,
                    position: "absolute",
                    left: this.elementOffset.left + "px",
                    top: this.elementOffset.top + "px",
                    zIndex: ++i.zIndex
                });
                this.helper.appendTo("body").disableSelection()
            } else {
                this.helper = this.element
            }
        },
        _change: {
            e: function(t, e) {
                return {
                    width: this.originalSize.width + e
                }
            },
            w: function(t, e) {
                var i = this.originalSize,
                    s = this.originalPosition;
                return {
                    left: s.left + e,
                    width: i.width - e
                }
            },
            n: function(t, e, i) {
                var s = this.originalSize,
                    n = this.originalPosition;
                return {
                    top: n.top + i,
                    height: s.height - i
                }
            },
            s: function(t, e, i) {
                return {
                    height: this.originalSize.height + i
                }
            },
            se: function(e, i, s) {
                return t.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [e, i, s]))
            },
            sw: function(e, i, s) {
                return t.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [e, i, s]))
            },
            ne: function(e, i, s) {
                return t.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [e, i, s]))
            },
            nw: function(e, i, s) {
                return t.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [e, i, s]))
            }
        },
        _propagate: function(e, i) {
            t.ui.plugin.call(this, e, [i, this.ui()]);
            (e !== "resize" && this._trigger(e, i, this.ui()))
        },
        plugins: {},
        ui: function() {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            }
        }
    });
    t.ui.plugin.add("resizable", "animate", {
        stop: function(e) {
            var i = t(this).data("ui-resizable"),
                n = i.options,
                s = i._proportionallyResizeElements,
                o = s.length && (/textarea/i).test(s[0].nodeName),
                l = o && t.ui.hasScroll(s[0], "left") ? 0 : i.sizeDiff.height,
                h = o ? 0 : i.sizeDiff.width,
                u = {
                    width: (i.size.width - h),
                    height: (i.size.height - l)
                },
                a = (parseInt(i.element.css("left"), 10) + (i.position.left - i.originalPosition.left)) || null,
                r = (parseInt(i.element.css("top"), 10) + (i.position.top - i.originalPosition.top)) || null;
            i.element.animate(t.extend(u, r && a ? {
                top: r,
                left: a
            } : {}), {
                duration: n.animateDuration,
                easing: n.animateEasing,
                step: function() {
                    var n = {
                        width: parseInt(i.element.css("width"), 10),
                        height: parseInt(i.element.css("height"), 10),
                        top: parseInt(i.element.css("top"), 10),
                        left: parseInt(i.element.css("left"), 10)
                    };
                    if (s && s.length) {
                        t(s[0]).css({
                            width: n.width,
                            height: n.height
                        })
                    };
                    i._updateCache(n);
                    i._propagate("resize", e)
                }
            })
        }
    });
    t.ui.plugin.add("resizable", "containment", {
        start: function() {
            var n, a, r, l, h, u, c, e = t(this).data("ui-resizable"),
                f = e.options,
                d = e.element,
                o = f.containment,
                i = (o instanceof t) ? o.get(0) : (/parent/.test(o)) ? d.parent().get(0) : o;
            if (!i) {
                return
            };
            e.containerElement = t(i);
            if (/document/.test(o) || o === document) {
                e.containerOffset = {
                    left: 0,
                    top: 0
                };
                e.containerPosition = {
                    left: 0,
                    top: 0
                };
                e.parentData = {
                    element: t(document),
                    left: 0,
                    top: 0,
                    width: t(document).width(),
                    height: t(document).height() || document.body.parentNode.scrollHeight
                }
            } else {
                n = t(i);
                a = [];
                t(["Top", "Right", "Left", "Bottom"]).each(function(t, e) {
                    a[t] = s(n.css("padding" + e))
                });
                e.containerOffset = n.offset();
                e.containerPosition = n.position();
                e.containerSize = {
                    height: (n.innerHeight() - a[3]),
                    width: (n.innerWidth() - a[1])
                };
                r = e.containerOffset;
                l = e.containerSize.height;
                h = e.containerSize.width;
                u = (t.ui.hasScroll(i, "left") ? i.scrollWidth : h);
                c = (t.ui.hasScroll(i) ? i.scrollHeight : l);
                e.parentData = {
                    element: i,
                    left: r.left,
                    top: r.top,
                    width: u,
                    height: c
                }
            }
        },
        resize: function(e) {
            var o, r, l, h, i = t(this).data("ui-resizable"),
                f = i.options,
                s = i.containerOffset,
                u = i.position,
                a = i._aspectRatio || e.shiftKey,
                n = {
                    top: 0,
                    left: 0
                },
                c = i.containerElement;
            if (c[0] !== document && (/static/).test(c.css("position"))) {
                n = s
            };
            if (u.left < (i._helper ? s.left : 0)) {
                i.size.width = i.size.width + (i._helper ? (i.position.left - s.left) : (i.position.left - n.left));
                if (a) {
                    i.size.height = i.size.width / i.aspectRatio
                };
                i.position.left = f.helper ? s.left : 0
            };
            if (u.top < (i._helper ? s.top : 0)) {
                i.size.height = i.size.height + (i._helper ? (i.position.top - s.top) : i.position.top);
                if (a) {
                    i.size.width = i.size.height * i.aspectRatio
                };
                i.position.top = i._helper ? s.top : 0
            };
            i.offset.left = i.parentData.left + i.position.left;
            i.offset.top = i.parentData.top + i.position.top;
            o = Math.abs((i._helper ? i.offset.left - n.left : (i.offset.left - n.left)) + i.sizeDiff.width);
            r = Math.abs((i._helper ? i.offset.top - n.top : (i.offset.top - s.top)) + i.sizeDiff.height);
            l = i.containerElement.get(0) === i.element.parent().get(0);
            h = /relative|absolute/.test(i.containerElement.css("position"));
            if (l && h) {
                o -= i.parentData.left
            };
            if (o + i.size.width >= i.parentData.width) {
                i.size.width = i.parentData.width - o;
                if (a) {
                    i.size.height = i.size.width / i.aspectRatio
                }
            };
            if (r + i.size.height >= i.parentData.height) {
                i.size.height = i.parentData.height - r;
                if (a) {
                    i.size.width = i.size.height * i.aspectRatio
                }
            }
        },
        stop: function() {
            var e = t(this).data("ui-resizable"),
                s = e.options,
                n = e.containerOffset,
                o = e.containerPosition,
                a = e.containerElement,
                i = t(e.helper),
                r = i.offset(),
                l = i.outerWidth() - e.sizeDiff.width,
                h = i.outerHeight() - e.sizeDiff.height;
            if (e._helper && !s.animate && (/relative/).test(a.css("position"))) {
                t(this).css({
                    left: r.left - o.left - n.left,
                    width: l,
                    height: h
                })
            };
            if (e._helper && !s.animate && (/static/).test(a.css("position"))) {
                t(this).css({
                    left: r.left - o.left - n.left,
                    width: l,
                    height: h
                })
            }
        }
    });
    t.ui.plugin.add("resizable", "alsoResize", {
        start: function() {
            var s = t(this).data("ui-resizable"),
                e = s.options,
                i = function(e) {
                    t(e).each(function() {
                        var e = t(this);
                        e.data("ui-resizable-alsoresize", {
                            width: parseInt(e.width(), 10),
                            height: parseInt(e.height(), 10),
                            left: parseInt(e.css("left"), 10),
                            top: parseInt(e.css("top"), 10)
                        })
                    })
                };
            if (typeof(e.alsoResize) === "object" && !e.alsoResize.parentNode) {
                if (e.alsoResize.length) {
                    e.alsoResize = e.alsoResize[0];
                    i(e.alsoResize)
                } else {
                    t.each(e.alsoResize, function(t) {
                        i(t)
                    })
                }
            } else {
                i(e.alsoResize)
            }
        },
        resize: function(e, i) {
            var s = t(this).data("ui-resizable"),
                n = s.options,
                o = s.originalSize,
                a = s.originalPosition,
                l = {
                    height: (s.size.height - o.height) || 0,
                    width: (s.size.width - o.width) || 0,
                    top: (s.position.top - a.top) || 0,
                    left: (s.position.left - a.left) || 0
                },
                r = function(e, s) {
                    t(e).each(function() {
                        var e = t(this),
                            o = t(this).data("ui-resizable-alsoresize"),
                            n = {},
                            a = s && s.length ? s : e.parents(i.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                        t.each(a, function(t, e) {
                            var i = (o[e] || 0) + (l[e] || 0);
                            if (i && i >= 0) {
                                n[e] = i || null
                            }
                        });
                        e.css(n)
                    })
                };
            if (typeof(n.alsoResize) === "object" && !n.alsoResize.nodeType) {
                t.each(n.alsoResize, function(t, e) {
                    r(t, e)
                })
            } else {
                r(n.alsoResize)
            }
        },
        stop: function() {
            t(this).removeData("resizable-alsoresize")
        }
    });
    t.ui.plugin.add("resizable", "ghost", {
        start: function() {
            var e = t(this).data("ui-resizable"),
                i = e.options,
                s = e.size;
            e.ghost = e.originalElement.clone();
            e.ghost.css({
                opacity: 0.25,
                display: "block",
                position: "relative",
                height: s.height,
                width: s.width,
                margin: 0,
                left: 0,
                top: 0
            }).addClass("ui-resizable-ghost").addClass(typeof i.ghost === "string" ? i.ghost : "");
            e.ghost.appendTo(e.helper)
        },
        resize: function() {
            var e = t(this).data("ui-resizable");
            if (e.ghost) {
                e.ghost.css({
                    position: "relative",
                    height: e.size.height,
                    width: e.size.width
                })
            }
        },
        stop: function() {
            var e = t(this).data("ui-resizable");
            if (e.ghost && e.helper) {
                e.helper.get(0).removeChild(e.ghost.get(0))
            }
        }
    });
    t.ui.plugin.add("resizable", "grid", {
        resize: function() {
            var e = t(this).data("ui-resizable"),
                i = e.options,
                d = e.size,
                o = e.originalSize,
                a = e.originalPosition,
                h = e.axis,
                u = typeof i.grid === "number" ? [i.grid, i.grid] : i.grid,
                r = (u[0] || 1),
                l = (u[1] || 1),
                c = Math.round((d.width - o.width) / r) * r,
                f = Math.round((d.height - o.height) / l) * l,
                s = o.width + c,
                n = o.height + f,
                p = i.maxWidth && (i.maxWidth < s),
                g = i.maxHeight && (i.maxHeight < n),
                m = i.minWidth && (i.minWidth > s),
                v = i.minHeight && (i.minHeight > n);
            i.grid = u;
            if (m) {
                s = s + r
            };
            if (v) {
                n = n + l
            };
            if (p) {
                s = s - r
            };
            if (g) {
                n = n - l
            };
            if (/^(se|s|e)$/.test(h)) {
                e.size.width = s;
                e.size.height = n
            } else if (/^(ne)$/.test(h)) {
                e.size.width = s;
                e.size.height = n;
                e.position.top = a.top - f
            } else if (/^(sw)$/.test(h)) {
                e.size.width = s;
                e.size.height = n;
                e.position.left = a.left - c
            } else {
                e.size.width = s;
                e.size.height = n;
                e.position.top = a.top - f;
                e.position.left = a.left - c
            }
        }
    })
})(jQuery);
(function(t, e) {
    t.widget("ui.selectable", t.ui.mouse, {
        version: "1.10.3",
        options: {
            appendTo: "body",
            autoRefresh: !0,
            distance: 0,
            filter: "*",
            tolerance: "touch",
            selected: null,
            selecting: null,
            start: null,
            stop: null,
            unselected: null,
            unselecting: null
        },
        _create: function() {
            var e, i = this;
            this.element.addClass("ui-selectable");
            this.dragged = !1;
            this.refresh = function() {
                e = t(i.options.filter, i.element[0]);
                e.addClass("ui-selectee");
                e.each(function() {
                    var e = t(this),
                        i = e.offset();
                    t.data(this, "selectable-item", {
                        element: this,
                        $element: e,
                        left: i.left,
                        top: i.top,
                        right: i.left + e.outerWidth(),
                        bottom: i.top + e.outerHeight(),
                        startselected: !1,
                        selected: e.hasClass("ui-selected"),
                        selecting: e.hasClass("ui-selecting"),
                        unselecting: e.hasClass("ui-unselecting")
                    })
                })
            };
            this.refresh();
            this.selectees = e.addClass("ui-selectee");
            this._mouseInit();
            this.helper = t("<div class='ui-selectable-helper'></div>")
        },
        _destroy: function() {
            this.selectees.removeClass("ui-selectee").removeData("selectable-item");
            this.element.removeClass("ui-selectable ui-selectable-disabled");
            this._mouseDestroy()
        },
        _mouseStart: function(e) {
            var i = this,
                s = this.options;
            this.opos = [e.pageX, e.pageY];
            if (this.options.disabled) {
                return
            };
            this.selectees = t(s.filter, this.element[0]);
            this._trigger("start", e);
            t(s.appendTo).append(this.helper);
            this.helper.css({
                "left": e.pageX,
                "top": e.pageY,
                "width": 0,
                "height": 0
            });
            if (s.autoRefresh) {
                this.refresh()
            };
            this.selectees.filter(".ui-selected").each(function() {
                var s = t.data(this, "selectable-item");
                s.startselected = !0;
                if (!e.metaKey && !e.ctrlKey) {
                    s.$element.removeClass("ui-selected");
                    s.selected = !1;
                    s.$element.addClass("ui-unselecting");
                    s.unselecting = !0;
                    i._trigger("unselecting", e, {
                        unselecting: s.element
                    })
                }
            });
            t(e.target).parents().addBack().each(function() {
                var n, s = t.data(this, "selectable-item");
                if (s) {
                    n = (!e.metaKey && !e.ctrlKey) || !s.$element.hasClass("ui-selected");
                    s.$element.removeClass(n ? "ui-unselecting" : "ui-selected").addClass(n ? "ui-selecting" : "ui-unselecting");
                    s.unselecting = !n;
                    s.selecting = n;
                    s.selected = n;
                    if (n) {
                        i._trigger("selecting", e, {
                            selecting: s.element
                        })
                    } else {
                        i._trigger("unselecting", e, {
                            unselecting: s.element
                        })
                    };
                    return !1
                }
            })
        },
        _mouseDrag: function(e) {
            this.dragged = !0;
            if (this.options.disabled) {
                return
            };
            var a, r = this,
                l = this.options,
                i = this.opos[0],
                s = this.opos[1],
                n = e.pageX,
                o = e.pageY;
            if (i > n) {
                a = n;
                n = i;
                i = a
            };
            if (s > o) {
                a = o;
                o = s;
                s = a
            };
            this.helper.css({
                left: i,
                top: s,
                width: n - i,
                height: o - s
            });
            this.selectees.each(function() {
                var a = t.data(this, "selectable-item"),
                    h = !1;
                if (!a || a.element === r.element[0]) {
                    return
                };
                if (l.tolerance === "touch") {
                    h = (!(a.left > n || a.right < i || a.top > o || a.bottom < s))
                } else if (l.tolerance === "fit") {
                    h = (a.left > i && a.right < n && a.top > s && a.bottom < o)
                };
                if (h) {
                    if (a.selected) {
                        a.$element.removeClass("ui-selected");
                        a.selected = !1
                    };
                    if (a.unselecting) {
                        a.$element.removeClass("ui-unselecting");
                        a.unselecting = !1
                    };
                    if (!a.selecting) {
                        a.$element.addClass("ui-selecting");
                        a.selecting = !0;
                        r._trigger("selecting", e, {
                            selecting: a.element
                        })
                    }
                } else {
                    if (a.selecting) {
                        if ((e.metaKey || e.ctrlKey) && a.startselected) {
                            a.$element.removeClass("ui-selecting");
                            a.selecting = !1;
                            a.$element.addClass("ui-selected");
                            a.selected = !0
                        } else {
                            a.$element.removeClass("ui-selecting");
                            a.selecting = !1;
                            if (a.startselected) {
                                a.$element.addClass("ui-unselecting");
                                a.unselecting = !0
                            };
                            r._trigger("unselecting", e, {
                                unselecting: a.element
                            })
                        }
                    };
                    if (a.selected) {
                        if (!e.metaKey && !e.ctrlKey && !a.startselected) {
                            a.$element.removeClass("ui-selected");
                            a.selected = !1;
                            a.$element.addClass("ui-unselecting");
                            a.unselecting = !0;
                            r._trigger("unselecting", e, {
                                unselecting: a.element
                            })
                        }
                    }
                }
            });
            return !1
        },
        _mouseStop: function(e) {
            var i = this;
            this.dragged = !1;
            t(".ui-unselecting", this.element[0]).each(function() {
                var s = t.data(this, "selectable-item");
                s.$element.removeClass("ui-unselecting");
                s.unselecting = !1;
                s.startselected = !1;
                i._trigger("unselected", e, {
                    unselected: s.element
                })
            });
            t(".ui-selecting", this.element[0]).each(function() {
                var s = t.data(this, "selectable-item");
                s.$element.removeClass("ui-selecting").addClass("ui-selected");
                s.selecting = !1;
                s.selected = !0;
                s.startselected = !0;
                i._trigger("selected", e, {
                    selected: s.element
                })
            });
            this._trigger("stop", e);
            this.helper.remove();
            return !1
        }
    })
})(jQuery);
(function(t, e) {
    function i(t, e, i) {
        return (t > e) && (t < (e + i))
    };

    function s(t) {
        return (/left|right/).test(t.css("float")) || (/inline|table-cell/).test(t.css("display"))
    };
    t.widget("ui.sortable", t.ui.mouse, {
        version: "1.10.3",
        widgetEventPrefix: "sort",
        ready: !1,
        options: {
            appendTo: "parent",
            axis: !1,
            connectWith: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            dropOnEmpty: !0,
            forcePlaceholderSize: !1,
            forceHelperSize: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            items: "> *",
            opacity: !1,
            placeholder: !1,
            revert: !1,
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            scope: "default",
            tolerance: "intersect",
            zIndex: 1000,
            activate: null,
            beforeStop: null,
            change: null,
            deactivate: null,
            out: null,
            over: null,
            receive: null,
            remove: null,
            sort: null,
            start: null,
            stop: null,
            update: null
        },
        _create: function() {
            var t = this.options;
            this.containerCache = {};
            this.element.addClass("ui-sortable");
            this.refresh();
            this.floating = this.items.length ? t.axis === "x" || s(this.items[0].item) : !1;
            this.offset = this.element.offset();
            this._mouseInit();
            this.ready = !0
        },
        _destroy: function() {
            this.element.removeClass("ui-sortable ui-sortable-disabled");
            this._mouseDestroy();
            for (var t = this.items.length - 1; t >= 0; t--) {
                this.items[t].item.removeData(this.widgetName + "-item")
            };
            return this
        },
        _setOption: function(e, i) {
            if (e === "disabled") {
                this.options[e] = i;
                this.widget().toggleClass("ui-sortable-disabled", !!i)
            } else {
                t.Widget.prototype._setOption.apply(this, arguments)
            }
        },
        _mouseCapture: function(e, i) {
            var s = null,
                o = !1,
                n = this;
            if (this.reverting) {
                return !1
            };
            if (this.options.disabled || this.options.type === "static") {
                return !1
            };
            this._refreshItems(e);
            t(e.target).parents().each(function() {
                if (t.data(this, n.widgetName + "-item") === n) {
                    s = t(this);
                    return !1
                }
            });
            if (t.data(e.target, n.widgetName + "-item") === n) {
                s = t(e.target)
            };
            if (!s) {
                return !1
            };
            if (this.options.handle && !i) {
                t(this.options.handle, s).find("*").addBack().each(function() {
                    if (this === e.target) {
                        o = !0
                    }
                });
                if (!o) {
                    return !1
                }
            };
            this.currentItem = s;
            this._removeCurrentsFromItems();
            return !0
        },
        _mouseStart: function(e, i, s) {
            var o, a, n = this.options;
            this.currentContainer = this;
            this.refreshPositions();
            this.helper = this._createHelper(e);
            this._cacheHelperProportions();
            this._cacheMargins();
            this.scrollParent = this.helper.scrollParent();
            this.offset = this.currentItem.offset();
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            };
            t.extend(this.offset, {
                click: {
                    left: e.pageX - this.offset.left,
                    top: e.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            });
            this.helper.css("position", "absolute");
            this.cssPosition = this.helper.css("position");
            this.originalPosition = this._generatePosition(e);
            this.originalPageX = e.pageX;
            this.originalPageY = e.pageY;
            (n.cursorAt && this._adjustOffsetFromHelper(n.cursorAt));
            this.domPosition = {
                prev: this.currentItem.prev()[0],
                parent: this.currentItem.parent()[0]
            };
            if (this.helper[0] !== this.currentItem[0]) {
                this.currentItem.hide()
            };
            this._createPlaceholder();
            if (n.containment) {
                this._setContainment()
            };
            if (n.cursor && n.cursor !== "auto") {
                a = this.document.find("body");
                this.storedCursor = a.css("cursor");
                a.css("cursor", n.cursor);
                this.storedStylesheet = t("<style>*{ cursor: " + n.cursor + " !important; }</style>").appendTo(a)
            };
            if (n.opacity) {
                if (this.helper.css("opacity")) {
                    this._storedOpacity = this.helper.css("opacity")
                };
                this.helper.css("opacity", n.opacity)
            };
            if (n.zIndex) {
                if (this.helper.css("zIndex")) {
                    this._storedZIndex = this.helper.css("zIndex")
                };
                this.helper.css("zIndex", n.zIndex)
            };
            if (this.scrollParent[0] !== document && this.scrollParent[0].tagName !== "HTML") {
                this.overflowOffset = this.scrollParent.offset()
            };
            this._trigger("start", e, this._uiHash());
            if (!this._preserveHelperProportions) {
                this._cacheHelperProportions()
            };
            if (!s) {
                for (o = this.containers.length - 1; o >= 0; o--) {
                    this.containers[o]._trigger("activate", e, this._uiHash(this))
                }
            };
            if (t.ui.ddmanager) {
                t.ui.ddmanager.current = this
            };
            if (t.ui.ddmanager && !n.dropBehaviour) {
                t.ui.ddmanager.prepareOffsets(this, e)
            };
            this.dragging = !0;
            this.helper.addClass("ui-sortable-helper");
            this._mouseDrag(e);
            return !0
        },
        _mouseDrag: function(e) {
            var a, n, o, r, i = this.options,
                s = !1;
            this.position = this._generatePosition(e);
            this.positionAbs = this._convertPositionTo("absolute");
            if (!this.lastPositionAbs) {
                this.lastPositionAbs = this.positionAbs
            };
            if (this.options.scroll) {
                if (this.scrollParent[0] !== document && this.scrollParent[0].tagName !== "HTML") {
                    if ((this.overflowOffset.top + this.scrollParent[0].offsetHeight) - e.pageY < i.scrollSensitivity) {
                        this.scrollParent[0].scrollTop = s = this.scrollParent[0].scrollTop + i.scrollSpeed
                    } else if (e.pageY - this.overflowOffset.top < i.scrollSensitivity) {
                        this.scrollParent[0].scrollTop = s = this.scrollParent[0].scrollTop - i.scrollSpeed
                    };
                    if ((this.overflowOffset.left + this.scrollParent[0].offsetWidth) - e.pageX < i.scrollSensitivity) {
                        this.scrollParent[0].scrollLeft = s = this.scrollParent[0].scrollLeft + i.scrollSpeed
                    } else if (e.pageX - this.overflowOffset.left < i.scrollSensitivity) {
                        this.scrollParent[0].scrollLeft = s = this.scrollParent[0].scrollLeft - i.scrollSpeed
                    }
                } else {
                    if (e.pageY - t(document).scrollTop() < i.scrollSensitivity) {
                        s = t(document).scrollTop(t(document).scrollTop() - i.scrollSpeed)
                    } else if (t(window).height() - (e.pageY - t(document).scrollTop()) < i.scrollSensitivity) {
                        s = t(document).scrollTop(t(document).scrollTop() + i.scrollSpeed)
                    };
                    if (e.pageX - t(document).scrollLeft() < i.scrollSensitivity) {
                        s = t(document).scrollLeft(t(document).scrollLeft() - i.scrollSpeed)
                    } else if (t(window).width() - (e.pageX - t(document).scrollLeft()) < i.scrollSensitivity) {
                        s = t(document).scrollLeft(t(document).scrollLeft() + i.scrollSpeed)
                    }
                };
                if (s !== !1 && t.ui.ddmanager && !i.dropBehaviour) {
                    t.ui.ddmanager.prepareOffsets(this, e)
                }
            };
            this.positionAbs = this._convertPositionTo("absolute");
            if (!this.options.axis || this.options.axis !== "y") {
                this.helper[0].style.left = this.position.left + "px"
            };
            if (!this.options.axis || this.options.axis !== "x") {
                this.helper[0].style.top = this.position.top + "px"
            };
            for (a = this.items.length - 1; a >= 0; a--) {
                n = this.items[a];
                o = n.item[0];
                r = this._intersectsWithPointer(n);
                if (!r) {
                    continue
                };
                if (n.instance !== this.currentContainer) {
                    continue
                };
                if (o !== this.currentItem[0] && this.placeholder[r === 1 ? "next" : "prev"]()[0] !== o && !t.contains(this.placeholder[0], o) && (this.options.type === "semi-dynamic" ? !t.contains(this.element[0], o) : !0)) {
                    this.direction = r === 1 ? "down" : "up";
                    if (this.options.tolerance === "pointer" || this._intersectsWithSides(n)) {
                        this._rearrange(e, n)
                    } else {
                        break
                    };
                    this._trigger("change", e, this._uiHash());
                    break
                }
            };
            this._contactContainers(e);
            if (t.ui.ddmanager) {
                t.ui.ddmanager.drag(this, e)
            };
            this._trigger("sort", e, this._uiHash());
            this.lastPositionAbs = this.positionAbs;
            return !1
        },
        _mouseStop: function(e, i) {
            if (!e) {
                return
            };
            if (t.ui.ddmanager && !this.options.dropBehaviour) {
                t.ui.ddmanager.drop(this, e)
            };
            if (this.options.revert) {
                var a = this,
                    o = this.placeholder.offset(),
                    s = this.options.axis,
                    n = {};
                if (!s || s === "x") {
                    n.left = o.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollLeft)
                };
                if (!s || s === "y") {
                    n.top = o.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollTop)
                };
                this.reverting = !0;
                t(this.helper).animate(n, parseInt(this.options.revert, 10) || 500, function() {
                    a._clear(e)
                })
            } else {
                this._clear(e, i)
            };
            return !1
        },
        cancel: function() {
            if (this.dragging) {
                this._mouseUp({
                    target: null
                });
                if (this.options.helper === "original") {
                    this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
                } else {
                    this.currentItem.show()
                };
                for (var e = this.containers.length - 1; e >= 0; e--) {
                    this.containers[e]._trigger("deactivate", null, this._uiHash(this));
                    if (this.containers[e].containerCache.over) {
                        this.containers[e]._trigger("out", null, this._uiHash(this));
                        this.containers[e].containerCache.over = 0
                    }
                }
            };
            if (this.placeholder) {
                if (this.placeholder[0].parentNode) {
                    this.placeholder[0].parentNode.removeChild(this.placeholder[0])
                };
                if (this.options.helper !== "original" && this.helper && this.helper[0].parentNode) {
                    this.helper.remove()
                };
                t.extend(this, {
                    helper: null,
                    dragging: !1,
                    reverting: !1,
                    _noFinalSort: null
                });
                if (this.domPosition.prev) {
                    t(this.domPosition.prev).after(this.currentItem)
                } else {
                    t(this.domPosition.parent).prepend(this.currentItem)
                }
            };
            return this
        },
        serialize: function(e) {
            var s = this._getItemsAsjQuery(e && e.connected),
                i = [];
            e = e || {};
            t(s).each(function() {
                var s = (t(e.item || this).attr(e.attribute || "id") || "").match(e.expression || (/(.+)[\-=_](.+)/));
                if (s) {
                    i.push((e.key || s[1] + "[]") + "=" + (e.key && e.expression ? s[1] : s[2]))
                }
            });
            if (!i.length && e.key) {
                i.push(e.key + "=")
            };
            return i.join("&")
        },
        toArray: function(e) {
            var s = this._getItemsAsjQuery(e && e.connected),
                i = [];
            e = e || {};
            s.each(function() {
                i.push(t(e.item || this).attr(e.attribute || "id") || "")
            });
            return i
        },
        _intersectsWith: function(t) {
            var e = this.positionAbs.left,
                h = e + this.helperProportions.width,
                i = this.positionAbs.top,
                u = i + this.helperProportions.height,
                s = t.left,
                o = s + t.width,
                n = t.top,
                a = n + t.height,
                r = this.offset.click.top,
                l = this.offset.click.left,
                c = (this.options.axis === "x") || ((i + r) > n && (i + r) < a),
                f = (this.options.axis === "y") || ((e + l) > s && (e + l) < o),
                d = c && f;
            if (this.options.tolerance === "pointer" || this.options.forcePointerForContainers || (this.options.tolerance !== "pointer" && this.helperProportions[this.floating ? "width" : "height"] > t[this.floating ? "width" : "height"])) {
                return d
            } else {
                return (s < e + (this.helperProportions.width / 2) && h - (this.helperProportions.width / 2) < o && n < i + (this.helperProportions.height / 2) && u - (this.helperProportions.height / 2) < a)
            }
        },
        _intersectsWithPointer: function(t) {
            var n = (this.options.axis === "x") || i(this.positionAbs.top + this.offset.click.top, t.top, t.height),
                o = (this.options.axis === "y") || i(this.positionAbs.left + this.offset.click.left, t.left, t.width),
                a = n && o,
                e = this._getDragVerticalDirection(),
                s = this._getDragHorizontalDirection();
            if (!a) {
                return !1
            };
            return this.floating ? (((s && s === "right") || e === "down") ? 2 : 1) : (e && (e === "down" ? 2 : 1))
        },
        _intersectsWithSides: function(t) {
            var n = i(this.positionAbs.top + this.offset.click.top, t.top + (t.height / 2), t.height),
                o = i(this.positionAbs.left + this.offset.click.left, t.left + (t.width / 2), t.width),
                e = this._getDragVerticalDirection(),
                s = this._getDragHorizontalDirection();
            if (this.floating && s) {
                return ((s === "right" && o) || (s === "left" && !o))
            } else {
                return e && ((e === "down" && n) || (e === "up" && !n))
            }
        },
        _getDragVerticalDirection: function() {
            var t = this.positionAbs.top - this.lastPositionAbs.top;
            return t !== 0 && (t > 0 ? "down" : "up")
        },
        _getDragHorizontalDirection: function() {
            var t = this.positionAbs.left - this.lastPositionAbs.left;
            return t !== 0 && (t > 0 ? "right" : "left")
        },
        refresh: function(t) {
            this._refreshItems(t);
            this.refreshPositions();
            return this
        },
        _connectWith: function() {
            var t = this.options;
            return t.connectWith.constructor === String ? [t.connectWith] : t.connectWith
        },
        _getItemsAsjQuery: function(e) {
            var s, n, a, i, l = [],
                o = [],
                r = this._connectWith();
            if (r && e) {
                for (s = r.length - 1; s >= 0; s--) {
                    a = t(r[s]);
                    for (n = a.length - 1; n >= 0; n--) {
                        i = t.data(a[n], this.widgetFullName);
                        if (i && i !== this && !i.options.disabled) {
                            o.push([t.isFunction(i.options.items) ? i.options.items.call(i.element) : t(i.options.items, i.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), i])
                        }
                    }
                }
            };
            o.push([t.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
                options: this.options,
                item: this.currentItem
            }) : t(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]);
            for (s = o.length - 1; s >= 0; s--) {
                o[s][0].each(function() {
                    l.push(this)
                })
            };
            return t(l)
        },
        _removeCurrentsFromItems: function() {
            var e = this.currentItem.find(":data(" + this.widgetName + "-item)");
            this.items = t.grep(this.items, function(t) {
                for (var i = 0; i < e.length; i++) {
                    if (e[i] === t.item[0]) {
                        return !1
                    }
                };
                return !0
            })
        },
        _refreshItems: function(e) {
            this.items = [];
            this.containers = [this];
            var s, n, a, i, r, l, h, c, f = this.items,
                o = [
                    [t.isFunction(this.options.items) ? this.options.items.call(this.element[0], e, {
                        item: this.currentItem
                    }) : t(this.options.items, this.element), this]
                ],
                u = this._connectWith();
            if (u && this.ready) {
                for (s = u.length - 1; s >= 0; s--) {
                    a = t(u[s]);
                    for (n = a.length - 1; n >= 0; n--) {
                        i = t.data(a[n], this.widgetFullName);
                        if (i && i !== this && !i.options.disabled) {
                            o.push([t.isFunction(i.options.items) ? i.options.items.call(i.element[0], e, {
                                item: this.currentItem
                            }) : t(i.options.items, i.element), i]);
                            this.containers.push(i)
                        }
                    }
                }
            };
            for (s = o.length - 1; s >= 0; s--) {
                r = o[s][1];
                l = o[s][0];
                for (n = 0, c = l.length; n < c; n++) {
                    h = t(l[n]);
                    h.data(this.widgetName + "-item", r);
                    f.push({
                        item: h,
                        instance: r,
                        width: 0,
                        height: 0,
                        left: 0,
                        top: 0
                    })
                }
            }
        },
        refreshPositions: function(e) {
            if (this.offsetParent && this.helper) {
                this.offset.parent = this._getParentOffset()
            };
            var i, s, o, n;
            for (i = this.items.length - 1; i >= 0; i--) {
                s = this.items[i];
                if (s.instance !== this.currentContainer && this.currentContainer && s.item[0] !== this.currentItem[0]) {
                    continue
                };
                o = this.options.toleranceElement ? t(this.options.toleranceElement, s.item) : s.item;
                if (!e) {
                    s.width = o.outerWidth();
                    s.height = o.outerHeight()
                };
                n = o.offset();
                s.left = n.left;
                s.top = n.top
            };
            if (this.options.custom && this.options.custom.refreshContainers) {
                this.options.custom.refreshContainers.call(this)
            } else {
                for (i = this.containers.length - 1; i >= 0; i--) {
                    n = this.containers[i].element.offset();
                    this.containers[i].containerCache.left = n.left;
                    this.containers[i].containerCache.top = n.top;
                    this.containers[i].containerCache.width = this.containers[i].element.outerWidth();
                    this.containers[i].containerCache.height = this.containers[i].element.outerHeight()
                }
            };
            return this
        },
        _createPlaceholder: function(e) {
            e = e || this;
            var s, i = e.options;
            if (!i.placeholder || i.placeholder.constructor === String) {
                s = i.placeholder;
                i.placeholder = {
                    element: function() {
                        var n = e.currentItem[0].nodeName.toLowerCase(),
                            i = t("<" + n + ">", e.document[0]).addClass(s || e.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper");
                        if (n === "tr") {
                            e.currentItem.children().each(function() {
                                t("<td>&#160;</td>", e.document[0]).attr("colspan", t(this).attr("colspan") || 1).appendTo(i)
                            })
                        } else if (n === "img") {
                            i.attr("src", e.currentItem.attr("src"))
                        };
                        if (!s) {
                            i.css("visibility", "hidden")
                        };
                        return i
                    },
                    update: function(t, n) {
                        if (s && !i.forcePlaceholderSize) {
                            return
                        };
                        if (!n.height()) {
                            n.height(e.currentItem.innerHeight() - parseInt(e.currentItem.css("paddingTop") || 0, 10) - parseInt(e.currentItem.css("paddingBottom") || 0, 10))
                        };
                        if (!n.width()) {
                            n.width(e.currentItem.innerWidth() - parseInt(e.currentItem.css("paddingLeft") || 0, 10) - parseInt(e.currentItem.css("paddingRight") || 0, 10))
                        }
                    }
                }
            };
            e.placeholder = t(i.placeholder.element.call(e.element, e.currentItem));
            e.currentItem.after(e.placeholder);
            i.placeholder.update(e, e.placeholder)
        },
        _contactContainers: function(e) {
            var n, o, d, l, c, p, h, r, g, f, u = null,
                a = null;
            for (n = this.containers.length - 1; n >= 0; n--) {
                if (t.contains(this.currentItem[0], this.containers[n].element[0])) {
                    continue
                };
                if (this._intersectsWith(this.containers[n].containerCache)) {
                    if (u && t.contains(this.containers[n].element[0], u.element[0])) {
                        continue
                    };
                    u = this.containers[n];
                    a = n
                } else {
                    if (this.containers[n].containerCache.over) {
                        this.containers[n]._trigger("out", e, this._uiHash(this));
                        this.containers[n].containerCache.over = 0
                    }
                }
            };
            if (!u) {
                return
            };
            if (this.containers.length === 1) {
                if (!this.containers[a].containerCache.over) {
                    this.containers[a]._trigger("over", e, this._uiHash(this));
                    this.containers[a].containerCache.over = 1
                }
            } else {
                d = 10000;
                l = null;
                f = u.floating || s(this.currentItem);
                c = f ? "left" : "top";
                p = f ? "width" : "height";
                h = this.positionAbs[c] + this.offset.click[c];
                for (o = this.items.length - 1; o >= 0; o--) {
                    if (!t.contains(this.containers[a].element[0], this.items[o].item[0])) {
                        continue
                    };
                    if (this.items[o].item[0] === this.currentItem[0]) {
                        continue
                    };
                    if (f && !i(this.positionAbs.top + this.offset.click.top, this.items[o].top, this.items[o].height)) {
                        continue
                    };
                    r = this.items[o].item.offset()[c];
                    g = !1;
                    if (Math.abs(r - h) > Math.abs(r + this.items[o][p] - h)) {
                        g = !0;
                        r += this.items[o][p]
                    };
                    if (Math.abs(r - h) < d) {
                        d = Math.abs(r - h);
                        l = this.items[o];
                        this.direction = g ? "up" : "down"
                    }
                };
                if (!l && !this.options.dropOnEmpty) {
                    return
                };
                if (this.currentContainer === this.containers[a]) {
                    return
                };
                l ? this._rearrange(e, l, null, !0) : this._rearrange(e, null, this.containers[a].element, !0);
                this._trigger("change", e, this._uiHash());
                this.containers[a]._trigger("change", e, this._uiHash(this));
                this.currentContainer = this.containers[a];
                this.options.placeholder.update(this.currentContainer, this.placeholder);
                this.containers[a]._trigger("over", e, this._uiHash(this));
                this.containers[a].containerCache.over = 1
            }
        },
        _createHelper: function(e) {
            var s = this.options,
                i = t.isFunction(s.helper) ? t(s.helper.apply(this.element[0], [e, this.currentItem])) : (s.helper === "clone" ? this.currentItem.clone() : this.currentItem);
            if (!i.parents("body").length) {
                t(s.appendTo !== "parent" ? s.appendTo : this.currentItem[0].parentNode)[0].appendChild(i[0])
            };
            if (i[0] === this.currentItem[0]) {
                this._storedCSS = {
                    width: this.currentItem[0].style.width,
                    height: this.currentItem[0].style.height,
                    position: this.currentItem.css("position"),
                    top: this.currentItem.css("top"),
                    left: this.currentItem.css("left")
                }
            };
            if (!i[0].style.width || s.forceHelperSize) {
                i.width(this.currentItem.width())
            };
            if (!i[0].style.height || s.forceHelperSize) {
                i.height(this.currentItem.height())
            };
            return i
        },
        _adjustOffsetFromHelper: function(e) {
            if (typeof e === "string") {
                e = e.split(" ")
            };
            if (t.isArray(e)) {
                e = {
                    left: +e[0],
                    top: +e[1] || 0
                }
            };
            if ("left" in e) {
                this.offset.click.left = e.left + this.margins.left
            };
            if ("right" in e) {
                this.offset.click.left = this.helperProportions.width - e.right + this.margins.left
            };
            if ("top" in e) {
                this.offset.click.top = e.top + this.margins.top
            };
            if ("bottom" in e) {
                this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top
            }
        },
        _getParentOffset: function() {
            this.offsetParent = this.helper.offsetParent();
            var e = this.offsetParent.offset();
            if (this.cssPosition === "absolute" && this.scrollParent[0] !== document && t.contains(this.scrollParent[0], this.offsetParent[0])) {
                e.left += this.scrollParent.scrollLeft();
                e.top += this.scrollParent.scrollTop()
            };
            if (this.offsetParent[0] === document.body || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === "html" && t.ui.ie)) {
                e = {
                    top: 0,
                    left: 0
                }
            };
            return {
                top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if (this.cssPosition === "relative") {
                var t = this.currentItem.position();
                return {
                    top: t.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: t.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            } else {
                return {
                    top: 0,
                    left: 0
                }
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: (parseInt(this.currentItem.css("marginLeft"), 10) || 0),
                top: (parseInt(this.currentItem.css("marginTop"), 10) || 0)
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var e, s, n, i = this.options;
            if (i.containment === "parent") {
                i.containment = this.helper[0].parentNode
            };
            if (i.containment === "document" || i.containment === "window") {
                this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, t(i.containment === "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (t(i.containment === "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]
            };
            if (!(/^(document|window|parent)$/).test(i.containment)) {
                e = t(i.containment)[0];
                s = t(i.containment).offset();
                n = (t(e).css("overflow") !== "hidden");
                this.containment = [s.left + (parseInt(t(e).css("borderLeftWidth"), 10) || 0) + (parseInt(t(e).css("paddingLeft"), 10) || 0) - this.margins.left, s.top + (parseInt(t(e).css("borderTopWidth"), 10) || 0) + (parseInt(t(e).css("paddingTop"), 10) || 0) - this.margins.top, s.left + (n ? Math.max(e.scrollWidth, e.offsetWidth) : e.offsetWidth) - (parseInt(t(e).css("borderLeftWidth"), 10) || 0) - (parseInt(t(e).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, s.top + (n ? Math.max(e.scrollHeight, e.offsetHeight) : e.offsetHeight) - (parseInt(t(e).css("borderTopWidth"), 10) || 0) - (parseInt(t(e).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]
            }
        },
        _convertPositionTo: function(e, i) {
            if (!i) {
                i = this.position
            };
            var s = e === "absolute" ? 1 : -1,
                n = this.cssPosition === "absolute" && !(this.scrollParent[0] !== document && t.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                o = (/(html|body)/i).test(n[0].tagName);
            return {
                top: (i.top + this.offset.relative.top * s + this.offset.parent.top * s - ((this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : (o ? 0 : n.scrollTop())) * s)),
                left: (i.left + this.offset.relative.left * s + this.offset.parent.left * s - ((this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : o ? 0 : n.scrollLeft()) * s))
            }
        },
        _generatePosition: function(e) {
            var s, n, i = this.options,
                o = e.pageX,
                a = e.pageY,
                r = this.cssPosition === "absolute" && !(this.scrollParent[0] !== document && t.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                l = (/(html|body)/i).test(r[0].tagName);
            if (this.cssPosition === "relative" && !(this.scrollParent[0] !== document && this.scrollParent[0] !== this.offsetParent[0])) {
                this.offset.relative = this._getRelativeOffset()
            };
            if (this.originalPosition) {
                if (this.containment) {
                    if (e.pageX - this.offset.click.left < this.containment[0]) {
                        o = this.containment[0] + this.offset.click.left
                    };
                    if (e.pageY - this.offset.click.top < this.containment[1]) {
                        a = this.containment[1] + this.offset.click.top
                    };
                    if (e.pageX - this.offset.click.left > this.containment[2]) {
                        o = this.containment[2] + this.offset.click.left
                    };
                    if (e.pageY - this.offset.click.top > this.containment[3]) {
                        a = this.containment[3] + this.offset.click.top
                    }
                };
                if (i.grid) {
                    s = this.originalPageY + Math.round((a - this.originalPageY) / i.grid[1]) * i.grid[1];
                    a = this.containment ? ((s - this.offset.click.top >= this.containment[1] && s - this.offset.click.top <= this.containment[3]) ? s : ((s - this.offset.click.top >= this.containment[1]) ? s - i.grid[1] : s + i.grid[1])) : s;
                    n = this.originalPageX + Math.round((o - this.originalPageX) / i.grid[0]) * i.grid[0];
                    o = this.containment ? ((n - this.offset.click.left >= this.containment[0] && n - this.offset.click.left <= this.containment[2]) ? n : ((n - this.offset.click.left >= this.containment[0]) ? n - i.grid[0] : n + i.grid[0])) : n
                }
            };
            return {
                top: (a - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ((this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : (l ? 0 : r.scrollTop())))),
                left: (o - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ((this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : l ? 0 : r.scrollLeft())))
            }
        },
        _rearrange: function(t, e, i, s) {
            i ? i[0].appendChild(this.placeholder[0]) : e.item[0].parentNode.insertBefore(this.placeholder[0], (this.direction === "down" ? e.item[0] : e.item[0].nextSibling));
            this.counter = this.counter ? ++this.counter : 1;
            var n = this.counter;
            this._delay(function() {
                if (n === this.counter) {
                    this.refreshPositions(!s)
                }
            })
        },
        _clear: function(t, e) {
            this.reverting = !1;
            var i, s = [];
            if (!this._noFinalSort && this.currentItem.parent().length) {
                this.placeholder.before(this.currentItem)
            };
            this._noFinalSort = null;
            if (this.helper[0] === this.currentItem[0]) {
                for (i in this._storedCSS) {
                    if (this._storedCSS[i] === "auto" || this._storedCSS[i] === "static") {
                        this._storedCSS[i] = ""
                    }
                };
                this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
            } else {
                this.currentItem.show()
            };
            if (this.fromOutside && !e) {
                s.push(function(t) {
                    this._trigger("receive", t, this._uiHash(this.fromOutside))
                })
            };
            if ((this.fromOutside || this.domPosition.prev !== this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent !== this.currentItem.parent()[0]) && !e) {
                s.push(function(t) {
                    this._trigger("update", t, this._uiHash())
                })
            };
            if (this !== this.currentContainer) {
                if (!e) {
                    s.push(function(t) {
                        this._trigger("remove", t, this._uiHash())
                    });
                    s.push((function(t) {
                        return function(e) {
                            t._trigger("receive", e, this._uiHash(this))
                        }
                    }).call(this, this.currentContainer));
                    s.push((function(t) {
                        return function(e) {
                            t._trigger("update", e, this._uiHash(this))
                        }
                    }).call(this, this.currentContainer))
                }
            };
            for (i = this.containers.length - 1; i >= 0; i--) {
                if (!e) {
                    s.push((function(t) {
                        return function(e) {
                            t._trigger("deactivate", e, this._uiHash(this))
                        }
                    }).call(this, this.containers[i]))
                };
                if (this.containers[i].containerCache.over) {
                    s.push((function(t) {
                        return function(e) {
                            t._trigger("out", e, this._uiHash(this))
                        }
                    }).call(this, this.containers[i]));
                    this.containers[i].containerCache.over = 0
                }
            };
            if (this.storedCursor) {
                this.document.find("body").css("cursor", this.storedCursor);
                this.storedStylesheet.remove()
            };
            if (this._storedOpacity) {
                this.helper.css("opacity", this._storedOpacity)
            };
            if (this._storedZIndex) {
                this.helper.css("zIndex", this._storedZIndex === "auto" ? "" : this._storedZIndex)
            };
            this.dragging = !1;
            if (this.cancelHelperRemoval) {
                if (!e) {
                    this._trigger("beforeStop", t, this._uiHash());
                    for (i = 0; i < s.length; i++) {
                        s[i].call(this, t)
                    };
                    this._trigger("stop", t, this._uiHash())
                };
                this.fromOutside = !1;
                return !1
            };
            if (!e) {
                this._trigger("beforeStop", t, this._uiHash())
            };
            this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
            if (this.helper[0] !== this.currentItem[0]) {
                this.helper.remove()
            };
            this.helper = null;
            if (!e) {
                for (i = 0; i < s.length; i++) {
                    s[i].call(this, t)
                };
                this._trigger("stop", t, this._uiHash())
            };
            this.fromOutside = !1;
            return !0
        },
        _trigger: function() {
            if (t.Widget.prototype._trigger.apply(this, arguments) === !1) {
                this.cancel()
            }
        },
        _uiHash: function(e) {
            var i = e || this;
            return {
                helper: i.helper,
                placeholder: i.placeholder || t([]),
                position: i.position,
                originalPosition: i.originalPosition,
                offset: i.positionAbs,
                item: i.currentItem,
                sender: e ? e.element : null
            }
        }
    })
})(jQuery);
(function(t, e) {
    var i = "ui-effects-";
    t.effects = {
        effect: {}
    };
    /*!
     * jQuery Color Animations v2.1.2
     * https://github.com/jquery/jquery-color
     *
     * Copyright 2013 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     *
     * Date: Wed Jan 16 08:47:09 2013 -0600
     */
    (function(t, e) {
        var f = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",
            d = /^([\-+])=\s*(\d+\.?\d*)/,
            p = [{
                re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                parse: function(t) {
                    return [t[1], t[2], t[3], t[4]]
                }
            }, {
                re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                parse: function(t) {
                    return [t[1] * 2.55, t[2] * 2.55, t[3] * 2.55, t[4]]
                }
            }, {
                re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
                parse: function(t) {
                    return [parseInt(t[1], 16), parseInt(t[2], 16), parseInt(t[3], 16)]
                }
            }, {
                re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
                parse: function(t) {
                    return [parseInt(t[1] + t[1], 16), parseInt(t[2] + t[2], 16), parseInt(t[3] + t[3], 16)]
                }
            }, {
                re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                space: "hsla",
                parse: function(t) {
                    return [t[1], t[2] / 100, t[3] / 100, t[4]]
                }
            }],
            i = t.Color = function(e, i, s, n) {
                return new t.Color.fn.parse(e, i, s, n)
            },
            n = {
                rgba: {
                    props: {
                        red: {
                            idx: 0,
                            type: "byte"
                        },
                        green: {
                            idx: 1,
                            type: "byte"
                        },
                        blue: {
                            idx: 2,
                            type: "byte"
                        }
                    }
                },
                hsla: {
                    props: {
                        hue: {
                            idx: 0,
                            type: "degrees"
                        },
                        saturation: {
                            idx: 1,
                            type: "percent"
                        },
                        lightness: {
                            idx: 2,
                            type: "percent"
                        }
                    }
                }
            },
            l = {
                "byte": {
                    floor: !0,
                    max: 255
                },
                "percent": {
                    max: 1
                },
                "degrees": {
                    mod: 360,
                    floor: !0
                }
            },
            h = i.support = {},
            u = t("<p>")[0],
            o, s = t.each;
        u.style.cssText = "background-color:rgba(1,1,1,.5)";
        h.rgba = u.style.backgroundColor.indexOf("rgba") > -1;
        s(n, function(t, e) {
            e.cache = "_" + t;
            e.props.alpha = {
                idx: 3,
                type: "percent",
                def: 1
            }
        });

        function a(t, e, i) {
            var s = l[e.type] || {};
            if (t == null) {
                return (i || !e.def) ? null : e.def
            };
            t = s.floor ? ~~t : parseFloat(t);
            if (isNaN(t)) {
                return e.def
            };
            if (s.mod) {
                return (t + s.mod) % s.mod
            };
            return 0 > t ? 0 : s.max < t ? s.max : t
        };

        function c(e) {
            var a = i(),
                r = a._rgba = [];
            e = e.toLowerCase();
            s(p, function(t, i) {
                var s, l = i.re.exec(e),
                    h = l && i.parse(l),
                    o = i.space || "rgba";
                if (h) {
                    s = a[o](h);
                    a[n[o].cache] = s[n[o].cache];
                    r = a._rgba = s._rgba;
                    return !1
                }
            });
            if (r.length) {
                if (r.join() === "0,0,0,0") {
                    t.extend(r, o.transparent)
                };
                return a
            };
            return o[e]
        };
        i.fn = t.extend(i.prototype, {
            parse: function(r, l, h, u) {
                if (r === e) {
                    this._rgba = [null, null, null, null];
                    return this
                };
                if (r.jquery || r.nodeType) {
                    r = t(r).css(l);
                    l = e
                };
                var f = this,
                    d = t.type(r),
                    p = this._rgba = [];
                if (l !== e) {
                    r = [r, l, h, u];
                    d = "array"
                };
                if (d === "string") {
                    return this.parse(c(r) || o._default)
                };
                if (d === "array") {
                    s(n.rgba.props, function(t, e) {
                        p[e.idx] = a(r[e.idx], e)
                    });
                    return this
                };
                if (d === "object") {
                    if (r instanceof i) {
                        s(n, function(t, e) {
                            if (r[e.cache]) {
                                f[e.cache] = r[e.cache].slice()
                            }
                        })
                    } else {
                        s(n, function(e, i) {
                            var n = i.cache;
                            s(i.props, function(t, e) {
                                if (!f[n] && i.to) {
                                    if (t === "alpha" || r[t] == null) {
                                        return
                                    };
                                    f[n] = i.to(f._rgba)
                                };
                                f[n][e.idx] = a(r[t], e, !0)
                            });
                            if (f[n] && t.inArray(null, f[n].slice(0, 3)) < 0) {
                                f[n][3] = 1;
                                if (i.from) {
                                    f._rgba = i.from(f[n])
                                }
                            }
                        })
                    };
                    return this
                }
            },
            is: function(t) {
                var a = i(t),
                    e = !0,
                    o = this;
                s(n, function(t, i) {
                    var r, n = a[i.cache];
                    if (n) {
                        r = o[i.cache] || i.to && i.to(o._rgba) || [];
                        s(i.props, function(t, i) {
                            if (n[i.idx] != null) {
                                e = (n[i.idx] === r[i.idx]);
                                return e
                            }
                        })
                    };
                    return e
                });
                return e
            },
            _space: function() {
                var t = [],
                    e = this;
                s(n, function(i, s) {
                    if (e[s.cache]) {
                        t.push(i)
                    }
                });
                return t.pop()
            },
            transition: function(t, e) {
                var o = i(t),
                    u = o._space(),
                    r = n[u],
                    c = this.alpha() === 0 ? i("transparent") : this,
                    f = c[r.cache] || r.to(c._rgba),
                    h = f.slice();
                o = o[r.cache];
                s(r.props, function(t, i) {
                    var u = i.idx,
                        s = f[u],
                        n = o[u],
                        r = l[i.type] || {};
                    if (n === null) {
                        return
                    };
                    if (s === null) {
                        h[u] = n
                    } else {
                        if (r.mod) {
                            if (n - s > r.mod / 2) {
                                s += r.mod
                            } else if (s - n > r.mod / 2) {
                                s -= r.mod
                            }
                        };
                        h[u] = a((n - s) * e + s, i)
                    }
                });
                return this[u](h)
            },
            blend: function(e) {
                if (this._rgba[3] === 1) {
                    return this
                };
                var s = this._rgba.slice(),
                    n = s.pop(),
                    o = i(e)._rgba;
                return i(t.map(s, function(t, e) {
                    return (1 - n) * o[e] + n * t
                }))
            },
            toRgbaString: function() {
                var i = "rgba(",
                    e = t.map(this._rgba, function(t, e) {
                        return t == null ? (e > 2 ? 1 : 0) : t
                    });
                if (e[3] === 1) {
                    e.pop();
                    i = "rgb("
                };
                return i + e.join() + ")"
            },
            toHslaString: function() {
                var i = "hsla(",
                    e = t.map(this.hsla(), function(t, e) {
                        if (t == null) {
                            t = e > 2 ? 1 : 0
                        };
                        if (e && e < 3) {
                            t = Math.round(t * 100) + "%"
                        };
                        return t
                    });
                if (e[3] === 1) {
                    e.pop();
                    i = "hsl("
                };
                return i + e.join() + ")"
            },
            toHexString: function(e) {
                var i = this._rgba.slice(),
                    s = i.pop();
                if (e) {
                    i.push(~~(s * 255))
                };
                return "#" + t.map(i, function(t) {
                    t = (t || 0).toString(16);
                    return t.length === 1 ? "0" + t : t
                }).join("")
            },
            toString: function() {
                return this._rgba[3] === 0 ? "transparent" : this.toRgbaString()
            }
        });
        i.fn.parse.prototype = i.fn;

        function r(t, e, i) {
            i = (i + 1) % 1;
            if (i * 6 < 1) {
                return t + (e - t) * i * 6
            };
            if (i * 2 < 1) {
                return e
            };
            if (i * 3 < 2) {
                return t + (e - t) * ((2 / 3) - i) * 6
            };
            return t
        };
        n.hsla.to = function(t) {
            if (t[0] == null || t[1] == null || t[2] == null) {
                return [null, null, null, t[3]]
            };
            var i = t[0] / 255,
                s = t[1] / 255,
                a = t[2] / 255,
                u = t[3],
                n = Math.max(i, s, a),
                l = Math.min(i, s, a),
                e = n - l,
                h = n + l,
                c = h * 0.5,
                o, r;
            if (l === n) {
                o = 0
            } else if (i === n) {
                o = (60 * (s - a) / e) + 360
            } else if (s === n) {
                o = (60 * (a - i) / e) + 120
            } else {
                o = (60 * (i - s) / e) + 240
            };
            if (e === 0) {
                r = 0
            } else if (c <= 0.5) {
                r = e / h
            } else {
                r = e / (2 - h)
            };
            return [Math.round(o) % 360, r, c, u == null ? 1 : u]
        };
        n.hsla.from = function(t) {
            if (t[0] == null || t[1] == null || t[2] == null) {
                return [null, null, null, t[3]]
            };
            var s = t[0] / 360,
                n = t[1],
                e = t[2],
                a = t[3],
                i = e <= 0.5 ? e * (1 + n) : e + n - e * n,
                o = 2 * e - i;
            return [Math.round(r(o, i, s + (1 / 3)) * 255), Math.round(r(o, i, s) * 255), Math.round(r(o, i, s - (1 / 3)) * 255), a]
        };
        s(n, function(n, o) {
            var l = o.props,
                r = o.cache,
                h = o.to,
                u = o.from;
            i.fn[n] = function(n) {
                if (h && !this[r]) {
                    this[r] = h(this._rgba)
                };
                if (n === e) {
                    return this[r].slice()
                };
                var c, f = t.type(n),
                    d = (f === "array" || f === "object") ? n : arguments,
                    o = this[r].slice();
                s(l, function(t, e) {
                    var i = d[f === "object" ? t : e.idx];
                    if (i == null) {
                        i = o[e.idx]
                    };
                    o[e.idx] = a(i, e)
                });
                if (u) {
                    c = i(u(o));
                    c[r] = o;
                    return c
                } else {
                    return i(o)
                }
            };
            s(l, function(e, s) {
                if (i.fn[e]) {
                    return
                };
                i.fn[e] = function(i) {
                    var o = t.type(i),
                        h = (e === "alpha" ? (this._hsla ? "hsla" : "rgba") : n),
                        r = this[h](),
                        l = r[s.idx],
                        a;
                    if (o === "undefined") {
                        return l
                    };
                    if (o === "function") {
                        i = i.call(this, l);
                        o = t.type(i)
                    };
                    if (i == null && s.empty) {
                        return this
                    };
                    if (o === "string") {
                        a = d.exec(i);
                        if (a) {
                            i = l + parseFloat(a[2]) * (a[1] === "+" ? 1 : -1)
                        }
                    };
                    r[s.idx] = i;
                    return this[h](r)
                }
            })
        });
        i.hook = function(e) {
            var n = e.split(" ");
            s(n, function(e, s) {
                t.cssHooks[s] = {
                    set: function(e, n) {
                        var l, a, r = "";
                        if (n !== "transparent" && (t.type(n) !== "string" || (l = c(n)))) {
                            n = i(l || n);
                            if (!h.rgba && n._rgba[3] !== 1) {
                                a = s === "backgroundColor" ? e.parentNode : e;
                                while ((r === "" || r === "transparent") && a && a.style) {
                                    try {
                                        r = t.css(a, "backgroundColor");
                                        a = a.parentNode
                                    } catch (o) {}
                                };
                                n = n.blend(r && r !== "transparent" ? r : "_default")
                            };
                            n = n.toRgbaString()
                        };
                        try {
                            e.style[s] = n
                        } catch (o) {}
                    }
                };
                t.fx.step[s] = function(e) {
                    if (!e.colorInit) {
                        e.start = i(e.elem, s);
                        e.end = i(e.end);
                        e.colorInit = !0
                    };
                    t.cssHooks[s].set(e.elem, e.start.transition(e.end, e.pos))
                }
            })
        };
        i.hook(f);
        t.cssHooks.borderColor = {
            expand: function(t) {
                var e = {};
                s(["Top", "Right", "Bottom", "Left"], function(i, s) {
                    e["border" + s + "Color"] = t
                });
                return e
            }
        };
        o = t.Color.names = {
            aqua: "#00ffff",
            black: "#000000",
            blue: "#0000ff",
            fuchsia: "#ff00ff",
            gray: "#808080",
            green: "#008000",
            lime: "#00ff00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            purple: "#800080",
            red: "#ff0000",
            silver: "#c0c0c0",
            teal: "#008080",
            white: "#ffffff",
            yellow: "#ffff00",
            transparent: [null, null, null, 0],
            _default: "#ffffff"
        }
    })(jQuery);
    (function() {
        var s = ["add", "remove", "toggle"],
            n = {
                border: 1,
                borderBottom: 1,
                borderColor: 1,
                borderLeft: 1,
                borderRight: 1,
                borderTop: 1,
                borderWidth: 1,
                margin: 1,
                padding: 1
            };
        t.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function(e, i) {
            t.fx.step[i] = function(t) {
                if (t.end !== "none" && !t.setAttr || t.pos === 1 && !t.setAttr) {
                    jQuery.style(t.elem, i, t.end);
                    t.setAttr = !0
                }
            }
        });

        function i(e) {
            var s, n, i = e.ownerDocument.defaultView ? e.ownerDocument.defaultView.getComputedStyle(e, null) : e.currentStyle,
                o = {};
            if (i && i.length && i[0] && i[i[0]]) {
                n = i.length;
                while (n--) {
                    s = i[n];
                    if (typeof i[s] === "string") {
                        o[t.camelCase(s)] = i[s]
                    }
                }
            } else {
                for (s in i) {
                    if (typeof i[s] === "string") {
                        o[s] = i[s]
                    }
                }
            };
            return o
        };

        function o(e, i) {
            var a = {},
                s, o;
            for (s in i) {
                o = i[s];
                if (e[s] !== o) {
                    if (!n[s]) {
                        if (t.fx.step[s] || !isNaN(parseFloat(o))) {
                            a[s] = o
                        }
                    }
                }
            };
            return a
        };
        if (!t.fn.addBack) {
            t.fn.addBack = function(t) {
                return this.add(t == null ? this.prevObject : this.prevObject.filter(t))
            }
        };
        t.effects.animateClass = function(e, n, a, r) {
            var l = t.speed(n, a, r);
            return this.queue(function() {
                var a = t(this),
                    h = a.attr("class") || "",
                    r, n = l.children ? a.find("*").addBack() : a;
                n = n.map(function() {
                    var e = t(this);
                    return {
                        el: e,
                        start: i(this)
                    }
                });
                r = function() {
                    t.each(s, function(t, i) {
                        if (e[i]) {
                            a[i + "Class"](e[i])
                        }
                    })
                };
                r();
                n = n.map(function() {
                    this.end = i(this.el[0]);
                    this.diff = o(this.start, this.end);
                    return this
                });
                a.attr("class", h);
                n = n.map(function() {
                    var i = this,
                        e = t.Deferred(),
                        s = t.extend({}, l, {
                            queue: !1,
                            complete: function() {
                                e.resolve(i)
                            }
                        });
                    this.el.animate(this.diff, s);
                    return e.promise()
                });
                t.when.apply(t, n.get()).done(function() {
                    r();
                    t.each(arguments, function() {
                        var e = this.el;
                        t.each(this.diff, function(t) {
                            e.css(t, "")
                        })
                    });
                    l.complete.call(a[0])
                })
            })
        };
        t.fn.extend({
            addClass: (function(e) {
                return function(i, s, n, o) {
                    return s ? t.effects.animateClass.call(this, {
                        add: i
                    }, s, n, o) : e.apply(this, arguments)
                }
            })(t.fn.addClass),
            removeClass: (function(e) {
                return function(i, s, n, o) {
                    return arguments.length > 1 ? t.effects.animateClass.call(this, {
                        remove: i
                    }, s, n, o) : e.apply(this, arguments)
                }
            })(t.fn.removeClass),
            toggleClass: (function(i) {
                return function(s, n, o, a, r) {
                    if (typeof n === "boolean" || n === e) {
                        if (!o) {
                            return i.apply(this, arguments)
                        } else {
                            return t.effects.animateClass.call(this, (n ? {
                                add: s
                            } : {
                                remove: s
                            }), o, a, r)
                        }
                    } else {
                        return t.effects.animateClass.call(this, {
                            toggle: s
                        }, n, o, a)
                    }
                }
            })(t.fn.toggleClass),
            switchClass: function(e, i, s, n, o) {
                return t.effects.animateClass.call(this, {
                    add: i,
                    remove: e
                }, s, n, o)
            }
        })
    })();
    (function() {
        t.extend(t.effects, {
            version: "1.10.3",
            save: function(t, e) {
                for (var s = 0; s < e.length; s++) {
                    if (e[s] !== null) {
                        t.data(i + e[s], t[0].style[e[s]])
                    }
                }
            },
            restore: function(t, s) {
                var o, n;
                for (n = 0; n < s.length; n++) {
                    if (s[n] !== null) {
                        o = t.data(i + s[n]);
                        if (o === e) {
                            o = ""
                        };
                        t.css(s[n], o)
                    }
                }
            },
            setMode: function(t, e) {
                if (e === "toggle") {
                    e = t.is(":hidden") ? "show" : "hide"
                };
                return e
            },
            getBaseline: function(t, e) {
                var i, s;
                switch (t[0]) {
                    case "top":
                        i = 0;
                        break;
                    case "middle":
                        i = 0.5;
                        break;
                    case "bottom":
                        i = 1;
                        break;
                    default:
                        i = t[0] / e.height
                };
                switch (t[1]) {
                    case "left":
                        s = 0;
                        break;
                    case "center":
                        s = 0.5;
                        break;
                    case "right":
                        s = 1;
                        break;
                    default:
                        s = t[1] / e.width
                };
                return {
                    x: s,
                    y: i
                }
            },
            createWrapper: function(e) {
                if (e.parent().is(".ui-effects-wrapper")) {
                    return e.parent()
                };
                var s = {
                        width: e.outerWidth(!0),
                        height: e.outerHeight(!0),
                        "float": e.css("float")
                    },
                    o = t("<div></div>").addClass("ui-effects-wrapper").css({
                        fontSize: "100%",
                        background: "transparent",
                        border: "none",
                        margin: 0,
                        padding: 0
                    }),
                    a = {
                        width: e.width(),
                        height: e.height()
                    },
                    n = document.activeElement;
                try {
                    n.id
                } catch (i) {
                    n = document.body
                };
                e.wrap(o);
                if (e[0] === n || t.contains(e[0], n)) {
                    t(n).focus()
                };
                o = e.parent();
                if (e.css("position") === "static") {
                    o.css({
                        position: "relative"
                    });
                    e.css({
                        position: "relative"
                    })
                } else {
                    t.extend(s, {
                        position: e.css("position"),
                        zIndex: e.css("z-index")
                    });
                    t.each(["top", "left", "bottom", "right"], function(t, i) {
                        s[i] = e.css(i);
                        if (isNaN(parseInt(s[i], 10))) {
                            s[i] = "auto"
                        }
                    });
                    e.css({
                        position: "relative",
                        top: 0,
                        left: 0,
                        right: "auto",
                        bottom: "auto"
                    })
                };
                e.css(a);
                return o.css(s).show()
            },
            removeWrapper: function(e) {
                var i = document.activeElement;
                if (e.parent().is(".ui-effects-wrapper")) {
                    e.parent().replaceWith(e);
                    if (e[0] === i || t.contains(e[0], i)) {
                        t(i).focus()
                    }
                };
                return e
            },
            setTransition: function(e, i, s, n) {
                n = n || {};
                t.each(i, function(t, i) {
                    var o = e.cssUnit(i);
                    if (o[0] > 0) {
                        n[i] = o[0] * s + o[1]
                    }
                });
                return n
            }
        });

        function s(e, i, s, n) {
            if (t.isPlainObject(e)) {
                i = e;
                e = e.effect
            };
            e = {
                effect: e
            };
            if (i == null) {
                i = {}
            };
            if (t.isFunction(i)) {
                n = i;
                s = null;
                i = {}
            };
            if (typeof i === "number" || t.fx.speeds[i]) {
                n = s;
                s = i;
                i = {}
            };
            if (t.isFunction(s)) {
                n = s;
                s = null
            };
            if (i) {
                t.extend(e, i)
            };
            s = s || i.duration;
            e.duration = t.fx.off ? 0 : typeof s === "number" ? s : s in t.fx.speeds ? t.fx.speeds[s] : t.fx.speeds._default;
            e.complete = n || i.complete;
            return e
        };

        function n(e) {
            if (!e || typeof e === "number" || t.fx.speeds[e]) {
                return !0
            };
            if (typeof e === "string" && !t.effects.effect[e]) {
                return !0
            };
            if (t.isFunction(e)) {
                return !0
            };
            if (typeof e === "object" && !e.effect) {
                return !0
            };
            return !1
        };
        t.fn.extend({
            effect: function() {
                var e = s.apply(this, arguments),
                    i = e.mode,
                    n = e.queue,
                    o = t.effects.effect[e.effect];
                if (t.fx.off || !o) {
                    if (i) {
                        return this[i](e.duration, e.complete)
                    } else {
                        return this.each(function() {
                            if (e.complete) {
                                e.complete.call(this)
                            }
                        })
                    }
                };

                function a(i) {
                    var s = t(this),
                        a = e.complete,
                        n = e.mode;

                    function r() {
                        if (t.isFunction(a)) {
                            a.call(s[0])
                        };
                        if (t.isFunction(i)) {
                            i()
                        }
                    };
                    if (s.is(":hidden") ? n === "hide" : n === "show") {
                        s[n]();
                        r()
                    } else {
                        o.call(s[0], e, r)
                    }
                };
                return n === !1 ? this.each(a) : this.queue(n || "fx", a)
            },
            show: (function(t) {
                return function(e) {
                    if (n(e)) {
                        return t.apply(this, arguments)
                    } else {
                        var i = s.apply(this, arguments);
                        i.mode = "show";
                        return this.effect.call(this, i)
                    }
                }
            })(t.fn.show),
            hide: (function(t) {
                return function(e) {
                    if (n(e)) {
                        return t.apply(this, arguments)
                    } else {
                        var i = s.apply(this, arguments);
                        i.mode = "hide";
                        return this.effect.call(this, i)
                    }
                }
            })(t.fn.hide),
            toggle: (function(t) {
                return function(e) {
                    if (n(e) || typeof e === "boolean") {
                        return t.apply(this, arguments)
                    } else {
                        var i = s.apply(this, arguments);
                        i.mode = "toggle";
                        return this.effect.call(this, i)
                    }
                }
            })(t.fn.toggle),
            cssUnit: function(e) {
                var i = this.css(e),
                    s = [];
                t.each(["em", "px", "%", "pt"], function(t, e) {
                    if (i.indexOf(e) > 0) {
                        s = [parseFloat(i), e]
                    }
                });
                return s
            }
        })
    })();
    (function() {
        var e = {};
        t.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function(t, i) {
            e[i] = function(e) {
                return Math.pow(e, t + 2)
            }
        });
        t.extend(e, {
            Sine: function(t) {
                return 1 - Math.cos(t * Math.PI / 2)
            },
            Circ: function(t) {
                return 1 - Math.sqrt(1 - t * t)
            },
            Elastic: function(t) {
                return t === 0 || t === 1 ? t : -Math.pow(2, 8 * (t - 1)) * Math.sin(((t - 1) * 80 - 7.5) * Math.PI / 15)
            },
            Back: function(t) {
                return t * t * (3 * t - 2)
            },
            Bounce: function(t) {
                var e, i = 4;
                while (t < ((e = Math.pow(2, --i)) - 1) / 11) {};
                return 1 / Math.pow(4, 3 - i) - 7.5625 * Math.pow((e * 3 - 2) / 22 - t, 2)
            }
        });
        t.each(e, function(e, i) {
            t.easing["easeIn" + e] = i;
            t.easing["easeOut" + e] = function(t) {
                return 1 - i(1 - t)
            };
            t.easing["easeInOut" + e] = function(t) {
                return t < 0.5 ? i(t * 2) / 2 : 1 - i(t * -2 + 2) / 2
            }
        })
    })()
})(jQuery);
(function(t, e) {
    var n = 0,
        i = {},
        s = {};
    i.height = i.paddingTop = i.paddingBottom = i.borderTopWidth = i.borderBottomWidth = "hide";
    s.height = s.paddingTop = s.paddingBottom = s.borderTopWidth = s.borderBottomWidth = "show";
    t.widget("ui.accordion", {
        version: "1.10.3",
        options: {
            active: 0,
            animate: {},
            collapsible: !1,
            event: "click",
            header: "> li > :first-child,> :not(li):even",
            heightStyle: "auto",
            icons: {
                activeHeader: "ui-icon-triangle-1-s",
                header: "ui-icon-triangle-1-e"
            },
            activate: null,
            beforeActivate: null
        },
        _create: function() {
            var e = this.options;
            this.prevShow = this.prevHide = t();
            this.element.addClass("ui-accordion ui-widget ui-helper-reset").attr("role", "tablist");
            if (!e.collapsible && (e.active === !1 || e.active == null)) {
                e.active = 0
            };
            this._processPanels();
            if (e.active < 0) {
                e.active += this.headers.length
            };
            this._refresh()
        },
        _getCreateEventData: function() {
            return {
                header: this.active,
                panel: !this.active.length ? t() : this.active.next(),
                content: !this.active.length ? t() : this.active.next()
            }
        },
        _createIcons: function() {
            var e = this.options.icons;
            if (e) {
                t("<span>").addClass("ui-accordion-header-icon ui-icon " + e.header).prependTo(this.headers);
                this.active.children(".ui-accordion-header-icon").removeClass(e.header).addClass(e.activeHeader);
                this.headers.addClass("ui-accordion-icons")
            }
        },
        _destroyIcons: function() {
            this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()
        },
        _destroy: function() {
            var t;
            this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role");
            this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").each(function() {
                if (/^ui-accordion/.test(this.id)) {
                    this.removeAttribute("id")
                }
            });
            this._destroyIcons();
            t = this.headers.next().css("display", "").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").each(function() {
                if (/^ui-accordion/.test(this.id)) {
                    this.removeAttribute("id")
                }
            });
            if (this.options.heightStyle !== "content") {
                t.css("height", "")
            }
        },
        _setOption: function(t, e) {
            if (t === "active") {
                this._activate(e);
                return
            };
            if (t === "event") {
                if (this.options.event) {
                    this._off(this.headers, this.options.event)
                };
                this._setupEvents(e)
            };
            this._super(t, e);
            if (t === "collapsible" && !e && this.options.active === !1) {
                this._activate(0)
            };
            if (t === "icons") {
                this._destroyIcons();
                if (e) {
                    this._createIcons()
                }
            };
            if (t === "disabled") {
                this.headers.add(this.headers.next()).toggleClass("ui-state-disabled", !!e)
            }
        },
        _keydown: function(e) {
            if (e.altKey || e.ctrlKey) {
                return
            };
            var i = t.ui.keyCode,
                n = this.headers.length,
                o = this.headers.index(e.target),
                s = !1;
            switch (e.keyCode) {
                case i.RIGHT:
                case i.DOWN:
                    s = this.headers[(o + 1) % n];
                    break;
                case i.LEFT:
                case i.UP:
                    s = this.headers[(o - 1 + n) % n];
                    break;
                case i.SPACE:
                case i.ENTER:
                    this._eventHandler(e);
                    break;
                case i.HOME:
                    s = this.headers[0];
                    break;
                case i.END:
                    s = this.headers[n - 1];
                    break
            };
            if (s) {
                t(e.target).attr("tabIndex", -1);
                t(s).attr("tabIndex", 0);
                s.focus();
                e.preventDefault()
            }
        },
        _panelKeyDown: function(e) {
            if (e.keyCode === t.ui.keyCode.UP && e.ctrlKey) {
                t(e.currentTarget).prev().focus()
            }
        },
        refresh: function() {
            var e = this.options;
            this._processPanels();
            if ((e.active === !1 && e.collapsible === !0) || !this.headers.length) {
                e.active = !1;
                this.active = t()
            } else if (e.active === !1) {
                this._activate(0)
            } else if (this.active.length && !t.contains(this.element[0], this.active[0])) {
                if (this.headers.length === this.headers.find(".ui-state-disabled").length) {
                    e.active = !1;
                    this.active = t()
                } else {
                    this._activate(Math.max(0, e.active - 1))
                }
            } else {
                e.active = this.headers.index(this.active)
            };
            this._destroyIcons();
            this._refresh()
        },
        _processPanels: function() {
            this.headers = this.element.find(this.options.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all");
            this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").filter(":not(.ui-accordion-content-active)").hide()
        },
        _refresh: function() {
            var e, i = this.options,
                s = i.heightStyle,
                a = this.element.parent(),
                o = this.accordionId = "ui-accordion-" + (this.element.attr("id") || ++n);
            this.active = this._findActive(i.active).addClass("ui-accordion-header-active ui-state-active ui-corner-top").removeClass("ui-corner-all");
            this.active.next().addClass("ui-accordion-content-active").show();
            this.headers.attr("role", "tab").each(function(e) {
                var i = t(this),
                    s = i.attr("id"),
                    a = i.next(),
                    n = a.attr("id");
                if (!s) {
                    s = o + "-header-" + e;
                    i.attr("id", s)
                };
                if (!n) {
                    n = o + "-panel-" + e;
                    a.attr("id", n)
                };
                i.attr("aria-controls", n);
                a.attr("aria-labelledby", s)
            }).next().attr("role", "tabpanel");
            this.headers.not(this.active).attr({
                "aria-selected": "false",
                tabIndex: -1
            }).next().attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            }).hide();
            if (!this.active.length) {
                this.headers.eq(0).attr("tabIndex", 0)
            } else {
                this.active.attr({
                    "aria-selected": "true",
                    tabIndex: 0
                }).next().attr({
                    "aria-expanded": "true",
                    "aria-hidden": "false"
                })
            };
            this._createIcons();
            this._setupEvents(i.event);
            if (s === "fill") {
                e = a.height();
                this.element.siblings(":visible").each(function() {
                    var i = t(this),
                        s = i.css("position");
                    if (s === "absolute" || s === "fixed") {
                        return
                    };
                    e -= i.outerHeight(!0)
                });
                this.headers.each(function() {
                    e -= t(this).outerHeight(!0)
                });
                this.headers.next().each(function() {
                    t(this).height(Math.max(0, e - t(this).innerHeight() + t(this).height()))
                }).css("overflow", "auto")
            } else if (s === "auto") {
                e = 0;
                this.headers.next().each(function() {
                    e = Math.max(e, t(this).css("height", "").height())
                }).height(e)
            }
        },
        _activate: function(e) {
            var i = this._findActive(e)[0];
            if (i === this.active[0]) {
                return
            };
            i = i || this.active[0];
            this._eventHandler({
                target: i,
                currentTarget: i,
                preventDefault: t.noop
            })
        },
        _findActive: function(e) {
            return typeof e === "number" ? this.headers.eq(e) : t()
        },
        _setupEvents: function(e) {
            var i = {
                keydown: "_keydown"
            };
            if (e) {
                t.each(e.split(" "), function(t, e) {
                    i[e] = "_eventHandler"
                })
            };
            this._off(this.headers.add(this.headers.next()));
            this._on(this.headers, i);
            this._on(this.headers.next(), {
                keydown: "_panelKeyDown"
            });
            this._hoverable(this.headers);
            this._focusable(this.headers)
        },
        _eventHandler: function(e) {
            var i = this.options,
                n = this.active,
                s = t(e.currentTarget),
                o = s[0] === n[0],
                a = o && i.collapsible,
                l = a ? t() : s.next(),
                h = n.next(),
                r = {
                    oldHeader: n,
                    oldPanel: h,
                    newHeader: a ? t() : s,
                    newPanel: l
                };
            e.preventDefault();
            if ((o && !i.collapsible) || (this._trigger("beforeActivate", e, r) === !1)) {
                return
            };
            i.active = a ? !1 : this.headers.index(s);
            this.active = o ? t() : s;
            this._toggle(r);
            n.removeClass("ui-accordion-header-active ui-state-active");
            if (i.icons) {
                n.children(".ui-accordion-header-icon").removeClass(i.icons.activeHeader).addClass(i.icons.header)
            };
            if (!o) {
                s.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top");
                if (i.icons) {
                    s.children(".ui-accordion-header-icon").removeClass(i.icons.header).addClass(i.icons.activeHeader)
                };
                s.next().addClass("ui-accordion-content-active")
            }
        },
        _toggle: function(e) {
            var s = e.newPanel,
                i = this.prevShow.length ? this.prevShow : e.oldPanel;
            this.prevShow.add(this.prevHide).stop(!0, !0);
            this.prevShow = s;
            this.prevHide = i;
            if (this.options.animate) {
                this._animate(s, i, e)
            } else {
                i.hide();
                s.show();
                this._toggleComplete(e)
            };
            i.attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            });
            i.prev().attr("aria-selected", "false");
            if (s.length && i.length) {
                i.prev().attr("tabIndex", -1)
            } else if (s.length) {
                this.headers.filter(function() {
                    return t(this).attr("tabIndex") === 0
                }).attr("tabIndex", -1)
            };
            s.attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            }).prev().attr({
                "aria-selected": "true",
                tabIndex: 0
            })
        },
        _animate: function(t, e, n) {
            var c, o, a, f = this,
                h = 0,
                d = t.length && (!e.length || (t.index() < e.index())),
                l = this.options.animate || {},
                r = d && l.down || l,
                u = function() {
                    f._toggleComplete(n)
                };
            if (typeof r === "number") {
                a = r
            };
            if (typeof r === "string") {
                o = r
            };
            o = o || r.easing || l.easing;
            a = a || r.duration || l.duration;
            if (!e.length) {
                return t.animate(s, a, o, u)
            };
            if (!t.length) {
                return e.animate(i, a, o, u)
            };
            c = t.show().outerHeight();
            e.animate(i, {
                duration: a,
                easing: o,
                step: function(t, e) {
                    e.now = Math.round(t)
                }
            });
            t.hide().animate(s, {
                duration: a,
                easing: o,
                complete: u,
                step: function(t, i) {
                    i.now = Math.round(t);
                    if (i.prop !== "height") {
                        h += i.now
                    } else if (f.options.heightStyle !== "content") {
                        i.now = Math.round(c - e.outerHeight() - h);
                        h = 0
                    }
                }
            })
        },
        _toggleComplete: function(t) {
            var e = t.oldPanel;
            e.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all");
            if (e.length) {
                e.parent()[0].className = e.parent()[0].className
            };
            this._trigger("activate", null, t)
        }
    })
})(jQuery);
(function(t, e) {
    var i = 0;
    t.widget("ui.autocomplete", {
        version: "1.10.3",
        defaultElement: "<input>",
        options: {
            appendTo: null,
            autoFocus: !1,
            delay: 300,
            minLength: 1,
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            source: null,
            change: null,
            close: null,
            focus: null,
            open: null,
            response: null,
            search: null,
            select: null
        },
        pending: 0,
        _create: function() {
            var e, i, s, n = this.element[0].nodeName.toLowerCase(),
                o = n === "textarea",
                a = n === "input";
            this.isMultiLine = o ? !0 : a ? !1 : this.element.prop("isContentEditable");
            this.valueMethod = this.element[o || a ? "val" : "text"];
            this.isNewMenu = !0;
            this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off");
            this._on(this.element, {
                keydown: function(n) {
                    if (this.element.prop("readOnly")) {
                        e = !0;
                        s = !0;
                        i = !0;
                        return
                    };
                    e = !1;
                    s = !1;
                    i = !1;
                    var o = t.ui.keyCode;
                    switch (n.keyCode) {
                        case o.PAGE_UP:
                            e = !0;
                            this._move("previousPage", n);
                            break;
                        case o.PAGE_DOWN:
                            e = !0;
                            this._move("nextPage", n);
                            break;
                        case o.UP:
                            e = !0;
                            this._keyEvent("previous", n);
                            break;
                        case o.DOWN:
                            e = !0;
                            this._keyEvent("next", n);
                            break;
                        case o.ENTER:
                        case o.NUMPAD_ENTER:
                            if (this.menu.active) {
                                e = !0;
                                n.preventDefault();
                                this.menu.select(n)
                            };
                            break;
                        case o.TAB:
                            if (this.menu.active) {
                                this.menu.select(n)
                            };
                            break;
                        case o.ESCAPE:
                            if (this.menu.element.is(":visible")) {
                                this._value(this.term);
                                this.close(n);
                                n.preventDefault()
                            };
                            break;
                        default:
                            i = !0;
                            this._searchTimeout(n);
                            break
                    }
                },
                keypress: function(s) {
                    if (e) {
                        e = !1;
                        if (!this.isMultiLine || this.menu.element.is(":visible")) {
                            s.preventDefault()
                        };
                        return
                    };
                    if (i) {
                        return
                    };
                    var n = t.ui.keyCode;
                    switch (s.keyCode) {
                        case n.PAGE_UP:
                            this._move("previousPage", s);
                            break;
                        case n.PAGE_DOWN:
                            this._move("nextPage", s);
                            break;
                        case n.UP:
                            this._keyEvent("previous", s);
                            break;
                        case n.DOWN:
                            this._keyEvent("next", s);
                            break
                    }
                },
                input: function(t) {
                    if (s) {
                        s = !1;
                        t.preventDefault();
                        return
                    };
                    this._searchTimeout(t)
                },
                focus: function() {
                    this.selectedItem = null;
                    this.previous = this._value()
                },
                blur: function(t) {
                    if (this.cancelBlur) {
                        delete this.cancelBlur;
                        return
                    };
                    clearTimeout(this.searching);
                    this.close(t);
                    this._change(t)
                }
            });
            this._initSource();
            this.menu = t("<ul>").addClass("ui-autocomplete ui-front").appendTo(this._appendTo()).menu({
                role: null
            }).hide().data("ui-menu");
            this._on(this.menu.element, {
                mousedown: function(e) {
                    e.preventDefault();
                    this.cancelBlur = !0;
                    this._delay(function() {
                        delete this.cancelBlur
                    });
                    var i = this.menu.element[0];
                    if (!t(e.target).closest(".ui-menu-item").length) {
                        this._delay(function() {
                            var e = this;
                            this.document.one("mousedown", function(s) {
                                if (s.target !== e.element[0] && s.target !== i && !t.contains(i, s.target)) {
                                    e.close()
                                }
                            })
                        })
                    }
                },
                menufocus: function(e, i) {
                    if (this.isNewMenu) {
                        this.isNewMenu = !1;
                        if (e.originalEvent && /^mouse/.test(e.originalEvent.type)) {
                            this.menu.blur();
                            this.document.one("mousemove", function() {
                                t(e.target).trigger(e.originalEvent)
                            });
                            return
                        }
                    };
                    var s = i.item.data("ui-autocomplete-item");
                    if (!1 !== this._trigger("focus", e, {
                            item: s
                        })) {
                        if (e.originalEvent && /^key/.test(e.originalEvent.type)) {
                            this._value(s.value)
                        }
                    } else {
                        this.liveRegion.text(s.value)
                    }
                },
                menuselect: function(t, e) {
                    var i = e.item.data("ui-autocomplete-item"),
                        s = this.previous;
                    if (this.element[0] !== this.document[0].activeElement) {
                        this.element.focus();
                        this.previous = s;
                        this._delay(function() {
                            this.previous = s;
                            this.selectedItem = i
                        })
                    };
                    if (!1 !== this._trigger("select", t, {
                            item: i
                        })) {
                        this._value(i.value)
                    };
                    this.term = this._value();
                    this.close(t);
                    this.selectedItem = i
                }
            });
            this.liveRegion = t("<span>", {
                role: "status",
                "aria-live": "polite"
            }).addClass("ui-helper-hidden-accessible").insertBefore(this.element);
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _destroy: function() {
            clearTimeout(this.searching);
            this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete");
            this.menu.element.remove();
            this.liveRegion.remove()
        },
        _setOption: function(t, e) {
            this._super(t, e);
            if (t === "source") {
                this._initSource()
            };
            if (t === "appendTo") {
                this.menu.element.appendTo(this._appendTo())
            };
            if (t === "disabled" && e && this.xhr) {
                this.xhr.abort()
            }
        },
        _appendTo: function() {
            var e = this.options.appendTo;
            if (e) {
                e = e.jquery || e.nodeType ? t(e) : this.document.find(e).eq(0)
            };
            if (!e) {
                e = this.element.closest(".ui-front")
            };
            if (!e.length) {
                e = this.document[0].body
            };
            return e
        },
        _initSource: function() {
            var i, s, e = this;
            if (t.isArray(this.options.source)) {
                i = this.options.source;
                this.source = function(e, s) {
                    s(t.ui.autocomplete.filter(i, e.term))
                }
            } else if (typeof this.options.source === "string") {
                s = this.options.source;
                this.source = function(i, n) {
                    if (e.xhr) {
                        e.xhr.abort()
                    };
                    e.xhr = t.ajax({
                        url: s,
                        data: i,
                        dataType: "json",
                        success: function(t) {
                            n(t)
                        },
                        error: function() {
                            n([])
                        }
                    })
                }
            } else {
                this.source = this.options.source
            }
        },
        _searchTimeout: function(t) {
            clearTimeout(this.searching);
            this.searching = this._delay(function() {
                if (this.term !== this._value()) {
                    this.selectedItem = null;
                    this.search(null, t)
                }
            }, this.options.delay)
        },
        search: function(t, e) {
            t = t != null ? t : this._value();
            this.term = this._value();
            if (t.length < this.options.minLength) {
                return this.close(e)
            };
            if (this._trigger("search", e) === !1) {
                return
            };
            return this._search(t)
        },
        _search: function(t) {
            this.pending++;
            this.element.addClass("ui-autocomplete-loading");
            this.cancelSearch = !1;
            this.source({
                term: t
            }, this._response())
        },
        _response: function() {
            var t = this,
                e = ++i;
            return function(s) {
                if (e === i) {
                    t.__response(s)
                };
                t.pending--;
                if (!t.pending) {
                    t.element.removeClass("ui-autocomplete-loading")
                }
            }
        },
        __response: function(t) {
            if (t) {
                t = this._normalize(t)
            };
            this._trigger("response", null, {
                content: t
            });
            if (!this.options.disabled && t && t.length && !this.cancelSearch) {
                this._suggest(t);
                this._trigger("open")
            } else {
                this._close()
            }
        },
        close: function(t) {
            this.cancelSearch = !0;
            this._close(t)
        },
        _close: function(t) {
            if (this.menu.element.is(":visible")) {
                this.menu.element.hide();
                this.menu.blur();
                this.isNewMenu = !0;
                this._trigger("close", t)
            }
        },
        _change: function(t) {
            if (this.previous !== this._value()) {
                this._trigger("change", t, {
                    item: this.selectedItem
                })
            }
        },
        _normalize: function(e) {
            if (e.length && e[0].label && e[0].value) {
                return e
            };
            return t.map(e, function(e) {
                if (typeof e === "string") {
                    return {
                        label: e,
                        value: e
                    }
                };
                return t.extend({
                    label: e.label || e.value,
                    value: e.value || e.label
                }, e)
            })
        },
        _suggest: function(e) {
            var i = this.menu.element.empty();
            this._renderMenu(i, e);
            this.isNewMenu = !0;
            this.menu.refresh();
            i.show();
            this._resizeMenu();
            i.position(t.extend({
                of: this.element
            }, this.options.position));
            if (this.options.autoFocus) {
                this.menu.next()
            }
        },
        _resizeMenu: function() {
            var t = this.menu.element;
            t.outerWidth(Math.max(t.width("").outerWidth() + 1, this.element.outerWidth()))
        },
        _renderMenu: function(e, i) {
            var s = this;
            t.each(i, function(t, i) {
                s._renderItemData(e, i)
            })
        },
        _renderItemData: function(t, e) {
            return this._renderItem(t, e).data("ui-autocomplete-item", e)
        },
        _renderItem: function(e, i) {
            return t("<li>").append(t("<a>").text(i.label)).appendTo(e)
        },
        _move: function(t, e) {
            if (!this.menu.element.is(":visible")) {
                this.search(null, e);
                return
            };
            if (this.menu.isFirstItem() && /^previous/.test(t) || this.menu.isLastItem() && /^next/.test(t)) {
                this._value(this.term);
                this.menu.blur();
                return
            };
            this.menu[t](e)
        },
        widget: function() {
            return this.menu.element
        },
        _value: function() {
            return this.valueMethod.apply(this.element, arguments)
        },
        _keyEvent: function(t, e) {
            if (!this.isMultiLine || this.menu.element.is(":visible")) {
                this._move(t, e);
                e.preventDefault()
            }
        }
    });
    t.extend(t.ui.autocomplete, {
        escapeRegex: function(t) {
            return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
        },
        filter: function(e, i) {
            var s = new RegExp(t.ui.autocomplete.escapeRegex(i), "i");
            return t.grep(e, function(t) {
                return s.test(t.label || t.value || t)
            })
        }
    });
    t.widget("ui.autocomplete", t.ui.autocomplete, {
        options: {
            messages: {
                noResults: "No search results.",
                results: function(t) {
                    return t + (t > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate."
                }
            }
        },
        __response: function(t) {
            var e;
            this._superApply(arguments);
            if (this.options.disabled || this.cancelSearch) {
                return
            };
            if (t && t.length) {
                e = this.options.messages.results(t.length)
            } else {
                e = this.options.messages.noResults
            };
            this.liveRegion.text(e)
        }
    })
}(jQuery));
(function(t, e) {
    var s, n, o, i, a = "ui-button ui-widget ui-state-default ui-corner-all",
        h = "ui-state-hover ui-state-active ",
        r = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",
        u = function() {
            var e = t(this);
            setTimeout(function() {
                e.find(":ui-button").button("refresh")
            }, 1)
        },
        l = function(e) {
            var i = e.name,
                n = e.form,
                s = t([]);
            if (i) {
                i = i.replace(/'/g, "\\'");
                if (n) {
                    s = t(n).find("[name='" + i + "']")
                } else {
                    s = t("[name='" + i + "']", e.ownerDocument).filter(function() {
                        return !this.form
                    })
                }
            };
            return s
        };
    t.widget("ui.button", {
        version: "1.10.3",
        defaultElement: "<button>",
        options: {
            disabled: null,
            text: !0,
            label: null,
            icons: {
                primary: null,
                secondary: null
            }
        },
        _create: function() {
            this.element.closest("form").unbind("reset" + this.eventNamespace).bind("reset" + this.eventNamespace, u);
            if (typeof this.options.disabled !== "boolean") {
                this.options.disabled = !!this.element.prop("disabled")
            } else {
                this.element.prop("disabled", this.options.disabled)
            };
            this._determineButtonType();
            this.hasTitle = !!this.buttonElement.attr("title");
            var r = this,
                e = this.options,
                h = this.type === "checkbox" || this.type === "radio",
                f = !h ? "ui-state-active" : "",
                c = "ui-state-focus";
            if (e.label === null) {
                e.label = (this.type === "input" ? this.buttonElement.val() : this.buttonElement.html())
            };
            this._hoverable(this.buttonElement);
            this.buttonElement.addClass(a).attr("role", "button").bind("mouseenter" + this.eventNamespace, function() {
                if (e.disabled) {
                    return
                };
                if (this === s) {
                    t(this).addClass("ui-state-active")
                }
            }).bind("mouseleave" + this.eventNamespace, function() {
                if (e.disabled) {
                    return
                };
                t(this).removeClass(f)
            }).bind("click" + this.eventNamespace, function(t) {
                if (e.disabled) {
                    t.preventDefault();
                    t.stopImmediatePropagation()
                }
            });
            this.element.bind("focus" + this.eventNamespace, function() {
                r.buttonElement.addClass(c)
            }).bind("blur" + this.eventNamespace, function() {
                r.buttonElement.removeClass(c)
            });
            if (h) {
                this.element.bind("change" + this.eventNamespace, function() {
                    if (i) {
                        return
                    };
                    r.refresh()
                });
                this.buttonElement.bind("mousedown" + this.eventNamespace, function(t) {
                    if (e.disabled) {
                        return
                    };
                    i = !1;
                    n = t.pageX;
                    o = t.pageY
                }).bind("mouseup" + this.eventNamespace, function(t) {
                    if (e.disabled) {
                        return
                    };
                    if (n !== t.pageX || o !== t.pageY) {
                        i = !0
                    }
                })
            };
            if (this.type === "checkbox") {
                this.buttonElement.bind("click" + this.eventNamespace, function() {
                    if (e.disabled || i) {
                        return !1
                    }
                })
            } else if (this.type === "radio") {
                this.buttonElement.bind("click" + this.eventNamespace, function() {
                    if (e.disabled || i) {
                        return !1
                    };
                    t(this).addClass("ui-state-active");
                    r.buttonElement.attr("aria-pressed", "true");
                    var s = r.element[0];
                    l(s).not(s).map(function() {
                        return t(this).button("widget")[0]
                    }).removeClass("ui-state-active").attr("aria-pressed", "false")
                })
            } else {
                this.buttonElement.bind("mousedown" + this.eventNamespace, function() {
                    if (e.disabled) {
                        return !1
                    };
                    t(this).addClass("ui-state-active");
                    s = this;
                    r.document.one("mouseup", function() {
                        s = null
                    })
                }).bind("mouseup" + this.eventNamespace, function() {
                    if (e.disabled) {
                        return !1
                    };
                    t(this).removeClass("ui-state-active")
                }).bind("keydown" + this.eventNamespace, function(i) {
                    if (e.disabled) {
                        return !1
                    };
                    if (i.keyCode === t.ui.keyCode.SPACE || i.keyCode === t.ui.keyCode.ENTER) {
                        t(this).addClass("ui-state-active")
                    }
                }).bind("keyup" + this.eventNamespace + " blur" + this.eventNamespace, function() {
                    t(this).removeClass("ui-state-active")
                });
                if (this.buttonElement.is("a")) {
                    this.buttonElement.keyup(function(e) {
                        if (e.keyCode === t.ui.keyCode.SPACE) {
                            t(this).click()
                        }
                    })
                }
            };
            this._setOption("disabled", e.disabled);
            this._resetButton()
        },
        _determineButtonType: function() {
            var t, e, i;
            if (this.element.is("[type=checkbox]")) {
                this.type = "checkbox"
            } else if (this.element.is("[type=radio]")) {
                this.type = "radio"
            } else if (this.element.is("input")) {
                this.type = "input"
            } else {
                this.type = "button"
            };
            if (this.type === "checkbox" || this.type === "radio") {
                t = this.element.parents().last();
                e = "label[for='" + this.element.attr("id") + "']";
                this.buttonElement = t.find(e);
                if (!this.buttonElement.length) {
                    t = t.length ? t.siblings() : this.element.siblings();
                    this.buttonElement = t.filter(e);
                    if (!this.buttonElement.length) {
                        this.buttonElement = t.find(e)
                    }
                };
                this.element.addClass("ui-helper-hidden-accessible");
                i = this.element.is(":checked");
                if (i) {
                    this.buttonElement.addClass("ui-state-active")
                };
                this.buttonElement.prop("aria-pressed", i)
            } else {
                this.buttonElement = this.element
            }
        },
        widget: function() {
            return this.buttonElement
        },
        _destroy: function() {
            this.element.removeClass("ui-helper-hidden-accessible");
            this.buttonElement.removeClass(a + " " + h + " " + r).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html());
            if (!this.hasTitle) {
                this.buttonElement.removeAttr("title")
            }
        },
        _setOption: function(t, e) {
            this._super(t, e);
            if (t === "disabled") {
                if (e) {
                    this.element.prop("disabled", !0)
                } else {
                    this.element.prop("disabled", !1)
                };
                return
            };
            this._resetButton()
        },
        refresh: function() {
            var e = this.element.is("input, button") ? this.element.is(":disabled") : this.element.hasClass("ui-button-disabled");
            if (e !== this.options.disabled) {
                this._setOption("disabled", e)
            };
            if (this.type === "radio") {
                l(this.element[0]).each(function() {
                    if (t(this).is(":checked")) {
                        t(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true")
                    } else {
                        t(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false")
                    }
                })
            } else if (this.type === "checkbox") {
                if (this.element.is(":checked")) {
                    this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true")
                } else {
                    this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false")
                }
            }
        },
        _resetButton: function() {
            if (this.type === "input") {
                if (this.options.label) {
                    this.element.val(this.options.label)
                };
                return
            };
            var i = this.buttonElement.removeClass(r),
                o = t("<span></span>", this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(i.empty()).text(),
                e = this.options.icons,
                n = e.primary && e.secondary,
                s = [];
            if (e.primary || e.secondary) {
                if (this.options.text) {
                    s.push("ui-button-text-icon" + (n ? "s" : (e.primary ? "-primary" : "-secondary")))
                };
                if (e.primary) {
                    i.prepend("<span class='ui-button-icon-primary ui-icon " + e.primary + "'></span>")
                };
                if (e.secondary) {
                    i.append("<span class='ui-button-icon-secondary ui-icon " + e.secondary + "'></span>")
                };
                if (!this.options.text) {
                    s.push(n ? "ui-button-icons-only" : "ui-button-icon-only");
                    if (!this.hasTitle) {
                        i.attr("title", t.trim(o))
                    }
                }
            } else {
                s.push("ui-button-text-only")
            };
            i.addClass(s.join(" "))
        }
    });
    t.widget("ui.buttonset", {
        version: "1.10.3",
        options: {
            items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"
        },
        _create: function() {
            this.element.addClass("ui-buttonset")
        },
        _init: function() {
            this.refresh()
        },
        _setOption: function(t, e) {
            if (t === "disabled") {
                this.buttons.button("option", t, e)
            };
            this._super(t, e)
        },
        refresh: function() {
            var e = this.element.css("direction") === "rtl";
            this.buttons = this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function() {
                return t(this).button("widget")[0]
            }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(e ? "ui-corner-right" : "ui-corner-left").end().filter(":last").addClass(e ? "ui-corner-left" : "ui-corner-right").end().end()
        },
        _destroy: function() {
            this.element.removeClass("ui-buttonset");
            this.buttons.map(function() {
                return t(this).button("widget")[0]
            }).removeClass("ui-corner-left ui-corner-right").end().button("destroy")
        }
    })
}(jQuery));
(function(t, e) {
    t.extend(t.ui, {
        datepicker: {
            version: "1.10.3"
        }
    });
    var i = "datepicker",
        n;

    function o() {
        this._curInst = null;
        this._keyEvent = !1;
        this._disabledInputs = [];
        this._datepickerShowing = !1;
        this._inDialog = !1;
        this._mainDivId = "ui-datepicker-div";
        this._inlineClass = "ui-datepicker-inline";
        this._appendClass = "ui-datepicker-append";
        this._triggerClass = "ui-datepicker-trigger";
        this._dialogClass = "ui-datepicker-dialog";
        this._disableClass = "ui-datepicker-disabled";
        this._unselectableClass = "ui-datepicker-unselectable";
        this._currentClass = "ui-datepicker-current-day";
        this._dayOverClass = "ui-datepicker-days-cell-over";
        this.regional = [];
        this.regional[""] = {
            closeText: "Done",
            prevText: "Prev",
            nextText: "Next",
            currentText: "Today",
            monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            weekHeader: "Wk",
            dateFormat: "mm/dd/yy",
            firstDay: 0,
            isRTL: !1,
            showMonthAfterYear: !1,
            yearSuffix: ""
        };
        this._defaults = {
            showOn: "focus",
            showAnim: "fadeIn",
            showOptions: {},
            defaultDate: null,
            appendText: "",
            buttonText: "...",
            buttonImage: "",
            buttonImageOnly: !1,
            hideIfNoPrevNext: !1,
            navigationAsDateFormat: !1,
            gotoCurrent: !1,
            changeMonth: !1,
            changeYear: !1,
            yearRange: "c-10:c+10",
            showOtherMonths: !1,
            selectOtherMonths: !1,
            showWeek: !1,
            calculateWeek: this.iso8601Week,
            shortYearCutoff: "+10",
            minDate: null,
            maxDate: null,
            duration: "fast",
            beforeShowDay: null,
            beforeShow: null,
            onSelect: null,
            onChangeMonthYear: null,
            onClose: null,
            numberOfMonths: 1,
            showCurrentAtPos: 0,
            stepMonths: 1,
            stepBigMonths: 12,
            altField: "",
            altFormat: "",
            constrainInput: !0,
            showButtonPanel: !1,
            autoSize: !1,
            disabled: !1
        };
        t.extend(this._defaults, this.regional[""]);
        this.dpDiv = a(t("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))
    };
    t.extend(o.prototype, {
        markerClassName: "hasDatepicker",
        maxRows: 4,
        _widgetDatepicker: function() {
            return this.dpDiv
        },
        setDefaults: function(t) {
            s(this._defaults, t || {});
            return this
        },
        _attachDatepicker: function(e, i) {
            var s, o, n;
            s = e.nodeName.toLowerCase();
            o = (s === "div" || s === "span");
            if (!e.id) {
                this.uuid += 1;
                e.id = "dp" + this.uuid
            };
            n = this._newInst(t(e), o);
            n.settings = t.extend({}, i || {});
            if (s === "input") {
                this._connectDatepicker(e, n)
            } else if (o) {
                this._inlineDatepicker(e, n)
            }
        },
        _newInst: function(e, i) {
            var s = e[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1");
            return {
                id: s,
                input: e,
                selectedDay: 0,
                selectedMonth: 0,
                selectedYear: 0,
                drawMonth: 0,
                drawYear: 0,
                inline: i,
                dpDiv: (!i ? this.dpDiv : a(t("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")))
            }
        },
        _connectDatepicker: function(e, s) {
            var n = t(e);
            s.append = t([]);
            s.trigger = t([]);
            if (n.hasClass(this.markerClassName)) {
                return
            };
            this._attachments(n, s);
            n.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp);
            this._autoSize(s);
            t.data(e, i, s);
            if (s.settings.disabled) {
                this._disableDatepicker(e)
            }
        },
        _attachments: function(e, i) {
            var n, s, o, a = this._get(i, "appendText"),
                r = this._get(i, "isRTL");
            if (i.append) {
                i.append.remove()
            };
            if (a) {
                i.append = t("<span class='" + this._appendClass + "'>" + a + "</span>");
                e[r ? "before" : "after"](i.append)
            };
            e.unbind("focus", this._showDatepicker);
            if (i.trigger) {
                i.trigger.remove()
            };
            n = this._get(i, "showOn");
            if (n === "focus" || n === "both") {
                e.focus(this._showDatepicker)
            };
            if (n === "button" || n === "both") {
                s = this._get(i, "buttonText");
                o = this._get(i, "buttonImage");
                i.trigger = t(this._get(i, "buttonImageOnly") ? t("<img/>").addClass(this._triggerClass).attr({
                    src: o,
                    alt: s,
                    title: s
                }) : t("<button type='button'></button>").addClass(this._triggerClass).html(!o ? s : t("<img/>").attr({
                    src: o,
                    alt: s,
                    title: s
                })));
                e[r ? "before" : "after"](i.trigger);
                i.trigger.click(function() {
                    if (t.datepicker._datepickerShowing && t.datepicker._lastInput === e[0]) {
                        t.datepicker._hideDatepicker()
                    } else if (t.datepicker._datepickerShowing && t.datepicker._lastInput !== e[0]) {
                        t.datepicker._hideDatepicker();
                        t.datepicker._showDatepicker(e[0])
                    } else {
                        t.datepicker._showDatepicker(e[0])
                    };
                    return !1
                })
            }
        },
        _autoSize: function(t) {
            if (this._get(t, "autoSize") && !t.inline) {
                var s, n, o, e, i = new Date(2009, 12 - 1, 20),
                    a = this._get(t, "dateFormat");
                if (a.match(/[DM]/)) {
                    s = function(t) {
                        n = 0;
                        o = 0;
                        for (e = 0; e < t.length; e++) {
                            if (t[e].length > n) {
                                n = t[e].length;
                                o = e
                            }
                        };
                        return o
                    };
                    i.setMonth(s(this._get(t, (a.match(/MM/) ? "monthNames" : "monthNamesShort"))));
                    i.setDate(s(this._get(t, (a.match(/DD/) ? "dayNames" : "dayNamesShort"))) + 20 - i.getDay())
                };
                t.input.attr("size", this._formatDate(t, i).length)
            }
        },
        _inlineDatepicker: function(e, s) {
            var n = t(e);
            if (n.hasClass(this.markerClassName)) {
                return
            };
            n.addClass(this.markerClassName).append(s.dpDiv);
            t.data(e, i, s);
            this._setDate(s, this._getDefaultDate(s), !0);
            this._updateDatepicker(s);
            this._updateAlternate(s);
            if (s.settings.disabled) {
                this._disableDatepicker(e)
            };
            s.dpDiv.css("display", "block")
        },
        _dialogDatepicker: function(e, n, o, a, r) {
            var h, u, c, f, d, l = this._dialogInst;
            if (!l) {
                this.uuid += 1;
                h = "dp" + this.uuid;
                this._dialogInput = t("<input type='text' id='" + h + "' style='position: absolute; top: -100px; width: 0px;'/>");
                this._dialogInput.keydown(this._doKeyDown);
                t("body").append(this._dialogInput);
                l = this._dialogInst = this._newInst(this._dialogInput, !1);
                l.settings = {};
                t.data(this._dialogInput[0], i, l)
            };
            s(l.settings, a || {});
            n = (n && n.constructor === Date ? this._formatDate(l, n) : n);
            this._dialogInput.val(n);
            this._pos = (r ? (r.length ? r : [r.pageX, r.pageY]) : null);
            if (!this._pos) {
                u = document.documentElement.clientWidth;
                c = document.documentElement.clientHeight;
                f = document.documentElement.scrollLeft || document.body.scrollLeft;
                d = document.documentElement.scrollTop || document.body.scrollTop;
                this._pos = [(u / 2) - 100 + f, (c / 2) - 150 + d]
            };
            this._dialogInput.css("left", (this._pos[0] + 20) + "px").css("top", this._pos[1] + "px");
            l.settings.onSelect = o;
            this._inDialog = !0;
            this.dpDiv.addClass(this._dialogClass);
            this._showDatepicker(this._dialogInput[0]);
            if (t.blockUI) {
                t.blockUI(this.dpDiv)
            };
            t.data(this._dialogInput[0], i, l);
            return this
        },
        _destroyDatepicker: function(e) {
            var s, n = t(e),
                o = t.data(e, i);
            if (!n.hasClass(this.markerClassName)) {
                return
            };
            s = e.nodeName.toLowerCase();
            t.removeData(e, i);
            if (s === "input") {
                o.append.remove();
                o.trigger.remove();
                n.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)
            } else if (s === "div" || s === "span") {
                n.removeClass(this.markerClassName).empty()
            }
        },
        _enableDatepicker: function(e) {
            var s, n, o = t(e),
                a = t.data(e, i);
            if (!o.hasClass(this.markerClassName)) {
                return
            };
            s = e.nodeName.toLowerCase();
            if (s === "input") {
                e.disabled = !1;
                a.trigger.filter("button").each(function() {
                    this.disabled = !1
                }).end().filter("img").css({
                    opacity: "1.0",
                    cursor: ""
                })
            } else if (s === "div" || s === "span") {
                n = o.children("." + this._inlineClass);
                n.children().removeClass("ui-state-disabled");
                n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !1)
            };
            this._disabledInputs = t.map(this._disabledInputs, function(t) {
                return (t === e ? null : t)
            })
        },
        _disableDatepicker: function(e) {
            var s, n, o = t(e),
                a = t.data(e, i);
            if (!o.hasClass(this.markerClassName)) {
                return
            };
            s = e.nodeName.toLowerCase();
            if (s === "input") {
                e.disabled = !0;
                a.trigger.filter("button").each(function() {
                    this.disabled = !0
                }).end().filter("img").css({
                    opacity: "0.5",
                    cursor: "default"
                })
            } else if (s === "div" || s === "span") {
                n = o.children("." + this._inlineClass);
                n.children().addClass("ui-state-disabled");
                n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !0)
            };
            this._disabledInputs = t.map(this._disabledInputs, function(t) {
                return (t === e ? null : t)
            });
            this._disabledInputs[this._disabledInputs.length] = e
        },
        _isDisabledDatepicker: function(t) {
            if (!t) {
                return !1
            };
            for (var e = 0; e < this._disabledInputs.length; e++) {
                if (this._disabledInputs[e] === t) {
                    return !0
                }
            };
            return !1
        },
        _getInst: function(e) {
            try {
                return t.data(e, i)
            } catch (s) {
                throw "Missing instance data for this datepicker"
            }
        },
        _optionDatepicker: function(i, n, o) {
            var r, u, l, h, a = this._getInst(i);
            if (arguments.length === 2 && typeof n === "string") {
                return (n === "defaults" ? t.extend({}, t.datepicker._defaults) : (a ? (n === "all" ? t.extend({}, a.settings) : this._get(a, n)) : null))
            };
            r = n || {};
            if (typeof n === "string") {
                r = {};
                r[n] = o
            };
            if (a) {
                if (this._curInst === a) {
                    this._hideDatepicker()
                };
                u = this._getDateDatepicker(i, !0);
                l = this._getMinMaxDate(a, "min");
                h = this._getMinMaxDate(a, "max");
                s(a.settings, r);
                if (l !== null && r.dateFormat !== e && r.minDate === e) {
                    a.settings.minDate = this._formatDate(a, l)
                };
                if (h !== null && r.dateFormat !== e && r.maxDate === e) {
                    a.settings.maxDate = this._formatDate(a, h)
                };
                if ("disabled" in r) {
                    if (r.disabled) {
                        this._disableDatepicker(i)
                    } else {
                        this._enableDatepicker(i)
                    }
                };
                this._attachments(t(i), a);
                this._autoSize(a);
                this._setDate(a, u);
                this._updateAlternate(a);
                this._updateDatepicker(a)
            }
        },
        _changeDatepicker: function(t, e, i) {
            this._optionDatepicker(t, e, i)
        },
        _refreshDatepicker: function(t) {
            var e = this._getInst(t);
            if (e) {
                this._updateDatepicker(e)
            }
        },
        _setDateDatepicker: function(t, e) {
            var i = this._getInst(t);
            if (i) {
                this._setDate(i, e);
                this._updateDatepicker(i);
                this._updateAlternate(i)
            }
        },
        _getDateDatepicker: function(t, e) {
            var i = this._getInst(t);
            if (i && !i.inline) {
                this._setDateFromField(i, e)
            };
            return (i ? this._getDate(i) : null)
        },
        _doKeyDown: function(e) {
            var n, a, o, i = t.datepicker._getInst(e.target),
                s = !0,
                r = i.dpDiv.is(".ui-datepicker-rtl");
            i._keyEvent = !0;
            if (t.datepicker._datepickerShowing) {
                switch (e.keyCode) {
                    case 9:
                        t.datepicker._hideDatepicker();
                        s = !1;
                        break;
                    case 13:
                        o = t("td." + t.datepicker._dayOverClass + ":not(." + t.datepicker._currentClass + ")", i.dpDiv);
                        if (o[0]) {
                            t.datepicker._selectDay(e.target, i.selectedMonth, i.selectedYear, o[0])
                        };
                        n = t.datepicker._get(i, "onSelect");
                        if (n) {
                            a = t.datepicker._formatDate(i);
                            n.apply((i.input ? i.input[0] : null), [a, i])
                        } else {
                            t.datepicker._hideDatepicker()
                        };
                        return !1;
                    case 27:
                        t.datepicker._hideDatepicker();
                        break;
                    case 33:
                        t.datepicker._adjustDate(e.target, (e.ctrlKey ? -t.datepicker._get(i, "stepBigMonths") : -t.datepicker._get(i, "stepMonths")), "M");
                        break;
                    case 34:
                        t.datepicker._adjustDate(e.target, (e.ctrlKey ? +t.datepicker._get(i, "stepBigMonths") : +t.datepicker._get(i, "stepMonths")), "M");
                        break;
                    case 35:
                        if (e.ctrlKey || e.metaKey) {
                            t.datepicker._clearDate(e.target)
                        };
                        s = e.ctrlKey || e.metaKey;
                        break;
                    case 36:
                        if (e.ctrlKey || e.metaKey) {
                            t.datepicker._gotoToday(e.target)
                        };
                        s = e.ctrlKey || e.metaKey;
                        break;
                    case 37:
                        if (e.ctrlKey || e.metaKey) {
                            t.datepicker._adjustDate(e.target, (r ? +1 : -1), "D")
                        };
                        s = e.ctrlKey || e.metaKey;
                        if (e.originalEvent.altKey) {
                            t.datepicker._adjustDate(e.target, (e.ctrlKey ? -t.datepicker._get(i, "stepBigMonths") : -t.datepicker._get(i, "stepMonths")), "M")
                        };
                        break;
                    case 38:
                        if (e.ctrlKey || e.metaKey) {
                            t.datepicker._adjustDate(e.target, -7, "D")
                        };
                        s = e.ctrlKey || e.metaKey;
                        break;
                    case 39:
                        if (e.ctrlKey || e.metaKey) {
                            t.datepicker._adjustDate(e.target, (r ? -1 : +1), "D")
                        };
                        s = e.ctrlKey || e.metaKey;
                        if (e.originalEvent.altKey) {
                            t.datepicker._adjustDate(e.target, (e.ctrlKey ? +t.datepicker._get(i, "stepBigMonths") : +t.datepicker._get(i, "stepMonths")), "M")
                        };
                        break;
                    case 40:
                        if (e.ctrlKey || e.metaKey) {
                            t.datepicker._adjustDate(e.target, +7, "D")
                        };
                        s = e.ctrlKey || e.metaKey;
                        break;
                    default:
                        s = !1
                }
            } else if (e.keyCode === 36 && e.ctrlKey) {
                t.datepicker._showDatepicker(this)
            } else {
                s = !1
            };
            if (s) {
                e.preventDefault();
                e.stopPropagation()
            }
        },
        _doKeyPress: function(e) {
            var i, s, n = t.datepicker._getInst(e.target);
            if (t.datepicker._get(n, "constrainInput")) {
                i = t.datepicker._possibleChars(t.datepicker._get(n, "dateFormat"));
                s = String.fromCharCode(e.charCode == null ? e.keyCode : e.charCode);
                return e.ctrlKey || e.metaKey || (s < " " || !i || i.indexOf(s) > -1)
            }
        },
        _doKeyUp: function(e) {
            var n, i = t.datepicker._getInst(e.target);
            if (i.input.val() !== i.lastVal) {
                try {
                    n = t.datepicker.parseDate(t.datepicker._get(i, "dateFormat"), (i.input ? i.input.val() : null), t.datepicker._getFormatConfig(i));
                    if (n) {
                        t.datepicker._setDateFromField(i);
                        t.datepicker._updateAlternate(i);
                        t.datepicker._updateDatepicker(i)
                    }
                } catch (s) {}
            };
            return !0
        },
        _showDatepicker: function(e) {
            e = e.target || e;
            if (e.nodeName.toLowerCase() !== "input") {
                e = t("input", e.parentNode)[0]
            };
            if (t.datepicker._isDisabledDatepicker(e) || t.datepicker._lastInput === e) {
                return
            };
            var i, r, l, n, o, a, h;
            i = t.datepicker._getInst(e);
            if (t.datepicker._curInst && t.datepicker._curInst !== i) {
                t.datepicker._curInst.dpDiv.stop(!0, !0);
                if (i && t.datepicker._datepickerShowing) {
                    t.datepicker._hideDatepicker(t.datepicker._curInst.input[0])
                }
            };
            r = t.datepicker._get(i, "beforeShow");
            l = r ? r.apply(e, [e, i]) : {};
            if (l === !1) {
                return
            };
            s(i.settings, l);
            i.lastVal = null;
            t.datepicker._lastInput = e;
            t.datepicker._setDateFromField(i);
            if (t.datepicker._inDialog) {
                e.value = ""
            };
            if (!t.datepicker._pos) {
                t.datepicker._pos = t.datepicker._findPos(e);
                t.datepicker._pos[1] += e.offsetHeight
            };
            n = !1;
            t(e).parents().each(function() {
                n |= t(this).css("position") === "fixed";
                return !n
            });
            o = {
                left: t.datepicker._pos[0],
                top: t.datepicker._pos[1]
            };
            t.datepicker._pos = null;
            i.dpDiv.empty();
            i.dpDiv.css({
                position: "absolute",
                display: "block",
                top: "-1000px"
            });
            t.datepicker._updateDatepicker(i);
            o = t.datepicker._checkOffset(i, o, n);
            i.dpDiv.css({
                position: (t.datepicker._inDialog && t.blockUI ? "static" : (n ? "fixed" : "absolute")),
                display: "none",
                left: o.left + "px",
                top: o.top + "px"
            });
            if (!i.inline) {
                a = t.datepicker._get(i, "showAnim");
                h = t.datepicker._get(i, "duration");
                i.dpDiv.zIndex(t(e).zIndex() + 1);
                t.datepicker._datepickerShowing = !0;
                if (t.effects && t.effects.effect[a]) {
                    i.dpDiv.show(a, t.datepicker._get(i, "showOptions"), h)
                } else {
                    i.dpDiv[a || "show"](a ? h : null)
                };
                if (t.datepicker._shouldFocusInput(i)) {
                    i.input.focus()
                };
                t.datepicker._curInst = i
            }
        },
        _updateDatepicker: function(e) {
            this.maxRows = 4;
            n = e;
            e.dpDiv.empty().append(this._generateHTML(e));
            this._attachHandlers(e);
            e.dpDiv.find("." + this._dayOverClass + " a").mouseover();
            var i, s = this._getNumberOfMonths(e),
                o = s[1],
                a = 17;
            e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");
            if (o > 1) {
                e.dpDiv.addClass("ui-datepicker-multi-" + o).css("width", (a * o) + "em")
            };
            e.dpDiv[(s[0] !== 1 || s[1] !== 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi");
            e.dpDiv[(this._get(e, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl");
            if (e === t.datepicker._curInst && t.datepicker._datepickerShowing && t.datepicker._shouldFocusInput(e)) {
                e.input.focus()
            };
            if (e.yearshtml) {
                i = e.yearshtml;
                setTimeout(function() {
                    if (i === e.yearshtml && e.yearshtml) {
                        e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml)
                    };
                    i = e.yearshtml = null
                }, 0)
            }
        },
        _shouldFocusInput: function(t) {
            return t.input && t.input.is(":visible") && !t.input.is(":disabled") && !t.input.is(":focus")
        },
        _checkOffset: function(e, i, s) {
            var n = e.dpDiv.outerWidth(),
                o = e.dpDiv.outerHeight(),
                h = e.input ? e.input.outerWidth() : 0,
                r = e.input ? e.input.outerHeight() : 0,
                a = document.documentElement.clientWidth + (s ? 0 : t(document).scrollLeft()),
                l = document.documentElement.clientHeight + (s ? 0 : t(document).scrollTop());
            i.left -= (this._get(e, "isRTL") ? (n - h) : 0);
            i.left -= (s && i.left === e.input.offset().left) ? t(document).scrollLeft() : 0;
            i.top -= (s && i.top === (e.input.offset().top + r)) ? t(document).scrollTop() : 0;
            i.left -= Math.min(i.left, (i.left + n > a && a > n) ? Math.abs(i.left + n - a) : 0);
            i.top -= Math.min(i.top, (i.top + o > l && l > o) ? Math.abs(o + r) : 0);
            return i
        },
        _findPos: function(e) {
            var i, s = this._getInst(e),
                n = this._get(s, "isRTL");
            while (e && (e.type === "hidden" || e.nodeType !== 1 || t.expr.filters.hidden(e))) {
                e = e[n ? "previousSibling" : "nextSibling"]
            };
            i = t(e).offset();
            return [i.left, i.top]
        },
        _hideDatepicker: function(e) {
            var n, a, o, r, s = this._curInst;
            if (!s || (e && s !== t.data(e, i))) {
                return
            };
            if (this._datepickerShowing) {
                n = this._get(s, "showAnim");
                a = this._get(s, "duration");
                o = function() {
                    t.datepicker._tidyDialog(s)
                };
                if (t.effects && (t.effects.effect[n] || t.effects[n])) {
                    s.dpDiv.hide(n, t.datepicker._get(s, "showOptions"), a, o)
                } else {
                    s.dpDiv[(n === "slideDown" ? "slideUp" : (n === "fadeIn" ? "fadeOut" : "hide"))]((n ? a : null), o)
                };
                if (!n) {
                    o()
                };
                this._datepickerShowing = !1;
                r = this._get(s, "onClose");
                if (r) {
                    r.apply((s.input ? s.input[0] : null), [(s.input ? s.input.val() : ""), s])
                };
                this._lastInput = null;
                if (this._inDialog) {
                    this._dialogInput.css({
                        position: "absolute",
                        left: "0",
                        top: "-100px"
                    });
                    if (t.blockUI) {
                        t.unblockUI();
                        t("body").append(this.dpDiv)
                    }
                };
                this._inDialog = !1
            }
        },
        _tidyDialog: function(t) {
            t.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")
        },
        _checkExternalClick: function(e) {
            if (!t.datepicker._curInst) {
                return
            };
            var i = t(e.target),
                s = t.datepicker._getInst(i[0]);
            if (((i[0].id !== t.datepicker._mainDivId && i.parents("#" + t.datepicker._mainDivId).length === 0 && !i.hasClass(t.datepicker.markerClassName) && !i.closest("." + t.datepicker._triggerClass).length && t.datepicker._datepickerShowing && !(t.datepicker._inDialog && t.blockUI))) || (i.hasClass(t.datepicker.markerClassName) && t.datepicker._curInst !== s)) {
                t.datepicker._hideDatepicker()
            }
        },
        _adjustDate: function(e, i, s) {
            var o = t(e),
                n = this._getInst(o[0]);
            if (this._isDisabledDatepicker(o[0])) {
                return
            };
            this._adjustInstDate(n, i + (s === "M" ? this._get(n, "showCurrentAtPos") : 0), s);
            this._updateDatepicker(n)
        },
        _gotoToday: function(e) {
            var s, n = t(e),
                i = this._getInst(n[0]);
            if (this._get(i, "gotoCurrent") && i.currentDay) {
                i.selectedDay = i.currentDay;
                i.drawMonth = i.selectedMonth = i.currentMonth;
                i.drawYear = i.selectedYear = i.currentYear
            } else {
                s = new Date();
                i.selectedDay = s.getDate();
                i.drawMonth = i.selectedMonth = s.getMonth();
                i.drawYear = i.selectedYear = s.getFullYear()
            };
            this._notifyChange(i);
            this._adjustDate(n)
        },
        _selectMonthYear: function(e, i, s) {
            var o = t(e),
                n = this._getInst(o[0]);
            n["selected" + (s === "M" ? "Month" : "Year")] = n["draw" + (s === "M" ? "Month" : "Year")] = parseInt(i.options[i.selectedIndex].value, 10);
            this._notifyChange(n);
            this._adjustDate(o)
        },
        _selectDay: function(e, i, s, n) {
            var o, a = t(e);
            if (t(n).hasClass(this._unselectableClass) || this._isDisabledDatepicker(a[0])) {
                return
            };
            o = this._getInst(a[0]);
            o.selectedDay = o.currentDay = t("a", n).html();
            o.selectedMonth = o.currentMonth = i;
            o.selectedYear = o.currentYear = s;
            this._selectDate(e, this._formatDate(o, o.currentDay, o.currentMonth, o.currentYear))
        },
        _clearDate: function(e) {
            var i = t(e);
            this._selectDate(i, "")
        },
        _selectDate: function(e, i) {
            var n, o = t(e),
                s = this._getInst(o[0]);
            i = (i != null ? i : this._formatDate(s));
            if (s.input) {
                s.input.val(i)
            };
            this._updateAlternate(s);
            n = this._get(s, "onSelect");
            if (n) {
                n.apply((s.input ? s.input[0] : null), [i, s])
            } else if (s.input) {
                s.input.trigger("change")
            };
            if (s.inline) {
                this._updateDatepicker(s)
            } else {
                this._hideDatepicker();
                this._lastInput = s.input[0];
                if (typeof(s.input[0]) !== "object") {
                    s.input.focus()
                };
                this._lastInput = null
            }
        },
        _updateAlternate: function(e) {
            var i, s, n, o = this._get(e, "altField");
            if (o) {
                i = this._get(e, "altFormat") || this._get(e, "dateFormat");
                s = this._getDate(e);
                n = this.formatDate(i, s, this._getFormatConfig(e));
                t(o).each(function() {
                    t(this).val(n)
                })
            }
        },
        noWeekends: function(t) {
            var e = t.getDay();
            return [(e > 0 && e < 6), ""]
        },
        iso8601Week: function(t) {
            var i, e = new Date(t.getTime());
            e.setDate(e.getDate() + 4 - (e.getDay() || 7));
            i = e.getTime();
            e.setMonth(0);
            e.setDate(1);
            return Math.floor(Math.round((i - e) / 86400000) / 7) + 1
        },
        parseDate: function(e, i, s) {
            if (e == null || i == null) {
                throw "Invalid arguments"
            };
            i = (typeof i === "object" ? i.toString() : i + "");
            if (i === "") {
                return null
            };
            var r, f, d, o = 0,
                p = (s ? s.shortYearCutoff : null) || this._defaults.shortYearCutoff,
                y = (typeof p !== "string" ? p : new Date().getFullYear() % 100 + parseInt(p, 10)),
                w = (s ? s.dayNamesShort : null) || this._defaults.dayNamesShort,
                k = (s ? s.dayNames : null) || this._defaults.dayNames,
                x = (s ? s.monthNamesShort : null) || this._defaults.monthNamesShort,
                D = (s ? s.monthNames : null) || this._defaults.monthNames,
                a = -1,
                l = -1,
                h = -1,
                g = -1,
                m = !1,
                n, c = function(t) {
                    var i = (r + 1 < e.length && e.charAt(r + 1) === t);
                    if (i) {
                        r++
                    };
                    return i
                },
                u = function(t) {
                    var s = c(t),
                        n = (t === "@" ? 14 : (t === "!" ? 20 : (t === "y" && s ? 4 : (t === "o" ? 3 : 2)))),
                        a = new RegExp("^\\d{1," + n + "}"),
                        e = i.substring(o).match(a);
                    if (!e) {
                        throw "Missing number at position " + o
                    };
                    o += e[0].length;
                    return parseInt(e[0], 10)
                },
                b = function(e, s, n) {
                    var a = -1,
                        r = t.map(c(e) ? n : s, function(t, e) {
                            return [
                                [e, t]
                            ]
                        }).sort(function(t, e) {
                            return -(t[1].length - e[1].length)
                        });
                    t.each(r, function(t, e) {
                        var s = e[1];
                        if (i.substr(o, s.length).toLowerCase() === s.toLowerCase()) {
                            a = e[0];
                            o += s.length;
                            return !1
                        }
                    });
                    if (a !== -1) {
                        return a + 1
                    } else {
                        throw "Unknown name at position " + o
                    }
                },
                v = function() {
                    if (i.charAt(o) !== e.charAt(r)) {
                        throw "Unexpected literal at position " + o
                    };
                    o++
                };
            for (r = 0; r < e.length; r++) {
                if (m) {
                    if (e.charAt(r) === "'" && !c("'")) {
                        m = !1
                    } else {
                        v()
                    }
                } else {
                    switch (e.charAt(r)) {
                        case "d":
                            h = u("d");
                            break;
                        case "D":
                            b("D", w, k);
                            break;
                        case "o":
                            g = u("o");
                            break;
                        case "m":
                            l = u("m");
                            break;
                        case "M":
                            l = b("M", x, D);
                            break;
                        case "y":
                            a = u("y");
                            break;
                        case "@":
                            n = new Date(u("@"));
                            a = n.getFullYear();
                            l = n.getMonth() + 1;
                            h = n.getDate();
                            break;
                        case "!":
                            n = new Date((u("!") - this._ticksTo1970) / 10000);
                            a = n.getFullYear();
                            l = n.getMonth() + 1;
                            h = n.getDate();
                            break;
                        case "'":
                            if (c("'")) {
                                v()
                            } else {
                                m = !0
                            };
                            break;
                        default:
                            v()
                    }
                }
            };
            if (o < i.length) {
                d = i.substr(o);
                if (!/^\s+/.test(d)) {
                    throw "Extra/unparsed characters found in date: " + d
                }
            };
            if (a === -1) {
                a = new Date().getFullYear()
            } else if (a < 100) {
                a += new Date().getFullYear() - new Date().getFullYear() % 100 + (a <= y ? 0 : -100)
            };
            if (g > -1) {
                l = 1;
                h = g;
                do {
                    f = this._getDaysInMonth(a, l - 1);
                    if (h <= f) {
                        break
                    };
                    l++;
                    h -= f
                }
                while (!0);
            };
            n = this._daylightSavingAdjust(new Date(a, l - 1, h));
            if (n.getFullYear() !== a || n.getMonth() + 1 !== l || n.getDate() !== h) {
                throw "Invalid date"
            };
            return n
        },
        ATOM: "yy-mm-dd",
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y",
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd",
        _ticksTo1970: (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000),
        formatDate: function(t, e, i) {
            if (!e) {
                return ""
            };
            var n, h = (i ? i.dayNamesShort : null) || this._defaults.dayNamesShort,
                u = (i ? i.dayNames : null) || this._defaults.dayNames,
                c = (i ? i.monthNamesShort : null) || this._defaults.monthNamesShort,
                f = (i ? i.monthNames : null) || this._defaults.monthNames,
                o = function(e) {
                    var i = (n + 1 < t.length && t.charAt(n + 1) === e);
                    if (i) {
                        n++
                    };
                    return i
                },
                a = function(t, e, i) {
                    var s = "" + e;
                    if (o(t)) {
                        while (s.length < i) {
                            s = "0" + s
                        }
                    };
                    return s
                },
                l = function(t, e, i, s) {
                    return (o(t) ? s[e] : i[e])
                },
                s = "",
                r = !1;
            if (e) {
                for (n = 0; n < t.length; n++) {
                    if (r) {
                        if (t.charAt(n) === "'" && !o("'")) {
                            r = !1
                        } else {
                            s += t.charAt(n)
                        }
                    } else {
                        switch (t.charAt(n)) {
                            case "d":
                                s += a("d", e.getDate(), 2);
                                break;
                            case "D":
                                s += l("D", e.getDay(), h, u);
                                break;
                            case "o":
                                s += a("o", Math.round((new Date(e.getFullYear(), e.getMonth(), e.getDate()).getTime() - new Date(e.getFullYear(), 0, 0).getTime()) / 86400000), 3);
                                break;
                            case "m":
                                s += a("m", e.getMonth() + 1, 2);
                                break;
                            case "M":
                                s += l("M", e.getMonth(), c, f);
                                break;
                            case "y":
                                s += (o("y") ? e.getFullYear() : (e.getYear() % 100 < 10 ? "0" : "") + e.getYear() % 100);
                                break;
                            case "@":
                                s += e.getTime();
                                break;
                            case "!":
                                s += e.getTime() * 10000 + this._ticksTo1970;
                                break;
                            case "'":
                                if (o("'")) {
                                    s += "'"
                                } else {
                                    r = !0
                                };
                                break;
                            default:
                                s += t.charAt(n)
                        }
                    }
                }
            };
            return s
        },
        _possibleChars: function(t) {
            var e, i = "",
                s = !1,
                n = function(i) {
                    var s = (e + 1 < t.length && t.charAt(e + 1) === i);
                    if (s) {
                        e++
                    };
                    return s
                };
            for (e = 0; e < t.length; e++) {
                if (s) {
                    if (t.charAt(e) === "'" && !n("'")) {
                        s = !1
                    } else {
                        i += t.charAt(e)
                    }
                } else {
                    switch (t.charAt(e)) {
                        case "d":
                        case "m":
                        case "y":
                        case "@":
                            i += "0123456789";
                            break;
                        case "D":
                        case "M":
                            return null;
                        case "'":
                            if (n("'")) {
                                i += "'"
                            } else {
                                s = !0
                            };
                            break;
                        default:
                            i += t.charAt(e)
                    }
                }
            };
            return i
        },
        _get: function(t, i) {
            return t.settings[i] !== e ? t.settings[i] : this._defaults[i]
        },
        _setDateFromField: function(t, e) {
            if (t.input.val() === t.lastVal) {
                return
            };
            var a = this._get(t, "dateFormat"),
                n = t.lastVal = t.input ? t.input.val() : null,
                o = this._getDefaultDate(t),
                i = o,
                r = this._getFormatConfig(t);
            try {
                i = this.parseDate(a, n, r) || o
            } catch (s) {
                n = (e ? "" : n)
            };
            t.selectedDay = i.getDate();
            t.drawMonth = t.selectedMonth = i.getMonth();
            t.drawYear = t.selectedYear = i.getFullYear();
            t.currentDay = (n ? i.getDate() : 0);
            t.currentMonth = (n ? i.getMonth() : 0);
            t.currentYear = (n ? i.getFullYear() : 0);
            this._adjustInstDate(t)
        },
        _getDefaultDate: function(t) {
            return this._restrictMinMax(t, this._determineDate(t, this._get(t, "defaultDate"), new Date()))
        },
        _determineDate: function(e, i, s) {
            var o = function(t) {
                    var e = new Date();
                    e.setDate(e.getDate() + t);
                    return e
                },
                a = function(i) {
                    try {
                        return t.datepicker.parseDate(t.datepicker._get(e, "dateFormat"), i, t.datepicker._getFormatConfig(e))
                    } catch (o) {};
                    var l = (i.toLowerCase().match(/^c/) ? t.datepicker._getDate(e) : null) || new Date(),
                        a = l.getFullYear(),
                        r = l.getMonth(),
                        s = l.getDate(),
                        h = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
                        n = h.exec(i);
                    while (n) {
                        switch (n[2] || "d") {
                            case "d":
                            case "D":
                                s += parseInt(n[1], 10);
                                break;
                            case "w":
                            case "W":
                                s += parseInt(n[1], 10) * 7;
                                break;
                            case "m":
                            case "M":
                                r += parseInt(n[1], 10);
                                s = Math.min(s, t.datepicker._getDaysInMonth(a, r));
                                break;
                            case "y":
                            case "Y":
                                a += parseInt(n[1], 10);
                                s = Math.min(s, t.datepicker._getDaysInMonth(a, r));
                                break
                        };
                        n = h.exec(i)
                    };
                    return new Date(a, r, s)
                },
                n = (i == null || i === "" ? s : (typeof i === "string" ? a(i) : (typeof i === "number" ? (isNaN(i) ? s : o(i)) : new Date(i.getTime()))));
            n = (n && n.toString() === "Invalid Date" ? s : n);
            if (n) {
                n.setHours(0);
                n.setMinutes(0);
                n.setSeconds(0);
                n.setMilliseconds(0)
            };
            return this._daylightSavingAdjust(n)
        },
        _daylightSavingAdjust: function(t) {
            if (!t) {
                return null
            };
            t.setHours(t.getHours() > 12 ? t.getHours() + 2 : 0);
            return t
        },
        _setDate: function(t, e, i) {
            var n = !e,
                o = t.selectedMonth,
                a = t.selectedYear,
                s = this._restrictMinMax(t, this._determineDate(t, e, new Date()));
            t.selectedDay = t.currentDay = s.getDate();
            t.drawMonth = t.selectedMonth = t.currentMonth = s.getMonth();
            t.drawYear = t.selectedYear = t.currentYear = s.getFullYear();
            if ((o !== t.selectedMonth || a !== t.selectedYear) && !i) {
                this._notifyChange(t)
            };
            this._adjustInstDate(t);
            if (t.input) {
                t.input.val(n ? "" : this._formatDate(t))
            }
        },
        _getDate: function(t) {
            var e = (!t.currentYear || (t.input && t.input.val() === "") ? null : this._daylightSavingAdjust(new Date(t.currentYear, t.currentMonth, t.currentDay)));
            return e
        },
        _attachHandlers: function(e) {
            var s = this._get(e, "stepMonths"),
                i = "#" + e.id.replace(/\\\\/g, "\\");
            e.dpDiv.find("[data-handler]").map(function() {
                var e = {
                    prev: function() {
                        t.datepicker._adjustDate(i, -s, "M")
                    },
                    next: function() {
                        t.datepicker._adjustDate(i, +s, "M")
                    },
                    hide: function() {
                        t.datepicker._hideDatepicker()
                    },
                    today: function() {
                        t.datepicker._gotoToday(i)
                    },
                    selectDay: function() {
                        t.datepicker._selectDay(i, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this);
                        return !1
                    },
                    selectMonth: function() {
                        t.datepicker._selectMonthYear(i, this, "M");
                        return !1
                    },
                    selectYear: function() {
                        t.datepicker._selectMonthYear(i, this, "Y");
                        return !1
                    }
                };
                t(this).bind(this.getAttribute("data-event"), e[this.getAttribute("data-handler")])
            })
        },
        _generateHTML: function(t) {
            var v, l, C, h, I, b, P, T, q, u, M, V, Q, X, G, S, w, J, z, k, o, p, A, g, H, c, n, W, E, N, O, x, F, i, R, L, y, f, D, j = new Date(),
                Y = this._daylightSavingAdjust(new Date(j.getFullYear(), j.getMonth(), j.getDate())),
                a = this._get(t, "isRTL"),
                et = this._get(t, "showButtonPanel"),
                Z = this._get(t, "hideIfNoPrevNext"),
                B = this._get(t, "navigationAsDateFormat"),
                r = this._getNumberOfMonths(t),
                it = this._get(t, "showCurrentAtPos"),
                tt = this._get(t, "stepMonths"),
                K = (r[0] !== 1 || r[1] !== 1),
                U = this._daylightSavingAdjust((!t.currentDay ? new Date(9999, 9, 9) : new Date(t.currentYear, t.currentMonth, t.currentDay))),
                m = this._getMinMaxDate(t, "min"),
                d = this._getMinMaxDate(t, "max"),
                e = t.drawMonth - it,
                s = t.drawYear;
            if (e < 0) {
                e += 12;
                s--
            };
            if (d) {
                v = this._daylightSavingAdjust(new Date(d.getFullYear(), d.getMonth() - (r[0] * r[1]) + 1, d.getDate()));
                v = (m && v < m ? m : v);
                while (this._daylightSavingAdjust(new Date(s, e, 1)) > v) {
                    e--;
                    if (e < 0) {
                        e = 11;
                        s--
                    }
                }
            };
            t.drawMonth = e;
            t.drawYear = s;
            l = this._get(t, "prevText");
            l = (!B ? l : this.formatDate(l, this._daylightSavingAdjust(new Date(s, e - tt, 1)), this._getFormatConfig(t)));
            C = (this._canAdjustMonth(t, -1, s, e) ? "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='" + l + "'><span class='ui-icon ui-icon-circle-triangle-" + (a ? "e" : "w") + "'>" + l + "</span></a>" : (Z ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" + l + "'><span class='ui-icon ui-icon-circle-triangle-" + (a ? "e" : "w") + "'>" + l + "</span></a>"));
            h = this._get(t, "nextText");
            h = (!B ? h : this.formatDate(h, this._daylightSavingAdjust(new Date(s, e + tt, 1)), this._getFormatConfig(t)));
            I = (this._canAdjustMonth(t, +1, s, e) ? "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='" + h + "'><span class='ui-icon ui-icon-circle-triangle-" + (a ? "w" : "e") + "'>" + h + "</span></a>" : (Z ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" + h + "'><span class='ui-icon ui-icon-circle-triangle-" + (a ? "w" : "e") + "'>" + h + "</span></a>"));
            b = this._get(t, "currentText");
            P = (this._get(t, "gotoCurrent") && t.currentDay ? U : Y);
            b = (!B ? b : this.formatDate(b, P, this._getFormatConfig(t)));
            T = (!t.inline ? "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" + this._get(t, "closeText") + "</button>" : "");
            q = (et) ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + (a ? T : "") + (this._isInRange(t, P) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>" + b + "</button>" : "") + (a ? "" : T) + "</div>" : "";
            u = parseInt(this._get(t, "firstDay"), 10);
            u = (isNaN(u) ? 0 : u);
            M = this._get(t, "showWeek");
            V = this._get(t, "dayNames");
            Q = this._get(t, "dayNamesMin");
            X = this._get(t, "monthNames");
            G = this._get(t, "monthNamesShort");
            S = this._get(t, "beforeShowDay");
            w = this._get(t, "showOtherMonths");
            J = this._get(t, "selectOtherMonths");
            z = this._getDefaultDate(t);
            k = "";
            o;
            for (p = 0; p < r[0]; p++) {
                A = "";
                this.maxRows = 4;
                for (g = 0; g < r[1]; g++) {
                    H = this._daylightSavingAdjust(new Date(s, e, t.selectedDay));
                    c = " ui-corner-all";
                    n = "";
                    if (K) {
                        n += "<div class='ui-datepicker-group";
                        if (r[1] > 1) {
                            switch (g) {
                                case 0:
                                    n += " ui-datepicker-group-first";
                                    c = " ui-corner-" + (a ? "right" : "left");
                                    break;
                                case r[1] - 1:
                                    n += " ui-datepicker-group-last";
                                    c = " ui-corner-" + (a ? "left" : "right");
                                    break;
                                default:
                                    n += " ui-datepicker-group-middle";
                                    c = "";
                                    break
                            }
                        };
                        n += "'>"
                    };
                    n += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + c + "'>" + (/all|left/.test(c) && p === 0 ? (a ? I : C) : "") + (/all|right/.test(c) && p === 0 ? (a ? C : I) : "") + this._generateMonthYearHeader(t, e, s, m, d, p > 0 || g > 0, X, G) + "</div><table class='ui-datepicker-calendar'><thead><tr>";
                    W = (M ? "<th class='ui-datepicker-week-col'>" + this._get(t, "weekHeader") + "</th>" : "");
                    for (o = 0; o < 7; o++) {
                        E = (o + u) % 7;
                        W += "<th" + ((o + u + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + "><span title='" + V[E] + "'>" + Q[E] + "</span></th>"
                    };
                    n += W + "</tr></thead><tbody>";
                    N = this._getDaysInMonth(s, e);
                    if (s === t.selectedYear && e === t.selectedMonth) {
                        t.selectedDay = Math.min(t.selectedDay, N)
                    };
                    O = (this._getFirstDayOfMonth(s, e) - u + 7) % 7;
                    x = Math.ceil((O + N) / 7);
                    F = (K ? this.maxRows > x ? this.maxRows : x : x);
                    this.maxRows = F;
                    i = this._daylightSavingAdjust(new Date(s, e, 1 - O));
                    for (R = 0; R < F; R++) {
                        n += "<tr>";
                        L = (!M ? "" : "<td class='ui-datepicker-week-col'>" + this._get(t, "calculateWeek")(i) + "</td>");
                        for (o = 0; o < 7; o++) {
                            y = (S ? S.apply((t.input ? t.input[0] : null), [i]) : [!0, ""]);
                            f = (i.getMonth() !== e);
                            D = (f && !J) || !y[0] || (m && i < m) || (d && i > d);
                            L += "<td class='" + ((o + u + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (f ? " ui-datepicker-other-month" : "") + ((i.getTime() === H.getTime() && e === t.selectedMonth && t._keyEvent) || (z.getTime() === i.getTime() && z.getTime() === H.getTime()) ? " " + this._dayOverClass : "") + (D ? " " + this._unselectableClass + " ui-state-disabled" : "") + (f && !w ? "" : " " + y[1] + (i.getTime() === U.getTime() ? " " + this._currentClass : "") + (i.getTime() === Y.getTime() ? " ui-datepicker-today" : "")) + "'" + ((!f || w) && y[2] ? " title='" + y[2].replace(/'/g, "&#39;") + "'" : "") + (D ? "" : " data-handler='selectDay' data-event='click' data-month='" + i.getMonth() + "' data-year='" + i.getFullYear() + "'") + ">" + (f && !w ? "&#xa0;" : (D ? "<span class='ui-state-default'>" + i.getDate() + "</span>" : "<a class='ui-state-default" + (i.getTime() === Y.getTime() ? " ui-state-highlight" : "") + (i.getTime() === U.getTime() ? " ui-state-active" : "") + (f ? " ui-priority-secondary" : "") + "' href='#'>" + i.getDate() + "</a>")) + "</td>";
                            i.setDate(i.getDate() + 1);
                            i = this._daylightSavingAdjust(i)
                        };
                        n += L + "</tr>"
                    };
                    e++;
                    if (e > 11) {
                        e = 0;
                        s++
                    };
                    n += "</tbody></table>" + (K ? "</div>" + ((r[0] > 0 && g === r[1] - 1) ? "<div class='ui-datepicker-row-break'></div>" : "") : "");
                    A += n
                };
                k += A
            };
            k += q;
            t._keyEvent = !1;
            return k
        },
        _generateMonthYearHeader: function(t, e, i, s, o, u, y, w) {
            var m, v, a, c, f, d, n, h, p = this._get(t, "changeMonth"),
                g = this._get(t, "changeYear"),
                b = this._get(t, "showMonthAfterYear"),
                r = "<div class='ui-datepicker-title'>",
                l = "";
            if (u || !p) {
                l += "<span class='ui-datepicker-month'>" + y[e] + "</span>"
            } else {
                m = (s && s.getFullYear() === i);
                v = (o && o.getFullYear() === i);
                l += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>";
                for (a = 0; a < 12; a++) {
                    if ((!m || a >= s.getMonth()) && (!v || a <= o.getMonth())) {
                        l += "<option value='" + a + "'" + (a === e ? " selected='selected'" : "") + ">" + w[a] + "</option>"
                    }
                };
                l += "</select>"
            };
            if (!b) {
                r += l + (u || !(p && g) ? "&#xa0;" : "")
            };
            if (!t.yearshtml) {
                t.yearshtml = "";
                if (u || !g) {
                    r += "<span class='ui-datepicker-year'>" + i + "</span>"
                } else {
                    c = this._get(t, "yearRange").split(":");
                    f = new Date().getFullYear();
                    d = function(t) {
                        var e = (t.match(/c[+\-].*/) ? i + parseInt(t.substring(1), 10) : (t.match(/[+\-].*/) ? f + parseInt(t, 10) : parseInt(t, 10)));
                        return (isNaN(e) ? f : e)
                    };
                    n = d(c[0]);
                    h = Math.max(n, d(c[1] || ""));
                    n = (s ? Math.max(n, s.getFullYear()) : n);
                    h = (o ? Math.min(h, o.getFullYear()) : h);
                    t.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";
                    for (; n <= h; n++) {
                        t.yearshtml += "<option value='" + n + "'" + (n === i ? " selected='selected'" : "") + ">" + n + "</option>"
                    };
                    t.yearshtml += "</select>";
                    r += t.yearshtml;
                    t.yearshtml = null
                }
            };
            r += this._get(t, "yearSuffix");
            if (b) {
                r += (u || !(p && g) ? "&#xa0;" : "") + l
            };
            r += "</div>";
            return r
        },
        _adjustInstDate: function(t, e, i) {
            var n = t.drawYear + (i === "Y" ? e : 0),
                o = t.drawMonth + (i === "M" ? e : 0),
                a = Math.min(t.selectedDay, this._getDaysInMonth(n, o)) + (i === "D" ? e : 0),
                s = this._restrictMinMax(t, this._daylightSavingAdjust(new Date(n, o, a)));
            t.selectedDay = s.getDate();
            t.drawMonth = t.selectedMonth = s.getMonth();
            t.drawYear = t.selectedYear = s.getFullYear();
            if (i === "M" || i === "Y") {
                this._notifyChange(t)
            }
        },
        _restrictMinMax: function(t, e) {
            var i = this._getMinMaxDate(t, "min"),
                s = this._getMinMaxDate(t, "max"),
                n = (i && e < i ? i : e);
            return (s && n > s ? s : n)
        },
        _notifyChange: function(t) {
            var e = this._get(t, "onChangeMonthYear");
            if (e) {
                e.apply((t.input ? t.input[0] : null), [t.selectedYear, t.selectedMonth + 1, t])
            }
        },
        _getNumberOfMonths: function(t) {
            var e = this._get(t, "numberOfMonths");
            return (e == null ? [1, 1] : (typeof e === "number" ? [1, e] : e))
        },
        _getMinMaxDate: function(t, e) {
            return this._determineDate(t, this._get(t, e + "Date"), null)
        },
        _getDaysInMonth: function(t, e) {
            return 32 - this._daylightSavingAdjust(new Date(t, e, 32)).getDate()
        },
        _getFirstDayOfMonth: function(t, e) {
            return new Date(t, e, 1).getDay()
        },
        _canAdjustMonth: function(t, e, i, s) {
            var o = this._getNumberOfMonths(t),
                n = this._daylightSavingAdjust(new Date(i, s + (e < 0 ? e : o[0] * o[1]), 1));
            if (e < 0) {
                n.setDate(this._getDaysInMonth(n.getFullYear(), n.getMonth()))
            };
            return this._isInRange(t, n)
        },
        _isInRange: function(t, e) {
            var i, o, a = this._getMinMaxDate(t, "min"),
                r = this._getMinMaxDate(t, "max"),
                s = null,
                n = null,
                l = this._get(t, "yearRange");
            if (l) {
                i = l.split(":");
                o = new Date().getFullYear();
                s = parseInt(i[0], 10);
                n = parseInt(i[1], 10);
                if (i[0].match(/[+\-].*/)) {
                    s += o
                };
                if (i[1].match(/[+\-].*/)) {
                    n += o
                }
            };
            return ((!a || e.getTime() >= a.getTime()) && (!r || e.getTime() <= r.getTime()) && (!s || e.getFullYear() >= s) && (!n || e.getFullYear() <= n))
        },
        _getFormatConfig: function(t) {
            var e = this._get(t, "shortYearCutoff");
            e = (typeof e !== "string" ? e : new Date().getFullYear() % 100 + parseInt(e, 10));
            return {
                shortYearCutoff: e,
                dayNamesShort: this._get(t, "dayNamesShort"),
                dayNames: this._get(t, "dayNames"),
                monthNamesShort: this._get(t, "monthNamesShort"),
                monthNames: this._get(t, "monthNames")
            }
        },
        _formatDate: function(t, e, i, s) {
            if (!e) {
                t.currentDay = t.selectedDay;
                t.currentMonth = t.selectedMonth;
                t.currentYear = t.selectedYear
            };
            var n = (e ? (typeof e === "object" ? e : this._daylightSavingAdjust(new Date(s, i, e))) : this._daylightSavingAdjust(new Date(t.currentYear, t.currentMonth, t.currentDay)));
            return this.formatDate(this._get(t, "dateFormat"), n, this._getFormatConfig(t))
        }
    });

    function a(e) {
        var i = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return e.delegate(i, "mouseout", function() {
            t(this).removeClass("ui-state-hover");
            if (this.className.indexOf("ui-datepicker-prev") !== -1) {
                t(this).removeClass("ui-datepicker-prev-hover")
            };
            if (this.className.indexOf("ui-datepicker-next") !== -1) {
                t(this).removeClass("ui-datepicker-next-hover")
            }
        }).delegate(i, "mouseover", function() {
            if (!t.datepicker._isDisabledDatepicker(n.inline ? e.parent()[0] : n.input[0])) {
                t(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
                t(this).addClass("ui-state-hover");
                if (this.className.indexOf("ui-datepicker-prev") !== -1) {
                    t(this).addClass("ui-datepicker-prev-hover")
                };
                if (this.className.indexOf("ui-datepicker-next") !== -1) {
                    t(this).addClass("ui-datepicker-next-hover")
                }
            }
        })
    };

    function s(e, i) {
        t.extend(e, i);
        for (var s in i) {
            if (i[s] == null) {
                e[s] = i[s]
            }
        };
        return e
    };
    t.fn.datepicker = function(e) {
        if (!this.length) {
            return this
        };
        if (!t.datepicker.initialized) {
            t(document).mousedown(t.datepicker._checkExternalClick);
            t.datepicker.initialized = !0
        };
        if (t("#" + t.datepicker._mainDivId).length === 0) {
            t("body").append(t.datepicker.dpDiv)
        };
        var i = Array.prototype.slice.call(arguments, 1);
        if (typeof e === "string" && (e === "isDisabled" || e === "getDate" || e === "widget")) {
            return t.datepicker["_" + e + "Datepicker"].apply(t.datepicker, [this[0]].concat(i))
        };
        if (e === "option" && arguments.length === 2 && typeof arguments[1] === "string") {
            return t.datepicker["_" + e + "Datepicker"].apply(t.datepicker, [this[0]].concat(i))
        };
        return this.each(function() {
            typeof e === "string" ? t.datepicker["_" + e + "Datepicker"].apply(t.datepicker, [this].concat(i)) : t.datepicker._attachDatepicker(this, e)
        })
    };
    t.datepicker = new o();
    t.datepicker.initialized = !1;
    t.datepicker.uuid = new Date().getTime();
    t.datepicker.version = "1.10.3"
})(jQuery);
(function(t, e) {
    var i = {
            buttons: !0,
            height: !0,
            maxHeight: !0,
            maxWidth: !0,
            minHeight: !0,
            minWidth: !0,
            width: !0
        },
        s = {
            maxHeight: !0,
            maxWidth: !0,
            minHeight: !0,
            minWidth: !0
        };
    t.widget("ui.dialog", {
        version: "1.10.3",
        options: {
            appendTo: "body",
            autoOpen: !0,
            buttons: [],
            closeOnEscape: !0,
            closeText: "close",
            dialogClass: "",
            draggable: !0,
            hide: null,
            height: "auto",
            maxHeight: null,
            maxWidth: null,
            minHeight: 150,
            minWidth: 150,
            modal: !1,
            position: {
                my: "center",
                at: "center",
                of: window,
                collision: "fit",
                using: function(e) {
                    var i = t(this).css(e).offset().top;
                    if (i < 0) {
                        t(this).css("top", e.top - i)
                    }
                }
            },
            resizable: !0,
            show: null,
            title: null,
            width: 300,
            beforeClose: null,
            close: null,
            drag: null,
            dragStart: null,
            dragStop: null,
            focus: null,
            open: null,
            resize: null,
            resizeStart: null,
            resizeStop: null
        },
        _create: function() {
            this.originalCss = {
                display: this.element[0].style.display,
                width: this.element[0].style.width,
                minHeight: this.element[0].style.minHeight,
                maxHeight: this.element[0].style.maxHeight,
                height: this.element[0].style.height
            };
            this.originalPosition = {
                parent: this.element.parent(),
                index: this.element.parent().children().index(this.element)
            };
            this.originalTitle = this.element.attr("title");
            this.options.title = this.options.title || this.originalTitle;
            this._createWrapper();
            this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(this.uiDialog);
            this._createTitlebar();
            this._createButtonPane();
            if (this.options.draggable && t.fn.draggable) {
                this._makeDraggable()
            };
            if (this.options.resizable && t.fn.resizable) {
                this._makeResizable()
            };
            this._isOpen = !1
        },
        _init: function() {
            if (this.options.autoOpen) {
                this.open()
            }
        },
        _appendTo: function() {
            var e = this.options.appendTo;
            if (e && (e.jquery || e.nodeType)) {
                return t(e)
            };
            return this.document.find(e || "body").eq(0)
        },
        _destroy: function() {
            var t, e = this.originalPosition;
            this._destroyOverlay();
            this.element.removeUniqueId().removeClass("ui-dialog-content ui-widget-content").css(this.originalCss).detach();
            this.uiDialog.stop(!0, !0).remove();
            if (this.originalTitle) {
                this.element.attr("title", this.originalTitle)
            };
            t = e.parent.children().eq(e.index);
            if (t.length && t[0] !== this.element[0]) {
                t.before(this.element)
            } else {
                e.parent.append(this.element)
            }
        },
        widget: function() {
            return this.uiDialog
        },
        disable: t.noop,
        enable: t.noop,
        close: function(e) {
            var i = this;
            if (!this._isOpen || this._trigger("beforeClose", e) === !1) {
                return
            };
            this._isOpen = !1;
            this._destroyOverlay();
            if (!this.opener.filter(":focusable").focus().length) {
                t(this.document[0].activeElement).blur()
            };
            this._hide(this.uiDialog, this.options.hide, function() {
                i._trigger("close", e)
            })
        },
        isOpen: function() {
            return this._isOpen
        },
        moveToTop: function() {
            this._moveToTop()
        },
        _moveToTop: function(t, e) {
            var i = !!this.uiDialog.nextAll(":visible").insertBefore(this.uiDialog).length;
            if (i && !e) {
                this._trigger("focus", t)
            };
            return i
        },
        open: function() {
            var e = this;
            if (this._isOpen) {
                if (this._moveToTop()) {
                    this._focusTabbable()
                };
                return
            };
            this._isOpen = !0;
            this.opener = t(this.document[0].activeElement);
            this._size();
            this._position();
            this._createOverlay();
            this._moveToTop(null, !0);
            this._show(this.uiDialog, this.options.show, function() {
                e._focusTabbable();
                e._trigger("focus")
            });
            this._trigger("open")
        },
        _focusTabbable: function() {
            var t = this.element.find("[autofocus]");
            if (!t.length) {
                t = this.element.find(":tabbable")
            };
            if (!t.length) {
                t = this.uiDialogButtonPane.find(":tabbable")
            };
            if (!t.length) {
                t = this.uiDialogTitlebarClose.filter(":tabbable")
            };
            if (!t.length) {
                t = this.uiDialog
            };
            t.eq(0).focus()
        },
        _keepFocus: function(e) {
            function i() {
                var e = this.document[0].activeElement,
                    i = this.uiDialog[0] === e || t.contains(this.uiDialog[0], e);
                if (!i) {
                    this._focusTabbable()
                }
            };
            e.preventDefault();
            i.call(this);
            this._delay(i)
        },
        _createWrapper: function() {
            this.uiDialog = t("<div>").addClass("ui-dialog ui-widget ui-widget-content ui-corner-all ui-front " + this.options.dialogClass).hide().attr({
                tabIndex: -1,
                role: "dialog"
            }).appendTo(this._appendTo());
            this._on(this.uiDialog, {
                keydown: function(e) {
                    if (this.options.closeOnEscape && !e.isDefaultPrevented() && e.keyCode && e.keyCode === t.ui.keyCode.ESCAPE) {
                        e.preventDefault();
                        this.close(e);
                        return
                    };
                    if (e.keyCode !== t.ui.keyCode.TAB) {
                        return
                    };
                    var i = this.uiDialog.find(":tabbable"),
                        s = i.filter(":first"),
                        n = i.filter(":last");
                    if ((e.target === n[0] || e.target === this.uiDialog[0]) && !e.shiftKey) {
                        s.focus(1);
                        e.preventDefault()
                    } else if ((e.target === s[0] || e.target === this.uiDialog[0]) && e.shiftKey) {
                        n.focus(1);
                        e.preventDefault()
                    }
                },
                mousedown: function(t) {
                    if (this._moveToTop(t)) {
                        this._focusTabbable()
                    }
                }
            });
            if (!this.element.find("[aria-describedby]").length) {
                this.uiDialog.attr({
                    "aria-describedby": this.element.uniqueId().attr("id")
                })
            }
        },
        _createTitlebar: function() {
            var e;
            this.uiDialogTitlebar = t("<div>").addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(this.uiDialog);
            this._on(this.uiDialogTitlebar, {
                mousedown: function(e) {
                    if (!t(e.target).closest(".ui-dialog-titlebar-close")) {
                        this.uiDialog.focus()
                    }
                }
            });
            this.uiDialogTitlebarClose = t("<button></button>").button({
                label: this.options.closeText,
                icons: {
                    primary: "ui-icon-closethick"
                },
                text: !1
            }).addClass("ui-dialog-titlebar-close").appendTo(this.uiDialogTitlebar);
            this._on(this.uiDialogTitlebarClose, {
                click: function(t) {
                    t.preventDefault();
                    this.close(t)
                }
            });
            e = t("<span>").uniqueId().addClass("ui-dialog-title").prependTo(this.uiDialogTitlebar);
            this._title(e);
            this.uiDialog.attr({
                "aria-labelledby": e.attr("id")
            })
        },
        _title: function(t) {
            if (!this.options.title) {
                t.html("&#160;")
            };
            t.text(this.options.title)
        },
        _createButtonPane: function() {
            this.uiDialogButtonPane = t("<div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix");
            this.uiButtonSet = t("<div>").addClass("ui-dialog-buttonset").appendTo(this.uiDialogButtonPane);
            this._createButtons()
        },
        _createButtons: function() {
            var i = this,
                e = this.options.buttons;
            this.uiDialogButtonPane.remove();
            this.uiButtonSet.empty();
            if (t.isEmptyObject(e) || (t.isArray(e) && !e.length)) {
                this.uiDialog.removeClass("ui-dialog-buttons");
                return
            };
            t.each(e, function(e, s) {
                var n, o;
                s = t.isFunction(s) ? {
                    click: s,
                    text: e
                } : s;
                s = t.extend({
                    type: "button"
                }, s);
                n = s.click;
                s.click = function() {
                    n.apply(i.element[0], arguments)
                };
                o = {
                    icons: s.icons,
                    text: s.showText
                };
                delete s.icons;
                delete s.showText;
                t("<button></button>", s).button(o).appendTo(i.uiButtonSet)
            });
            this.uiDialog.addClass("ui-dialog-buttons");
            this.uiDialogButtonPane.appendTo(this.uiDialog)
        },
        _makeDraggable: function() {
            var e = this,
                s = this.options;

            function i(t) {
                return {
                    position: t.position,
                    offset: t.offset
                }
            };
            this.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
                handle: ".ui-dialog-titlebar",
                containment: "document",
                start: function(s, n) {
                    t(this).addClass("ui-dialog-dragging");
                    e._blockFrames();
                    e._trigger("dragStart", s, i(n))
                },
                drag: function(t, s) {
                    e._trigger("drag", t, i(s))
                },
                stop: function(n, o) {
                    s.position = [o.position.left - e.document.scrollLeft(), o.position.top - e.document.scrollTop()];
                    t(this).removeClass("ui-dialog-dragging");
                    e._unblockFrames();
                    e._trigger("dragStop", n, i(o))
                }
            })
        },
        _makeResizable: function() {
            var i = this,
                e = this.options,
                n = e.resizable,
                o = this.uiDialog.css("position"),
                a = typeof n === "string" ? n : "n,e,s,w,se,sw,ne,nw";

            function s(t) {
                return {
                    originalPosition: t.originalPosition,
                    originalSize: t.originalSize,
                    position: t.position,
                    size: t.size
                }
            };
            this.uiDialog.resizable({
                cancel: ".ui-dialog-content",
                containment: "document",
                alsoResize: this.element,
                maxWidth: e.maxWidth,
                maxHeight: e.maxHeight,
                minWidth: e.minWidth,
                minHeight: this._minHeight(),
                handles: a,
                start: function(e, n) {
                    t(this).addClass("ui-dialog-resizing");
                    i._blockFrames();
                    i._trigger("resizeStart", e, s(n))
                },
                resize: function(t, e) {
                    i._trigger("resize", t, s(e))
                },
                stop: function(n, o) {
                    e.height = t(this).height();
                    e.width = t(this).width();
                    t(this).removeClass("ui-dialog-resizing");
                    i._unblockFrames();
                    i._trigger("resizeStop", n, s(o))
                }
            }).css("position", o)
        },
        _minHeight: function() {
            var t = this.options;
            return t.height === "auto" ? t.minHeight : Math.min(t.minHeight, t.height)
        },
        _position: function() {
            var t = this.uiDialog.is(":visible");
            if (!t) {
                this.uiDialog.show()
            };
            this.uiDialog.position(this.options.position);
            if (!t) {
                this.uiDialog.hide()
            }
        },
        _setOptions: function(e) {
            var a = this,
                n = !1,
                o = {};
            t.each(e, function(t, e) {
                a._setOption(t, e);
                if (t in i) {
                    n = !0
                };
                if (t in s) {
                    o[t] = e
                }
            });
            if (n) {
                this._size();
                this._position()
            };
            if (this.uiDialog.is(":data(ui-resizable)")) {
                this.uiDialog.resizable("option", o)
            }
        },
        _setOption: function(t, e) {
            var n, s, i = this.uiDialog;
            if (t === "dialogClass") {
                i.removeClass(this.options.dialogClass).addClass(e)
            };
            if (t === "disabled") {
                return
            };
            this._super(t, e);
            if (t === "appendTo") {
                this.uiDialog.appendTo(this._appendTo())
            };
            if (t === "buttons") {
                this._createButtons()
            };
            if (t === "closeText") {
                this.uiDialogTitlebarClose.button({
                    label: "" + e
                })
            };
            if (t === "draggable") {
                n = i.is(":data(ui-draggable)");
                if (n && !e) {
                    i.draggable("destroy")
                };
                if (!n && e) {
                    this._makeDraggable()
                }
            };
            if (t === "position") {
                this._position()
            };
            if (t === "resizable") {
                s = i.is(":data(ui-resizable)");
                if (s && !e) {
                    i.resizable("destroy")
                };
                if (s && typeof e === "string") {
                    i.resizable("option", "handles", e)
                };
                if (!s && e !== !1) {
                    this._makeResizable()
                }
            };
            if (t === "title") {
                this._title(this.uiDialogTitlebar.find(".ui-dialog-title"))
            }
        },
        _size: function() {
            var e, i, s, t = this.options;
            this.element.show().css({
                width: "auto",
                minHeight: 0,
                maxHeight: "none",
                height: 0
            });
            if (t.minWidth > t.width) {
                t.width = t.minWidth
            };
            e = this.uiDialog.css({
                height: "auto",
                width: t.width
            }).outerHeight();
            i = Math.max(0, t.minHeight - e);
            s = typeof t.maxHeight === "number" ? Math.max(0, t.maxHeight - e) : "none";
            if (t.height === "auto") {
                this.element.css({
                    minHeight: i,
                    maxHeight: s,
                    height: "auto"
                })
            } else {
                this.element.height(Math.max(0, t.height - e))
            };
            if (this.uiDialog.is(":data(ui-resizable)")) {
                this.uiDialog.resizable("option", "minHeight", this._minHeight())
            }
        },
        _blockFrames: function() {
            this.iframeBlocks = this.document.find("iframe").map(function() {
                var e = t(this);
                return t("<div>").css({
                    position: "absolute",
                    width: e.outerWidth(),
                    height: e.outerHeight()
                }).appendTo(e.parent()).offset(e.offset())[0]
            })
        },
        _unblockFrames: function() {
            if (this.iframeBlocks) {
                this.iframeBlocks.remove();
                delete this.iframeBlocks
            }
        },
        _allowInteraction: function(e) {
            if (t(e.target).closest(".ui-dialog").length) {
                return !0
            };
            return !!t(e.target).closest(".ui-datepicker").length
        },
        _createOverlay: function() {
            if (!this.options.modal) {
                return
            };
            var e = this,
                i = this.widgetFullName;
            if (!t.ui.dialog.overlayInstances) {
                this._delay(function() {
                    if (t.ui.dialog.overlayInstances) {
                        this.document.bind("focusin.dialog", function(s) {
                            if (!e._allowInteraction(s)) {
                                s.preventDefault();
                                t(".ui-dialog:visible:last .ui-dialog-content").data(i)._focusTabbable()
                            }
                        })
                    }
                })
            };
            this.overlay = t("<div>").addClass("ui-widget-overlay ui-front").appendTo(this._appendTo());
            this._on(this.overlay, {
                mousedown: "_keepFocus"
            });
            t.ui.dialog.overlayInstances++
        },
        _destroyOverlay: function() {
            if (!this.options.modal) {
                return
            };
            if (this.overlay) {
                t.ui.dialog.overlayInstances--;
                if (!t.ui.dialog.overlayInstances) {
                    this.document.unbind("focusin.dialog")
                };
                this.overlay.remove();
                this.overlay = null
            }
        }
    });
    t.ui.dialog.overlayInstances = 0;
    if (t.uiBackCompat !== !1) {
        t.widget("ui.dialog", t.ui.dialog, {
            _position: function() {
                var e = this.options.position,
                    i = [],
                    s = [0, 0],
                    n;
                if (e) {
                    if (typeof e === "string" || (typeof e === "object" && "0" in e)) {
                        i = e.split ? e.split(" ") : [e[0], e[1]];
                        if (i.length === 1) {
                            i[1] = i[0]
                        };
                        t.each(["left", "top"], function(t, e) {
                            if (+i[t] === i[t]) {
                                s[t] = i[t];
                                i[t] = e
                            }
                        });
                        e = {
                            my: i[0] + (s[0] < 0 ? s[0] : "+" + s[0]) + " " + i[1] + (s[1] < 0 ? s[1] : "+" + s[1]),
                            at: i.join(" ")
                        }
                    };
                    e = t.extend({}, t.ui.dialog.prototype.options.position, e)
                } else {
                    e = t.ui.dialog.prototype.options.position
                };
                n = this.uiDialog.is(":visible");
                if (!n) {
                    this.uiDialog.show()
                };
                this.uiDialog.position(e);
                if (!n) {
                    this.uiDialog.hide()
                }
            }
        })
    }
}(jQuery));
(function(t, e) {
    var i = /up|down|vertical/,
        s = /up|left|vertical|horizontal/;
    t.effects.effect.blind = function(e, n) {
        var o = t(this),
            u = ["position", "top", "bottom", "left", "right", "height", "width"],
            g = t.effects.setMode(o, e.mode || "hide"),
            m = e.direction || "up",
            r = i.test(m),
            c = r ? "height" : "width",
            f = r ? "top" : "left",
            v = s.test(m),
            d = {},
            p = g === "show",
            a, l, h;
        if (o.parent().is(".ui-effects-wrapper")) {
            t.effects.save(o.parent(), u)
        } else {
            t.effects.save(o, u)
        };
        o.show();
        a = t.effects.createWrapper(o).css({
            overflow: "hidden"
        });
        l = a[c]();
        h = parseFloat(a.css(f)) || 0;
        d[c] = p ? l : 0;
        if (!v) {
            o.css(r ? "bottom" : "right", 0).css(r ? "top" : "left", "auto").css({
                position: "absolute"
            });
            d[f] = p ? h : l + h
        };
        if (p) {
            a.css(c, 0);
            if (!v) {
                a.css(f, h + l)
            }
        };
        a.animate(d, {
            duration: e.duration,
            easing: e.easing,
            queue: !1,
            complete: function() {
                if (g === "hide") {
                    o.hide()
                };
                t.effects.restore(o, u);
                t.effects.removeWrapper(o);
                n()
            }
        })
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.bounce = function(e, i) {
        var s = t(this),
            d = ["position", "top", "bottom", "left", "right", "height", "width"],
            b = t.effects.setMode(s, e.mode || "effect"),
            o = b === "hide",
            p = b === "show",
            h = e.direction || "up",
            n = e.distance,
            g = e.times || 5,
            y = g * 2 + (p || o ? 1 : 0),
            u = e.duration / y,
            c = e.easing,
            a = (h === "up" || h === "down") ? "top" : "left",
            m = (h === "up" || h === "left"),
            v, r, l, f = s.queue(),
            w = f.length;
        if (p || o) {
            d.push("opacity")
        };
        t.effects.save(s, d);
        s.show();
        t.effects.createWrapper(s);
        if (!n) {
            n = s[a === "top" ? "outerHeight" : "outerWidth"]() / 3
        };
        if (p) {
            l = {
                opacity: 1
            };
            l[a] = 0;
            s.css("opacity", 0).css(a, m ? -n * 2 : n * 2).animate(l, u, c)
        };
        if (o) {
            n = n / Math.pow(2, g - 1)
        };
        l = {};
        l[a] = 0;
        for (v = 0; v < g; v++) {
            r = {};
            r[a] = (m ? "-=" : "+=") + n;
            s.animate(r, u, c).animate(l, u, c);
            n = o ? n * 2 : n / 2
        };
        if (o) {
            r = {
                opacity: 0
            };
            r[a] = (m ? "-=" : "+=") + n;
            s.animate(r, u, c)
        };
        s.queue(function() {
            if (o) {
                s.hide()
            };
            t.effects.restore(s, d);
            t.effects.removeWrapper(s);
            i()
        });
        if (w > 1) {
            f.splice.apply(f, [1, 0].concat(f.splice(w, y + 1)))
        };
        s.dequeue()
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.clip = function(e, i) {
        var s = t(this),
            h = ["position", "top", "bottom", "left", "right", "height", "width"],
            d = t.effects.setMode(s, e.mode || "hide"),
            o = d === "show",
            p = e.direction || "vertical",
            u = p === "vertical",
            r = u ? "height" : "width",
            c = u ? "top" : "left",
            l = {},
            f, n, a;
        t.effects.save(s, h);
        s.show();
        f = t.effects.createWrapper(s).css({
            overflow: "hidden"
        });
        n = (s[0].tagName === "IMG") ? f : s;
        a = n[r]();
        if (o) {
            n.css(r, 0);
            n.css(c, a / 2)
        };
        l[r] = o ? a : 0;
        l[c] = o ? 0 : a / 2;
        n.animate(l, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: function() {
                if (!o) {
                    s.hide()
                };
                t.effects.restore(s, h);
                t.effects.removeWrapper(s);
                i()
            }
        })
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.drop = function(e, i) {
        var s = t(this),
            h = ["position", "top", "bottom", "left", "right", "opacity", "height", "width"],
            u = t.effects.setMode(s, e.mode || "hide"),
            a = u === "show",
            n = e.direction || "left",
            r = (n === "up" || n === "down") ? "top" : "left",
            l = (n === "up" || n === "left") ? "pos" : "neg",
            c = {
                opacity: a ? 1 : 0
            },
            o;
        t.effects.save(s, h);
        s.show();
        t.effects.createWrapper(s);
        o = e.distance || s[r === "top" ? "outerHeight" : "outerWidth"](!0) / 2;
        if (a) {
            s.css("opacity", 0).css(r, l === "pos" ? -o : o)
        };
        c[r] = (a ? (l === "pos" ? "+=" : "-=") : (l === "pos" ? "-=" : "+=")) + o;
        s.animate(c, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: function() {
                if (u === "hide") {
                    s.hide()
                };
                t.effects.restore(s, h);
                t.effects.removeWrapper(s);
                i()
            }
        })
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.explode = function(e, i) {
        var r = e.pieces ? Math.round(Math.sqrt(e.pieces)) : 3,
            u = r,
            s = t(this),
            v = t.effects.setMode(s, e.mode || "hide"),
            n = v === "show",
            m = s.show().css("visibility", "hidden").offset(),
            l = Math.ceil(s.outerWidth() / u),
            h = Math.ceil(s.outerHeight() / r),
            c = [],
            o, a, f, d, p, g;

        function b() {
            c.push(this);
            if (c.length === r * u) {
                y()
            }
        };
        for (o = 0; o < r; o++) {
            d = m.top + o * h;
            g = o - (r - 1) / 2;
            for (a = 0; a < u; a++) {
                f = m.left + a * l;
                p = a - (u - 1) / 2;
                s.clone().appendTo("body").wrap("<div></div>").css({
                    position: "absolute",
                    visibility: "visible",
                    left: -a * l,
                    top: -o * h
                }).parent().addClass("ui-effects-explode").css({
                    position: "absolute",
                    overflow: "hidden",
                    width: l,
                    height: h,
                    left: f + (n ? p * l : 0),
                    top: d + (n ? g * h : 0),
                    opacity: n ? 0 : 1
                }).animate({
                    left: f + (n ? 0 : p * l),
                    top: d + (n ? 0 : g * h),
                    opacity: n ? 1 : 0
                }, e.duration || 500, e.easing, b)
            }
        };

        function y() {
            s.css({
                visibility: "visible"
            });
            t(c).remove();
            if (!n) {
                s.hide()
            };
            i()
        }
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.fade = function(e, i) {
        var s = t(this),
            n = t.effects.setMode(s, e.mode || "toggle");
        s.animate({
            opacity: n
        }, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: i
        })
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.fold = function(e, i) {
        var s = t(this),
            l = ["position", "top", "bottom", "left", "right", "height", "width"],
            h = t.effects.setMode(s, e.mode || "hide"),
            a = h === "show",
            u = h === "hide",
            o = e.size || 15,
            c = /([0-9]+)%/.exec(o),
            f = !!e.horizFirst,
            d = a !== f,
            p = d ? ["width", "height"] : ["height", "width"],
            g = e.duration / 2,
            n, r, m = {},
            v = {};
        t.effects.save(s, l);
        s.show();
        n = t.effects.createWrapper(s).css({
            overflow: "hidden"
        });
        r = d ? [n.width(), n.height()] : [n.height(), n.width()];
        if (c) {
            o = parseInt(c[1], 10) / 100 * r[u ? 0 : 1]
        };
        if (a) {
            n.css(f ? {
                height: 0,
                width: o
            } : {
                height: o,
                width: 0
            })
        };
        m[p[0]] = a ? r[0] : o;
        v[p[1]] = a ? r[1] : 0;
        n.animate(m, g, e.easing).animate(v, g, e.easing, function() {
            if (u) {
                s.hide()
            };
            t.effects.restore(s, l);
            t.effects.removeWrapper(s);
            i()
        })
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.highlight = function(e, i) {
        var s = t(this),
            n = ["backgroundImage", "backgroundColor", "opacity"],
            o = t.effects.setMode(s, e.mode || "show"),
            a = {
                backgroundColor: s.css("backgroundColor")
            };
        if (o === "hide") {
            a.opacity = 0
        };
        t.effects.save(s, n);
        s.show().css({
            backgroundImage: "none",
            backgroundColor: e.color || "#ffff99"
        }).animate(a, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: function() {
                if (o === "hide") {
                    s.hide()
                };
                t.effects.restore(s, n);
                i()
            }
        })
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.pulsate = function(e, i) {
        var s = t(this),
            a = t.effects.setMode(s, e.mode || "show"),
            h = a === "show",
            f = a === "hide",
            d = (h || a === "hide"),
            r = ((e.times || 5) * 2) + (d ? 1 : 0),
            u = e.duration / r,
            n = 0,
            o = s.queue(),
            c = o.length,
            l;
        if (h || !s.is(":visible")) {
            s.css("opacity", 0).show();
            n = 1
        };
        for (l = 1; l < r; l++) {
            s.animate({
                opacity: n
            }, u, e.easing);
            n = 1 - n
        };
        s.animate({
            opacity: n
        }, u, e.easing);
        s.queue(function() {
            if (f) {
                s.hide()
            };
            i()
        });
        if (c > 1) {
            o.splice.apply(o, [1, 0].concat(o.splice(c, r + 1)))
        };
        s.dequeue()
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.puff = function(e, i) {
        var s = t(this),
            a = t.effects.setMode(s, e.mode || "hide"),
            r = a === "hide",
            l = parseInt(e.percent, 10) || 150,
            o = l / 100,
            n = {
                height: s.height(),
                width: s.width(),
                outerHeight: s.outerHeight(),
                outerWidth: s.outerWidth()
            };
        t.extend(e, {
            effect: "scale",
            queue: !1,
            fade: !0,
            mode: a,
            complete: i,
            percent: r ? l : 100,
            from: r ? n : {
                height: n.height * o,
                width: n.width * o,
                outerHeight: n.outerHeight * o,
                outerWidth: n.outerWidth * o
            }
        });
        s.effect(e)
    };
    t.effects.effect.scale = function(e, i) {
        var n = t(this),
            s = t.extend(!0, {}, e),
            o = t.effects.setMode(n, e.mode || "effect"),
            l = parseInt(e.percent, 10) || (parseInt(e.percent, 10) === 0 ? 0 : (o === "hide" ? 0 : 100)),
            h = e.direction || "both",
            u = e.origin,
            a = {
                height: n.height(),
                width: n.width(),
                outerHeight: n.outerHeight(),
                outerWidth: n.outerWidth()
            },
            r = {
                y: h !== "horizontal" ? (l / 100) : 1,
                x: h !== "vertical" ? (l / 100) : 1
            };
        s.effect = "size";
        s.queue = !1;
        s.complete = i;
        if (o !== "effect") {
            s.origin = u || ["middle", "center"];
            s.restore = !0
        };
        s.from = e.from || (o === "show" ? {
            height: 0,
            width: 0,
            outerHeight: 0,
            outerWidth: 0
        } : a);
        s.to = {
            height: a.height * r.y,
            width: a.width * r.x,
            outerHeight: a.outerHeight * r.y,
            outerWidth: a.outerWidth * r.x
        };
        if (s.fade) {
            if (o === "show") {
                s.from.opacity = 0;
                s.to.opacity = 1
            };
            if (o === "hide") {
                s.from.opacity = 1;
                s.to.opacity = 0
            }
        };
        n.effect(s)
    };
    t.effects.effect.size = function(e, i) {
        var o, c, n, s = t(this),
            m = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"],
            b = ["position", "top", "bottom", "left", "right", "overflow", "opacity"],
            f = ["width", "height", "overflow"],
            d = ["fontSize"],
            a = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"],
            r = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"],
            h = t.effects.setMode(s, e.mode || "effect"),
            p = e.restore || h !== "effect",
            u = e.scale || "both",
            v = e.origin || ["middle", "center"],
            y = s.css("position"),
            l = p ? m : b,
            g = {
                height: 0,
                width: 0,
                outerHeight: 0,
                outerWidth: 0
            };
        if (h === "show") {
            s.show()
        };
        o = {
            height: s.height(),
            width: s.width(),
            outerHeight: s.outerHeight(),
            outerWidth: s.outerWidth()
        };
        if (e.mode === "toggle" && h === "show") {
            s.from = e.to || g;
            s.to = e.from || o
        } else {
            s.from = e.from || (h === "show" ? g : o);
            s.to = e.to || (h === "hide" ? g : o)
        };
        n = {
            from: {
                y: s.from.height / o.height,
                x: s.from.width / o.width
            },
            to: {
                y: s.to.height / o.height,
                x: s.to.width / o.width
            }
        };
        if (u === "box" || u === "both") {
            if (n.from.y !== n.to.y) {
                l = l.concat(a);
                s.from = t.effects.setTransition(s, a, n.from.y, s.from);
                s.to = t.effects.setTransition(s, a, n.to.y, s.to)
            };
            if (n.from.x !== n.to.x) {
                l = l.concat(r);
                s.from = t.effects.setTransition(s, r, n.from.x, s.from);
                s.to = t.effects.setTransition(s, r, n.to.x, s.to)
            }
        };
        if (u === "content" || u === "both") {
            if (n.from.y !== n.to.y) {
                l = l.concat(d).concat(f);
                s.from = t.effects.setTransition(s, d, n.from.y, s.from);
                s.to = t.effects.setTransition(s, d, n.to.y, s.to)
            }
        };
        t.effects.save(s, l);
        s.show();
        t.effects.createWrapper(s);
        s.css("overflow", "hidden").css(s.from);
        if (v) {
            c = t.effects.getBaseline(v, o);
            s.from.top = (o.outerHeight - s.outerHeight()) * c.y;
            s.from.left = (o.outerWidth - s.outerWidth()) * c.x;
            s.to.top = (o.outerHeight - s.to.outerHeight) * c.y;
            s.to.left = (o.outerWidth - s.to.outerWidth) * c.x
        };
        s.css(s.from);
        if (u === "content" || u === "both") {
            a = a.concat(["marginTop", "marginBottom"]).concat(d);
            r = r.concat(["marginLeft", "marginRight"]);
            f = m.concat(a).concat(r);
            s.find("*[width]").each(function() {
                var i = t(this),
                    s = {
                        height: i.height(),
                        width: i.width(),
                        outerHeight: i.outerHeight(),
                        outerWidth: i.outerWidth()
                    };
                if (p) {
                    t.effects.save(i, f)
                };
                i.from = {
                    height: s.height * n.from.y,
                    width: s.width * n.from.x,
                    outerHeight: s.outerHeight * n.from.y,
                    outerWidth: s.outerWidth * n.from.x
                };
                i.to = {
                    height: s.height * n.to.y,
                    width: s.width * n.to.x,
                    outerHeight: s.height * n.to.y,
                    outerWidth: s.width * n.to.x
                };
                if (n.from.y !== n.to.y) {
                    i.from = t.effects.setTransition(i, a, n.from.y, i.from);
                    i.to = t.effects.setTransition(i, a, n.to.y, i.to)
                };
                if (n.from.x !== n.to.x) {
                    i.from = t.effects.setTransition(i, r, n.from.x, i.from);
                    i.to = t.effects.setTransition(i, r, n.to.x, i.to)
                };
                i.css(i.from);
                i.animate(i.to, e.duration, e.easing, function() {
                    if (p) {
                        t.effects.restore(i, f)
                    }
                })
            })
        };
        s.animate(s.to, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: function() {
                if (s.to.opacity === 0) {
                    s.css("opacity", s.from.opacity)
                };
                if (h === "hide") {
                    s.hide()
                };
                t.effects.restore(s, l);
                if (!p) {
                    if (y === "static") {
                        s.css({
                            position: "relative",
                            top: s.to.top,
                            left: s.to.left
                        })
                    } else {
                        t.each(["top", "left"], function(t, e) {
                            s.css(e, function(e, i) {
                                var o = parseInt(i, 10),
                                    n = t ? s.to.left : s.to.top;
                                if (i === "auto") {
                                    return n + "px"
                                };
                                return o + n + "px"
                            })
                        })
                    }
                };
                t.effects.removeWrapper(s);
                i()
            }
        })
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.shake = function(e, i) {
        var s = t(this),
            d = ["position", "top", "bottom", "left", "right", "height", "width"],
            b = t.effects.setMode(s, e.mode || "effect"),
            o = e.direction || "left",
            r = e.distance || 20,
            p = e.times || 3,
            g = p * 2 + 1,
            n = Math.round(e.duration / g),
            l = (o === "up" || o === "down") ? "top" : "left",
            h = (o === "up" || o === "left"),
            u = {},
            c = {},
            m = {},
            f, a = s.queue(),
            v = a.length;
        t.effects.save(s, d);
        s.show();
        t.effects.createWrapper(s);
        u[l] = (h ? "-=" : "+=") + r;
        c[l] = (h ? "+=" : "-=") + r * 2;
        m[l] = (h ? "-=" : "+=") + r * 2;
        s.animate(u, n, e.easing);
        for (f = 1; f < p; f++) {
            s.animate(c, n, e.easing).animate(m, n, e.easing)
        };
        s.animate(c, n, e.easing).animate(u, n / 2, e.easing).queue(function() {
            if (b === "hide") {
                s.hide()
            };
            t.effects.restore(s, d);
            t.effects.removeWrapper(s);
            i()
        });
        if (v > 1) {
            a.splice.apply(a, [1, 0].concat(a.splice(v, g + 1)))
        };
        s.dequeue()
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.slide = function(e, i) {
        var s = t(this),
            l = ["position", "top", "bottom", "left", "right", "width", "height"],
            h = t.effects.setMode(s, e.mode || "show"),
            u = h === "show",
            o = e.direction || "left",
            a = (o === "up" || o === "down") ? "top" : "left",
            r = (o === "up" || o === "left"),
            n, c = {};
        t.effects.save(s, l);
        s.show();
        n = e.distance || s[a === "top" ? "outerHeight" : "outerWidth"](!0);
        t.effects.createWrapper(s).css({
            overflow: "hidden"
        });
        if (u) {
            s.css(a, r ? (isNaN(n) ? "-" + n : -n) : n)
        };
        c[a] = (u ? (r ? "+=" : "-=") : (r ? "-=" : "+=")) + n;
        s.animate(c, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: function() {
                if (h === "hide") {
                    s.hide()
                };
                t.effects.restore(s, l);
                t.effects.removeWrapper(s);
                i()
            }
        })
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.transfer = function(e, i) {
        var n = t(this),
            s = t(e.to),
            o = s.css("position") === "fixed",
            a = t("body"),
            r = o ? a.scrollTop() : 0,
            l = o ? a.scrollLeft() : 0,
            h = s.offset(),
            c = {
                top: h.top - r,
                left: h.left - l,
                height: s.innerHeight(),
                width: s.innerWidth()
            },
            u = n.offset(),
            f = t("<div class='ui-effects-transfer'></div>").appendTo(document.body).addClass(e.className).css({
                top: u.top - r,
                left: u.left - l,
                height: n.innerHeight(),
                width: n.innerWidth(),
                position: o ? "fixed" : "absolute"
            }).animate(c, e.duration, e.easing, function() {
                f.remove();
                i()
            })
    }
})(jQuery);
(function(t, e) {
    t.widget("ui.menu", {
        version: "1.10.3",
        defaultElement: "<ul>",
        delay: 300,
        options: {
            icons: {
                submenu: "ui-icon-carat-1-e"
            },
            menus: "ul",
            position: {
                my: "left top",
                at: "right top"
            },
            role: "menu",
            blur: null,
            focus: null,
            select: null
        },
        _create: function() {
            this.activeMenu = this.element;
            this.mouseHandled = !1;
            this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length).attr({
                role: this.options.role,
                tabIndex: 0
            }).bind("click" + this.eventNamespace, t.proxy(function(t) {
                if (this.options.disabled) {
                    t.preventDefault()
                }
            }, this));
            if (this.options.disabled) {
                this.element.addClass("ui-state-disabled").attr("aria-disabled", "true")
            };
            this._on({
                "mousedown .ui-menu-item > a": function(t) {
                    t.preventDefault()
                },
                "click .ui-state-disabled > a": function(t) {
                    t.preventDefault()
                },
                "click .ui-menu-item:has(a)": function(e) {
                    var i = t(e.target).closest(".ui-menu-item");
                    if (!this.mouseHandled && i.not(".ui-state-disabled").length) {
                        this.mouseHandled = !0;
                        this.select(e);
                        if (i.has(".ui-menu").length) {
                            this.expand(e)
                        } else if (!this.element.is(":focus")) {
                            this.element.trigger("focus", [!0]);
                            if (this.active && this.active.parents(".ui-menu").length === 1) {
                                clearTimeout(this.timer)
                            }
                        }
                    }
                },
                "mouseenter .ui-menu-item": function(e) {
                    var i = t(e.currentTarget);
                    i.siblings().children(".ui-state-active").removeClass("ui-state-active");
                    this.focus(e, i)
                },
                mouseleave: "collapseAll",
                "mouseleave .ui-menu": "collapseAll",
                focus: function(t, e) {
                    var i = this.active || this.element.children(".ui-menu-item").eq(0);
                    if (!e) {
                        this.focus(t, i)
                    }
                },
                blur: function(e) {
                    this._delay(function() {
                        if (!t.contains(this.element[0], this.document[0].activeElement)) {
                            this.collapseAll(e)
                        }
                    })
                },
                keydown: "_keydown"
            });
            this.refresh();
            this._on(this.document, {
                click: function(e) {
                    if (!t(e.target).closest(".ui-menu").length) {
                        this.collapseAll(e)
                    };
                    this.mouseHandled = !1
                }
            })
        },
        _destroy: function() {
            this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show();
            this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function() {
                var e = t(this);
                if (e.data("ui-menu-submenu-carat")) {
                    e.remove()
                }
            });
            this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")
        },
        _keydown: function(e) {
            var i, o, s, a, n, r = !0;

            function l(t) {
                return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
            };
            switch (e.keyCode) {
                case t.ui.keyCode.PAGE_UP:
                    this.previousPage(e);
                    break;
                case t.ui.keyCode.PAGE_DOWN:
                    this.nextPage(e);
                    break;
                case t.ui.keyCode.HOME:
                    this._move("first", "first", e);
                    break;
                case t.ui.keyCode.END:
                    this._move("last", "last", e);
                    break;
                case t.ui.keyCode.UP:
                    this.previous(e);
                    break;
                case t.ui.keyCode.DOWN:
                    this.next(e);
                    break;
                case t.ui.keyCode.LEFT:
                    this.collapse(e);
                    break;
                case t.ui.keyCode.RIGHT:
                    if (this.active && !this.active.is(".ui-state-disabled")) {
                        this.expand(e)
                    };
                    break;
                case t.ui.keyCode.ENTER:
                case t.ui.keyCode.SPACE:
                    this._activate(e);
                    break;
                case t.ui.keyCode.ESCAPE:
                    this.collapse(e);
                    break;
                default:
                    r = !1;
                    o = this.previousFilter || "";
                    s = String.fromCharCode(e.keyCode);
                    a = !1;
                    clearTimeout(this.filterTimer);
                    if (s === o) {
                        a = !0
                    } else {
                        s = o + s
                    };
                    n = new RegExp("^" + l(s), "i");
                    i = this.activeMenu.children(".ui-menu-item").filter(function() {
                        return n.test(t(this).children("a").text())
                    });
                    i = a && i.index(this.active.next()) !== -1 ? this.active.nextAll(".ui-menu-item") : i;
                    if (!i.length) {
                        s = String.fromCharCode(e.keyCode);
                        n = new RegExp("^" + l(s), "i");
                        i = this.activeMenu.children(".ui-menu-item").filter(function() {
                            return n.test(t(this).children("a").text())
                        })
                    };
                    if (i.length) {
                        this.focus(e, i);
                        if (i.length > 1) {
                            this.previousFilter = s;
                            this.filterTimer = this._delay(function() {
                                delete this.previousFilter
                            }, 1000)
                        } else {
                            delete this.previousFilter
                        }
                    } else {
                        delete this.previousFilter
                    }
            };
            if (r) {
                e.preventDefault()
            }
        },
        _activate: function(t) {
            if (!this.active.is(".ui-state-disabled")) {
                if (this.active.children("a[aria-haspopup='true']").length) {
                    this.expand(t)
                } else {
                    this.select(t)
                }
            }
        },
        refresh: function() {
            var e, s = this.options.icons.submenu,
                i = this.element.find(this.options.menus);
            i.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({
                role: this.options.role,
                "aria-hidden": "true",
                "aria-expanded": "false"
            }).each(function() {
                var e = t(this),
                    i = e.prev("a"),
                    n = t("<span>").addClass("ui-menu-icon ui-icon " + s).data("ui-menu-submenu-carat", !0);
                i.attr("aria-haspopup", "true").prepend(n);
                e.attr("aria-labelledby", i.attr("id"))
            });
            e = i.add(this.element);
            e.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role", "presentation").children("a").uniqueId().addClass("ui-corner-all").attr({
                tabIndex: -1,
                role: this._itemRole()
            });
            e.children(":not(.ui-menu-item)").each(function() {
                var e = t(this);
                if (!/[^\-\u2014\u2013\s]/.test(e.text())) {
                    e.addClass("ui-widget-content ui-menu-divider")
                }
            });
            e.children(".ui-state-disabled").attr("aria-disabled", "true");
            if (this.active && !t.contains(this.element[0], this.active[0])) {
                this.blur()
            }
        },
        _itemRole: function() {
            return {
                menu: "menuitem",
                listbox: "option"
            }[this.options.role]
        },
        _setOption: function(t, e) {
            if (t === "icons") {
                this.element.find(".ui-menu-icon").removeClass(this.options.icons.submenu).addClass(e.submenu)
            };
            this._super(t, e)
        },
        focus: function(t, e) {
            var i, s;
            this.blur(t, t && t.type === "focus");
            this._scrollIntoView(e);
            this.active = e.first();
            s = this.active.children("a").addClass("ui-state-focus");
            if (this.options.role) {
                this.element.attr("aria-activedescendant", s.attr("id"))
            };
            this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active");
            if (t && t.type === "keydown") {
                this._close()
            } else {
                this.timer = this._delay(function() {
                    this._close()
                }, this.delay)
            };
            i = e.children(".ui-menu");
            if (i.length && (/^mouse/.test(t.type))) {
                this._startOpening(i)
            };
            this.activeMenu = e.parent();
            this._trigger("focus", t, {
                item: e
            })
        },
        _scrollIntoView: function(e) {
            var a, r, i, s, n, o;
            if (this._hasScroll()) {
                a = parseFloat(t.css(this.activeMenu[0], "borderTopWidth")) || 0;
                r = parseFloat(t.css(this.activeMenu[0], "paddingTop")) || 0;
                i = e.offset().top - this.activeMenu.offset().top - a - r;
                s = this.activeMenu.scrollTop();
                n = this.activeMenu.height();
                o = e.height();
                if (i < 0) {
                    this.activeMenu.scrollTop(s + i)
                } else if (i + o > n) {
                    this.activeMenu.scrollTop(s + i - n + o)
                }
            }
        },
        blur: function(t, e) {
            if (!e) {
                clearTimeout(this.timer)
            };
            if (!this.active) {
                return
            };
            this.active.children("a").removeClass("ui-state-focus");
            this.active = null;
            this._trigger("blur", t, {
                item: this.active
            })
        },
        _startOpening: function(t) {
            clearTimeout(this.timer);
            if (t.attr("aria-hidden") !== "true") {
                return
            };
            this.timer = this._delay(function() {
                this._close();
                this._open(t)
            }, this.delay)
        },
        _open: function(e) {
            var i = t.extend({
                of: this.active
            }, this.options.position);
            clearTimeout(this.timer);
            this.element.find(".ui-menu").not(e.parents(".ui-menu")).hide().attr("aria-hidden", "true");
            e.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(i)
        },
        collapseAll: function(e, i) {
            clearTimeout(this.timer);
            this.timer = this._delay(function() {
                var s = i ? this.element : t(e && e.target).closest(this.element.find(".ui-menu"));
                if (!s.length) {
                    s = this.element
                };
                this._close(s);
                this.blur(e);
                this.activeMenu = s
            }, this.delay)
        },
        _close: function(t) {
            if (!t) {
                t = this.active ? this.active.parent() : this.element
            };
            t.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false").end().find("a.ui-state-active").removeClass("ui-state-active")
        },
        collapse: function(t) {
            var e = this.active && this.active.parent().closest(".ui-menu-item", this.element);
            if (e && e.length) {
                this._close();
                this.focus(t, e)
            }
        },
        expand: function(t) {
            var e = this.active && this.active.children(".ui-menu ").children(".ui-menu-item").first();
            if (e && e.length) {
                this._open(e.parent());
                this._delay(function() {
                    this.focus(t, e)
                })
            }
        },
        next: function(t) {
            this._move("next", "first", t)
        },
        previous: function(t) {
            this._move("prev", "last", t)
        },
        isFirstItem: function() {
            return this.active && !this.active.prevAll(".ui-menu-item").length
        },
        isLastItem: function() {
            return this.active && !this.active.nextAll(".ui-menu-item").length
        },
        _move: function(t, e, i) {
            var s;
            if (this.active) {
                if (t === "first" || t === "last") {
                    s = this.active[t === "first" ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1)
                } else {
                    s = this.active[t + "All"](".ui-menu-item").eq(0)
                }
            };
            if (!s || !s.length || !this.active) {
                s = this.activeMenu.children(".ui-menu-item")[e]()
            };
            this.focus(i, s)
        },
        nextPage: function(e) {
            var i, s, n;
            if (!this.active) {
                this.next(e);
                return
            };
            if (this.isLastItem()) {
                return
            };
            if (this._hasScroll()) {
                s = this.active.offset().top;
                n = this.element.height();
                this.active.nextAll(".ui-menu-item").each(function() {
                    i = t(this);
                    return i.offset().top - s - n < 0
                });
                this.focus(e, i)
            } else {
                this.focus(e, this.activeMenu.children(".ui-menu-item")[!this.active ? "first" : "last"]())
            }
        },
        previousPage: function(e) {
            var i, s, n;
            if (!this.active) {
                this.next(e);
                return
            };
            if (this.isFirstItem()) {
                return
            };
            if (this._hasScroll()) {
                s = this.active.offset().top;
                n = this.element.height();
                this.active.prevAll(".ui-menu-item").each(function() {
                    i = t(this);
                    return i.offset().top - s + n > 0
                });
                this.focus(e, i)
            } else {
                this.focus(e, this.activeMenu.children(".ui-menu-item").first())
            }
        },
        _hasScroll: function() {
            return this.element.outerHeight() < this.element.prop("scrollHeight")
        },
        select: function(e) {
            this.active = this.active || t(e.target).closest(".ui-menu-item");
            var i = {
                item: this.active
            };
            if (!this.active.has(".ui-menu").length) {
                this.collapseAll(e, !0)
            };
            this._trigger("select", e, i)
        }
    })
}(jQuery));
(function(t, e) {
    t.ui = t.ui || {};
    var o, s = Math.max,
        i = Math.abs,
        a = Math.round,
        r = /left|center|right/,
        l = /top|center|bottom/,
        h = /[\+\-]\d+(\.[\d]+)?%?/,
        u = /^\w+/,
        c = /%$/,
        d = t.fn.position;

    function f(t, e, i) {
        return [parseFloat(t[0]) * (c.test(t[0]) ? e / 100 : 1), parseFloat(t[1]) * (c.test(t[1]) ? i / 100 : 1)]
    };

    function n(e, i) {
        return parseInt(t.css(e, i), 10) || 0
    };

    function p(e) {
        var i = e[0];
        if (i.nodeType === 9) {
            return {
                width: e.width(),
                height: e.height(),
                offset: {
                    top: 0,
                    left: 0
                }
            }
        };
        if (t.isWindow(i)) {
            return {
                width: e.width(),
                height: e.height(),
                offset: {
                    top: e.scrollTop(),
                    left: e.scrollLeft()
                }
            }
        };
        if (i.preventDefault) {
            return {
                width: 0,
                height: 0,
                offset: {
                    top: i.pageY,
                    left: i.pageX
                }
            }
        };
        return {
            width: e.outerWidth(),
            height: e.outerHeight(),
            offset: e.offset()
        }
    };
    t.position = {
        scrollbarWidth: function() {
            if (o !== e) {
                return o
            };
            var n, s, i = t("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),
                a = i.children()[0];
            t("body").append(i);
            n = a.offsetWidth;
            i.css("overflow", "scroll");
            s = a.offsetWidth;
            if (n === s) {
                s = i[0].clientWidth
            };
            i.remove();
            return (o = n - s)
        },
        getScrollInfo: function(e) {
            var i = e.isWindow ? "" : e.element.css("overflow-x"),
                s = e.isWindow ? "" : e.element.css("overflow-y"),
                n = i === "scroll" || (i === "auto" && e.width < e.element[0].scrollWidth),
                o = s === "scroll" || (s === "auto" && e.height < e.element[0].scrollHeight);
            return {
                width: o ? t.position.scrollbarWidth() : 0,
                height: n ? t.position.scrollbarWidth() : 0
            }
        },
        getWithinInfo: function(e) {
            var i = t(e || window),
                s = t.isWindow(i[0]);
            return {
                element: i,
                isWindow: s,
                offset: i.offset() || {
                    left: 0,
                    top: 0
                },
                scrollLeft: i.scrollLeft(),
                scrollTop: i.scrollTop(),
                width: s ? i.width() : i.outerWidth(),
                height: s ? i.height() : i.outerHeight()
            }
        }
    };
    t.fn.position = function(e) {
        if (!e || !e.of) {
            return d.apply(this, arguments)
        };
        e = t.extend({}, e);
        var v, o, c, m, g, y, w = t(e.of),
            x = t.position.getWithinInfo(e.within),
            D = t.position.getScrollInfo(x),
            b = (e.collision || "flip").split(" "),
            k = {};
        y = p(w);
        if (w[0].preventDefault) {
            e.at = "left top"
        };
        o = y.width;
        c = y.height;
        m = y.offset;
        g = t.extend({}, m);
        t.each(["my", "at"], function() {
            var t = (e[this] || "").split(" "),
                i, s;
            if (t.length === 1) {
                t = r.test(t[0]) ? t.concat(["center"]) : l.test(t[0]) ? ["center"].concat(t) : ["center", "center"]
            };
            t[0] = r.test(t[0]) ? t[0] : "center";
            t[1] = l.test(t[1]) ? t[1] : "center";
            i = h.exec(t[0]);
            s = h.exec(t[1]);
            k[this] = [i ? i[0] : 0, s ? s[0] : 0];
            e[this] = [u.exec(t[0])[0], u.exec(t[1])[0]]
        });
        if (b.length === 1) {
            b[1] = b[0]
        };
        if (e.at[0] === "right") {
            g.left += o
        } else if (e.at[0] === "center") {
            g.left += o / 2
        };
        if (e.at[1] === "bottom") {
            g.top += c
        } else if (e.at[1] === "center") {
            g.top += c / 2
        };
        v = f(k.at, o, c);
        g.left += v[0];
        g.top += v[1];
        return this.each(function() {
            var p, y, l = t(this),
                h = l.outerWidth(),
                u = l.outerHeight(),
                C = n(this, "marginLeft"),
                I = n(this, "marginTop"),
                P = h + C + n(this, "marginRight") + D.width,
                T = u + I + n(this, "marginBottom") + D.height,
                r = t.extend({}, g),
                d = f(k.my, l.outerWidth(), l.outerHeight());
            if (e.my[0] === "right") {
                r.left -= h
            } else if (e.my[0] === "center") {
                r.left -= h / 2
            };
            if (e.my[1] === "bottom") {
                r.top -= u
            } else if (e.my[1] === "center") {
                r.top -= u / 2
            };
            r.left += d[0];
            r.top += d[1];
            if (!t.support.offsetFractions) {
                r.left = a(r.left);
                r.top = a(r.top)
            };
            p = {
                marginLeft: C,
                marginTop: I
            };
            t.each(["left", "top"], function(i, s) {
                if (t.ui.position[b[i]]) {
                    t.ui.position[b[i]][s](r, {
                        targetWidth: o,
                        targetHeight: c,
                        elemWidth: h,
                        elemHeight: u,
                        collisionPosition: p,
                        collisionWidth: P,
                        collisionHeight: T,
                        offset: [v[0] + d[0], v[1] + d[1]],
                        my: e.my,
                        at: e.at,
                        within: x,
                        elem: l
                    })
                }
            });
            if (e.using) {
                y = function(t) {
                    var a = m.left - r.left,
                        d = a + o - h,
                        f = m.top - r.top,
                        p = f + c - u,
                        n = {
                            target: {
                                element: w,
                                left: m.left,
                                top: m.top,
                                width: o,
                                height: c
                            },
                            element: {
                                element: l,
                                left: r.left,
                                top: r.top,
                                width: h,
                                height: u
                            },
                            horizontal: d < 0 ? "left" : a > 0 ? "right" : "center",
                            vertical: p < 0 ? "top" : f > 0 ? "bottom" : "middle"
                        };
                    if (o < h && i(a + d) < o) {
                        n.horizontal = "center"
                    };
                    if (c < u && i(f + p) < c) {
                        n.vertical = "middle"
                    };
                    if (s(i(a), i(d)) > s(i(f), i(p))) {
                        n.important = "horizontal"
                    } else {
                        n.important = "vertical"
                    };
                    e.using.call(this, t, n)
                }
            };
            l.offset(t.extend(r, {
                using: y
            }))
        })
    };
    t.ui.position = {
        fit: {
            left: function(t, e) {
                var a = e.within,
                    n = a.isWindow ? a.scrollLeft : a.offset.left,
                    r = a.width,
                    l = t.left - e.collisionPosition.marginLeft,
                    i = n - l,
                    o = l + e.collisionWidth - r - n,
                    h;
                if (e.collisionWidth > r) {
                    if (i > 0 && o <= 0) {
                        h = t.left + i + e.collisionWidth - r - n;
                        t.left += i - h
                    } else if (o > 0 && i <= 0) {
                        t.left = n
                    } else {
                        if (i > o) {
                            t.left = n + r - e.collisionWidth
                        } else {
                            t.left = n
                        }
                    }
                } else if (i > 0) {
                    t.left += i
                } else if (o > 0) {
                    t.left -= o
                } else {
                    t.left = s(t.left - l, t.left)
                }
            },
            top: function(t, e) {
                var r = e.within,
                    n = r.isWindow ? r.scrollTop : r.offset.top,
                    a = e.within.height,
                    l = t.top - e.collisionPosition.marginTop,
                    i = n - l,
                    o = l + e.collisionHeight - a - n,
                    h;
                if (e.collisionHeight > a) {
                    if (i > 0 && o <= 0) {
                        h = t.top + i + e.collisionHeight - a - n;
                        t.top += i - h
                    } else if (o > 0 && i <= 0) {
                        t.top = n
                    } else {
                        if (i > o) {
                            t.top = n + a - e.collisionHeight
                        } else {
                            t.top = n
                        }
                    }
                } else if (i > 0) {
                    t.top += i
                } else if (o > 0) {
                    t.top -= o
                } else {
                    t.top = s(t.top - l, t.top)
                }
            }
        },
        flip: {
            left: function(t, e) {
                var s = e.within,
                    p = s.offset.left + s.scrollLeft,
                    u = s.width,
                    r = s.isWindow ? s.scrollLeft : s.offset.left,
                    c = t.left - e.collisionPosition.marginLeft,
                    f = c - r,
                    d = c + e.collisionWidth - u - r,
                    n = e.my[0] === "left" ? -e.elemWidth : e.my[0] === "right" ? e.elemWidth : 0,
                    o = e.at[0] === "left" ? e.targetWidth : e.at[0] === "right" ? -e.targetWidth : 0,
                    a = -2 * e.offset[0],
                    l, h;
                if (f < 0) {
                    l = t.left + n + o + a + e.collisionWidth - u - p;
                    if (l < 0 || l < i(f)) {
                        t.left += n + o + a
                    }
                } else if (d > 0) {
                    h = t.left - e.collisionPosition.marginLeft + n + o + a - r;
                    if (h > 0 || i(h) < d) {
                        t.left += n + o + a
                    }
                }
            },
            top: function(t, e) {
                var s = e.within,
                    p = s.offset.top + s.scrollTop,
                    f = s.height,
                    r = s.isWindow ? s.scrollTop : s.offset.top,
                    d = t.top - e.collisionPosition.marginTop,
                    l = d - r,
                    h = d + e.collisionHeight - f - r,
                    g = e.my[1] === "top",
                    n = g ? -e.elemHeight : e.my[1] === "bottom" ? e.elemHeight : 0,
                    o = e.at[1] === "top" ? e.targetHeight : e.at[1] === "bottom" ? -e.targetHeight : 0,
                    a = -2 * e.offset[1],
                    u, c;
                if (l < 0) {
                    c = t.top + n + o + a + e.collisionHeight - f - p;
                    if ((t.top + n + o + a) > l && (c < 0 || c < i(l))) {
                        t.top += n + o + a
                    }
                } else if (h > 0) {
                    u = t.top - e.collisionPosition.marginTop + n + o + a - r;
                    if ((t.top + n + o + a) > h && (u > 0 || i(u) < h)) {
                        t.top += n + o + a
                    }
                }
            }
        },
        flipfit: {
            left: function() {
                t.ui.position.flip.left.apply(this, arguments);
                t.ui.position.fit.left.apply(this, arguments)
            },
            top: function() {
                t.ui.position.flip.top.apply(this, arguments);
                t.ui.position.fit.top.apply(this, arguments)
            }
        }
    };
    (function() {
        var e, i, s, n, o, a = document.getElementsByTagName("body")[0],
            r = document.createElement("div");
        e = document.createElement(a ? "div" : "body");
        s = {
            visibility: "hidden",
            width: 0,
            height: 0,
            border: 0,
            margin: 0,
            background: "none"
        };
        if (a) {
            t.extend(s, {
                position: "absolute",
                left: "-1000px",
                top: "-1000px"
            })
        };
        for (o in s) {
            e.style[o] = s[o]
        };
        e.appendChild(r);
        i = a || document.documentElement;
        i.insertBefore(e, i.firstChild);
        r.style.cssText = "position: absolute; left: 10.7432222px;";
        n = t(r).offset().left;
        t.support.offsetFractions = n > 10 && n < 11;
        e.innerHTML = "";
        i.removeChild(e)
    })()
}(jQuery));
(function(t, e) {
    t.widget("ui.progressbar", {
        version: "1.10.3",
        options: {
            max: 100,
            value: 0,
            change: null,
            complete: null
        },
        min: 0,
        _create: function() {
            this.oldValue = this.options.value = this._constrainedValue();
            this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({
                role: "progressbar",
                "aria-valuemin": this.min
            });
            this.valueDiv = t("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element);
            this._refreshValue()
        },
        _destroy: function() {
            this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");
            this.valueDiv.remove()
        },
        value: function(t) {
            if (t === e) {
                return this.options.value
            };
            this.options.value = this._constrainedValue(t);
            this._refreshValue()
        },
        _constrainedValue: function(t) {
            if (t === e) {
                t = this.options.value
            };
            this.indeterminate = t === !1;
            if (typeof t !== "number") {
                t = 0
            };
            return this.indeterminate ? !1 : Math.min(this.options.max, Math.max(this.min, t))
        },
        _setOptions: function(t) {
            var e = t.value;
            delete t.value;
            this._super(t);
            this.options.value = this._constrainedValue(e);
            this._refreshValue()
        },
        _setOption: function(t, e) {
            if (t === "max") {
                e = Math.max(this.min, e)
            };
            this._super(t, e)
        },
        _percentage: function() {
            return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min)
        },
        _refreshValue: function() {
            var e = this.options.value,
                i = this._percentage();
            this.valueDiv.toggle(this.indeterminate || e > this.min).toggleClass("ui-corner-right", e === this.options.max).width(i.toFixed(0) + "%");
            this.element.toggleClass("ui-progressbar-indeterminate", this.indeterminate);
            if (this.indeterminate) {
                this.element.removeAttr("aria-valuenow");
                if (!this.overlayDiv) {
                    this.overlayDiv = t("<div class='ui-progressbar-overlay'></div>").appendTo(this.valueDiv)
                }
            } else {
                this.element.attr({
                    "aria-valuemax": this.options.max,
                    "aria-valuenow": e
                });
                if (this.overlayDiv) {
                    this.overlayDiv.remove();
                    this.overlayDiv = null
                }
            };
            if (this.oldValue !== e) {
                this.oldValue = e;
                this._trigger("change")
            };
            if (e === this.options.max) {
                this._trigger("complete")
            }
        }
    })
})(jQuery);
(function(t, e) {
    var i = 5;
    t.widget("ui.slider", t.ui.mouse, {
        version: "1.10.3",
        widgetEventPrefix: "slide",
        options: {
            animate: !1,
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: !1,
            step: 1,
            value: 0,
            values: null,
            change: null,
            slide: null,
            start: null,
            stop: null
        },
        _create: function() {
            this._keySliding = !1;
            this._mouseSliding = !1;
            this._animateOff = !0;
            this._handleIndex = null;
            this._detectOrientation();
            this._mouseInit();
            this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget ui-widget-content ui-corner-all");
            this._refresh();
            this._setOption("disabled", this.options.disabled);
            this._animateOff = !1
        },
        _refresh: function() {
            this._createRange();
            this._createHandles();
            this._setupEvents();
            this._refreshValue()
        },
        _createHandles: function() {
            var s, i, n = this.options,
                e = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),
                a = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",
                o = [];
            i = (n.values && n.values.length) || 1;
            if (e.length > i) {
                e.slice(i).remove();
                e = e.slice(0, i)
            };
            for (s = e.length; s < i; s++) {
                o.push(a)
            };
            this.handles = e.add(t(o.join("")).appendTo(this.element));
            this.handle = this.handles.eq(0);
            this.handles.each(function(e) {
                t(this).data("ui-slider-handle-index", e)
            })
        },
        _createRange: function() {
            var e = this.options,
                i = "";
            if (e.range) {
                if (e.range === !0) {
                    if (!e.values) {
                        e.values = [this._valueMin(), this._valueMin()]
                    } else if (e.values.length && e.values.length !== 2) {
                        e.values = [e.values[0], e.values[0]]
                    } else if (t.isArray(e.values)) {
                        e.values = e.values.slice(0)
                    }
                };
                if (!this.range || !this.range.length) {
                    this.range = t("<div></div>").appendTo(this.element);
                    i = "ui-slider-range ui-widget-header ui-corner-all"
                } else {
                    this.range.removeClass("ui-slider-range-min ui-slider-range-max").css({
                        "left": "",
                        "bottom": ""
                    })
                };
                this.range.addClass(i + ((e.range === "min" || e.range === "max") ? " ui-slider-range-" + e.range : ""))
            } else {
                this.range = t([])
            }
        },
        _setupEvents: function() {
            var t = this.handles.add(this.range).filter("a");
            this._off(t);
            this._on(t, this._handleEvents);
            this._hoverable(t);
            this._focusable(t)
        },
        _destroy: function() {
            this.handles.remove();
            this.range.remove();
            this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all");
            this._mouseDestroy()
        },
        _mouseCapture: function(e) {
            var l, o, s, i, n, h, a, u, r = this,
                c = this.options;
            if (c.disabled) {
                return !1
            };
            this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight()
            };
            this.elementOffset = this.element.offset();
            l = {
                x: e.pageX,
                y: e.pageY
            };
            o = this._normValueFromMouse(l);
            s = this._valueMax() - this._valueMin() + 1;
            this.handles.each(function(e) {
                var a = Math.abs(o - r.values(e));
                if ((s > a) || (s === a && (e === r._lastChangedValue || r.values(e) === c.min))) {
                    s = a;
                    i = t(this);
                    n = e
                }
            });
            h = this._start(e, n);
            if (h === !1) {
                return !1
            };
            this._mouseSliding = !0;
            this._handleIndex = n;
            i.addClass("ui-state-active").focus();
            a = i.offset();
            u = !t(e.target).parents().addBack().is(".ui-slider-handle");
            this._clickOffset = u ? {
                left: 0,
                top: 0
            } : {
                left: e.pageX - a.left - (i.width() / 2),
                top: e.pageY - a.top - (i.height() / 2) - (parseInt(i.css("borderTopWidth"), 10) || 0) - (parseInt(i.css("borderBottomWidth"), 10) || 0) + (parseInt(i.css("marginTop"), 10) || 0)
            };
            if (!this.handles.hasClass("ui-state-hover")) {
                this._slide(e, n, o)
            };
            this._animateOff = !0;
            return !0
        },
        _mouseStart: function() {
            return !0
        },
        _mouseDrag: function(t) {
            var e = {
                    x: t.pageX,
                    y: t.pageY
                },
                i = this._normValueFromMouse(e);
            this._slide(t, this._handleIndex, i);
            return !1
        },
        _mouseStop: function(t) {
            this.handles.removeClass("ui-state-active");
            this._mouseSliding = !1;
            this._stop(t, this._handleIndex);
            this._change(t, this._handleIndex);
            this._handleIndex = null;
            this._clickOffset = null;
            this._animateOff = !1;
            return !1
        },
        _detectOrientation: function() {
            this.orientation = (this.options.orientation === "vertical") ? "vertical" : "horizontal"
        },
        _normValueFromMouse: function(t) {
            var i, s, e, n, o;
            if (this.orientation === "horizontal") {
                i = this.elementSize.width;
                s = t.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)
            } else {
                i = this.elementSize.height;
                s = t.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)
            };
            e = (s / i);
            if (e > 1) {
                e = 1
            };
            if (e < 0) {
                e = 0
            };
            if (this.orientation === "vertical") {
                e = 1 - e
            };
            n = this._valueMax() - this._valueMin();
            o = this._valueMin() + e * n;
            return this._trimAlignValue(o)
        },
        _start: function(t, e) {
            var i = {
                handle: this.handles[e],
                value: this.value()
            };
            if (this.options.values && this.options.values.length) {
                i.value = this.values(e);
                i.values = this.values()
            };
            return this._trigger("start", t, i)
        },
        _slide: function(t, e, i) {
            var s, o, n;
            if (this.options.values && this.options.values.length) {
                s = this.values(e ? 0 : 1);
                if ((this.options.values.length === 2 && this.options.range === !0) && ((e === 0 && i > s) || (e === 1 && i < s))) {
                    i = s
                };
                if (i !== this.values(e)) {
                    o = this.values();
                    o[e] = i;
                    n = this._trigger("slide", t, {
                        handle: this.handles[e],
                        value: i,
                        values: o
                    });
                    s = this.values(e ? 0 : 1);
                    if (n !== !1) {
                        this.values(e, i, !0)
                    }
                }
            } else {
                if (i !== this.value()) {
                    n = this._trigger("slide", t, {
                        handle: this.handles[e],
                        value: i
                    });
                    if (n !== !1) {
                        this.value(i)
                    }
                }
            }
        },
        _stop: function(t, e) {
            var i = {
                handle: this.handles[e],
                value: this.value()
            };
            if (this.options.values && this.options.values.length) {
                i.value = this.values(e);
                i.values = this.values()
            };
            this._trigger("stop", t, i)
        },
        _change: function(t, e) {
            if (!this._keySliding && !this._mouseSliding) {
                var i = {
                    handle: this.handles[e],
                    value: this.value()
                };
                if (this.options.values && this.options.values.length) {
                    i.value = this.values(e);
                    i.values = this.values()
                };
                this._lastChangedValue = e;
                this._trigger("change", t, i)
            }
        },
        value: function(t) {
            if (arguments.length) {
                this.options.value = this._trimAlignValue(t);
                this._refreshValue();
                this._change(null, 0);
                return
            };
            return this._value()
        },
        values: function(e, i) {
            var n, o, s;
            if (arguments.length > 1) {
                this.options.values[e] = this._trimAlignValue(i);
                this._refreshValue();
                this._change(null, e);
                return
            };
            if (arguments.length) {
                if (t.isArray(arguments[0])) {
                    n = this.options.values;
                    o = arguments[0];
                    for (s = 0; s < n.length; s += 1) {
                        n[s] = this._trimAlignValue(o[s]);
                        this._change(null, s)
                    };
                    this._refreshValue()
                } else {
                    if (this.options.values && this.options.values.length) {
                        return this._values(e)
                    } else {
                        return this.value()
                    }
                }
            } else {
                return this._values()
            }
        },
        _setOption: function(e, i) {
            var s, n = 0;
            if (e === "range" && this.options.range === !0) {
                if (i === "min") {
                    this.options.value = this._values(0);
                    this.options.values = null
                } else if (i === "max") {
                    this.options.value = this._values(this.options.values.length - 1);
                    this.options.values = null
                }
            };
            if (t.isArray(this.options.values)) {
                n = this.options.values.length
            };
            t.Widget.prototype._setOption.apply(this, arguments);
            switch (e) {
                case "orientation":
                    this._detectOrientation();
                    this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation);
                    this._refreshValue();
                    break;
                case "value":
                    this._animateOff = !0;
                    this._refreshValue();
                    this._change(null, 0);
                    this._animateOff = !1;
                    break;
                case "values":
                    this._animateOff = !0;
                    this._refreshValue();
                    for (s = 0; s < n; s += 1) {
                        this._change(null, s)
                    };
                    this._animateOff = !1;
                    break;
                case "min":
                case "max":
                    this._animateOff = !0;
                    this._refreshValue();
                    this._animateOff = !1;
                    break;
                case "range":
                    this._animateOff = !0;
                    this._refresh();
                    this._animateOff = !1;
                    break
            }
        },
        _value: function() {
            var t = this.options.value;
            t = this._trimAlignValue(t);
            return t
        },
        _values: function(t) {
            var s, e, i;
            if (arguments.length) {
                s = this.options.values[t];
                s = this._trimAlignValue(s);
                return s
            } else if (this.options.values && this.options.values.length) {
                e = this.options.values.slice();
                for (i = 0; i < e.length; i += 1) {
                    e[i] = this._trimAlignValue(e[i])
                };
                return e
            } else {
                return []
            }
        },
        _trimAlignValue: function(t) {
            if (t <= this._valueMin()) {
                return this._valueMin()
            };
            if (t >= this._valueMax()) {
                return this._valueMax()
            };
            var e = (this.options.step > 0) ? this.options.step : 1,
                i = (t - this._valueMin()) % e,
                s = t - i;
            if (Math.abs(i) * 2 >= e) {
                s += (i > 0) ? e : (-e)
            };
            return parseFloat(s.toFixed(5))
        },
        _valueMin: function() {
            return this.options.min
        },
        _valueMax: function() {
            return this.options.max
        },
        _refreshValue: function() {
            var l, e, u, o, h, a = this.options.range,
                i = this.options,
                s = this,
                n = (!this._animateOff) ? i.animate : !1,
                r = {};
            if (this.options.values && this.options.values.length) {
                this.handles.each(function(o) {
                    e = (s.values(o) - s._valueMin()) / (s._valueMax() - s._valueMin()) * 100;
                    r[s.orientation === "horizontal" ? "left" : "bottom"] = e + "%";
                    t(this).stop(1, 1)[n ? "animate" : "css"](r, i.animate);
                    if (s.options.range === !0) {
                        if (s.orientation === "horizontal") {
                            if (o === 0) {
                                s.range.stop(1, 1)[n ? "animate" : "css"]({
                                    left: e + "%"
                                }, i.animate)
                            };
                            if (o === 1) {
                                s.range[n ? "animate" : "css"]({
                                    width: (e - l) + "%"
                                }, {
                                    queue: !1,
                                    duration: i.animate
                                })
                            }
                        } else {
                            if (o === 0) {
                                s.range.stop(1, 1)[n ? "animate" : "css"]({
                                    bottom: (e) + "%"
                                }, i.animate)
                            };
                            if (o === 1) {
                                s.range[n ? "animate" : "css"]({
                                    height: (e - l) + "%"
                                }, {
                                    queue: !1,
                                    duration: i.animate
                                })
                            }
                        }
                    };
                    l = e
                })
            } else {
                u = this.value();
                o = this._valueMin();
                h = this._valueMax();
                e = (h !== o) ? (u - o) / (h - o) * 100 : 0;
                r[this.orientation === "horizontal" ? "left" : "bottom"] = e + "%";
                this.handle.stop(1, 1)[n ? "animate" : "css"](r, i.animate);
                if (a === "min" && this.orientation === "horizontal") {
                    this.range.stop(1, 1)[n ? "animate" : "css"]({
                        width: e + "%"
                    }, i.animate)
                };
                if (a === "max" && this.orientation === "horizontal") {
                    this.range[n ? "animate" : "css"]({
                        width: (100 - e) + "%"
                    }, {
                        queue: !1,
                        duration: i.animate
                    })
                };
                if (a === "min" && this.orientation === "vertical") {
                    this.range.stop(1, 1)[n ? "animate" : "css"]({
                        height: e + "%"
                    }, i.animate)
                };
                if (a === "max" && this.orientation === "vertical") {
                    this.range[n ? "animate" : "css"]({
                        height: (100 - e) + "%"
                    }, {
                        queue: !1,
                        duration: i.animate
                    })
                }
            }
        },
        _handleEvents: {
            keydown: function(e) {
                var r, n, s, o, a = t(e.target).data("ui-slider-handle-index");
                switch (e.keyCode) {
                    case t.ui.keyCode.HOME:
                    case t.ui.keyCode.END:
                    case t.ui.keyCode.PAGE_UP:
                    case t.ui.keyCode.PAGE_DOWN:
                    case t.ui.keyCode.UP:
                    case t.ui.keyCode.RIGHT:
                    case t.ui.keyCode.DOWN:
                    case t.ui.keyCode.LEFT:
                        e.preventDefault();
                        if (!this._keySliding) {
                            this._keySliding = !0;
                            t(e.target).addClass("ui-state-active");
                            r = this._start(e, a);
                            if (r === !1) {
                                return
                            }
                        };
                        break
                };
                o = this.options.step;
                if (this.options.values && this.options.values.length) {
                    n = s = this.values(a)
                } else {
                    n = s = this.value()
                };
                switch (e.keyCode) {
                    case t.ui.keyCode.HOME:
                        s = this._valueMin();
                        break;
                    case t.ui.keyCode.END:
                        s = this._valueMax();
                        break;
                    case t.ui.keyCode.PAGE_UP:
                        s = this._trimAlignValue(n + ((this._valueMax() - this._valueMin()) / i));
                        break;
                    case t.ui.keyCode.PAGE_DOWN:
                        s = this._trimAlignValue(n - ((this._valueMax() - this._valueMin()) / i));
                        break;
                    case t.ui.keyCode.UP:
                    case t.ui.keyCode.RIGHT:
                        if (n === this._valueMax()) {
                            return
                        };
                        s = this._trimAlignValue(n + o);
                        break;
                    case t.ui.keyCode.DOWN:
                    case t.ui.keyCode.LEFT:
                        if (n === this._valueMin()) {
                            return
                        };
                        s = this._trimAlignValue(n - o);
                        break
                };
                this._slide(e, a, s)
            },
            click: function(t) {
                t.preventDefault()
            },
            keyup: function(e) {
                var i = t(e.target).data("ui-slider-handle-index");
                if (this._keySliding) {
                    this._keySliding = !1;
                    this._stop(e, i);
                    this._change(e, i);
                    t(e.target).removeClass("ui-state-active")
                }
            }
        }
    })
}(jQuery));
(function(t) {
    function e(t) {
        return function() {
            var e = this.element.val();
            t.apply(this, arguments);
            this._refresh();
            if (e !== this.element.val()) {
                this._trigger("change")
            }
        }
    };
    t.widget("ui.spinner", {
        version: "1.10.3",
        defaultElement: "<input>",
        widgetEventPrefix: "spin",
        options: {
            culture: null,
            icons: {
                down: "ui-icon-triangle-1-s",
                up: "ui-icon-triangle-1-n"
            },
            incremental: !0,
            max: null,
            min: null,
            numberFormat: null,
            page: 10,
            step: 1,
            change: null,
            spin: null,
            start: null,
            stop: null
        },
        _create: function() {
            this._setOption("max", this.options.max);
            this._setOption("min", this.options.min);
            this._setOption("step", this.options.step);
            this._value(this.element.val(), !0);
            this._draw();
            this._on(this._events);
            this._refresh();
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _getCreateOptions: function() {
            var e = {},
                i = this.element;
            t.each(["min", "max", "step"], function(t, s) {
                var n = i.attr(s);
                if (n !== undefined && n.length) {
                    e[s] = n
                }
            });
            return e
        },
        _events: {
            keydown: function(t) {
                if (this._start(t) && this._keydown(t)) {
                    t.preventDefault()
                }
            },
            keyup: "_stop",
            focus: function() {
                this.previous = this.element.val()
            },
            blur: function(t) {
                if (this.cancelBlur) {
                    delete this.cancelBlur;
                    return
                };
                this._stop();
                this._refresh();
                if (this.previous !== this.element.val()) {
                    this._trigger("change", t)
                }
            },
            mousewheel: function(t, e) {
                if (!e) {
                    return
                };
                if (!this.spinning && !this._start(t)) {
                    return !1
                };
                this._spin((e > 0 ? 1 : -1) * this.options.step, t);
                clearTimeout(this.mousewheelTimer);
                this.mousewheelTimer = this._delay(function() {
                    if (this.spinning) {
                        this._stop(t)
                    }
                }, 100);
                t.preventDefault()
            },
            "mousedown .ui-spinner-button": function(e) {
                var i;
                i = this.element[0] === this.document[0].activeElement ? this.previous : this.element.val();

                function s() {
                    var t = this.element[0] === this.document[0].activeElement;
                    if (!t) {
                        this.element.focus();
                        this.previous = i;
                        this._delay(function() {
                            this.previous = i
                        })
                    }
                };
                e.preventDefault();
                s.call(this);
                this.cancelBlur = !0;
                this._delay(function() {
                    delete this.cancelBlur;
                    s.call(this)
                });
                if (this._start(e) === !1) {
                    return
                };
                this._repeat(null, t(e.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, e)
            },
            "mouseup .ui-spinner-button": "_stop",
            "mouseenter .ui-spinner-button": function(e) {
                if (!t(e.currentTarget).hasClass("ui-state-active")) {
                    return
                };
                if (this._start(e) === !1) {
                    return !1
                };
                this._repeat(null, t(e.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, e)
            },
            "mouseleave .ui-spinner-button": "_stop"
        },
        _draw: function() {
            var t = this.uiSpinner = this.element.addClass("ui-spinner-input").attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());
            this.element.attr("role", "spinbutton");
            this.buttons = t.find(".ui-spinner-button").attr("tabIndex", -1).button().removeClass("ui-corner-all");
            if (this.buttons.height() > Math.ceil(t.height() * 0.5) && t.height() > 0) {
                t.height(t.height())
            };
            if (this.options.disabled) {
                this.disable()
            }
        },
        _keydown: function(e) {
            var s = this.options,
                i = t.ui.keyCode;
            switch (e.keyCode) {
                case i.UP:
                    this._repeat(null, 1, e);
                    return !0;
                case i.DOWN:
                    this._repeat(null, -1, e);
                    return !0;
                case i.PAGE_UP:
                    this._repeat(null, s.page, e);
                    return !0;
                case i.PAGE_DOWN:
                    this._repeat(null, -s.page, e);
                    return !0
            };
            return !1
        },
        _uiSpinnerHtml: function() {
            return "<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>"
        },
        _buttonHtml: function() {
            return "<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon " + this.options.icons.up + "'>&#9650;</span></a><a class='ui-spinner-button ui-spinner-down ui-corner-br'><span class='ui-icon " + this.options.icons.down + "'>&#9660;</span></a>"
        },
        _start: function(t) {
            if (!this.spinning && this._trigger("start", t) === !1) {
                return !1
            };
            if (!this.counter) {
                this.counter = 1
            };
            this.spinning = !0;
            return !0
        },
        _repeat: function(t, e, i) {
            t = t || 500;
            clearTimeout(this.timer);
            this.timer = this._delay(function() {
                this._repeat(40, e, i)
            }, t);
            this._spin(e * this.options.step, i)
        },
        _spin: function(t, e) {
            var i = this.value() || 0;
            if (!this.counter) {
                this.counter = 1
            };
            i = this._adjustValue(i + t * this._increment(this.counter));
            if (!this.spinning || this._trigger("spin", e, {
                    value: i
                }) !== !1) {
                this._value(i);
                this.counter++
            }
        },
        _increment: function(e) {
            var i = this.options.incremental;
            if (i) {
                return t.isFunction(i) ? i(e) : Math.floor(e * e * e / 50000 - e * e / 500 + 17 * e / 200 + 1)
            };
            return 1
        },
        _precision: function() {
            var t = this._precisionOf(this.options.step);
            if (this.options.min !== null) {
                t = Math.max(t, this._precisionOf(this.options.min))
            };
            return t
        },
        _precisionOf: function(t) {
            var e = t.toString(),
                i = e.indexOf(".");
            return i === -1 ? 0 : e.length - i - 1
        },
        _adjustValue: function(t) {
            var s, i, e = this.options;
            s = e.min !== null ? e.min : 0;
            i = t - s;
            i = Math.round(i / e.step) * e.step;
            t = s + i;
            t = parseFloat(t.toFixed(this._precision()));
            if (e.max !== null && t > e.max) {
                return e.max
            };
            if (e.min !== null && t < e.min) {
                return e.min
            };
            return t
        },
        _stop: function(t) {
            if (!this.spinning) {
                return
            };
            clearTimeout(this.timer);
            clearTimeout(this.mousewheelTimer);
            this.counter = 0;
            this.spinning = !1;
            this._trigger("stop", t)
        },
        _setOption: function(t, e) {
            if (t === "culture" || t === "numberFormat") {
                var i = this._parse(this.element.val());
                this.options[t] = e;
                this.element.val(this._format(i));
                return
            };
            if (t === "max" || t === "min" || t === "step") {
                if (typeof e === "string") {
                    e = this._parse(e)
                }
            };
            if (t === "icons") {
                this.buttons.first().find(".ui-icon").removeClass(this.options.icons.up).addClass(e.up);
                this.buttons.last().find(".ui-icon").removeClass(this.options.icons.down).addClass(e.down)
            };
            this._super(t, e);
            if (t === "disabled") {
                if (e) {
                    this.element.prop("disabled", !0);
                    this.buttons.button("disable")
                } else {
                    this.element.prop("disabled", !1);
                    this.buttons.button("enable")
                }
            }
        },
        _setOptions: e(function(t) {
            this._super(t);
            this._value(this.element.val())
        }),
        _parse: function(t) {
            if (typeof t === "string" && t !== "") {
                t = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(t, 10, this.options.culture) : +t
            };
            return t === "" || isNaN(t) ? null : t
        },
        _format: function(t) {
            if (t === "") {
                return ""
            };
            return window.Globalize && this.options.numberFormat ? Globalize.format(t, this.options.numberFormat, this.options.culture) : t
        },
        _refresh: function() {
            this.element.attr({
                "aria-valuemin": this.options.min,
                "aria-valuemax": this.options.max,
                "aria-valuenow": this._parse(this.element.val())
            })
        },
        _value: function(t, e) {
            var i;
            if (t !== "") {
                i = this._parse(t);
                if (i !== null) {
                    if (!e) {
                        i = this._adjustValue(i)
                    };
                    t = this._format(i)
                }
            };
            this.element.val(t);
            this._refresh()
        },
        _destroy: function() {
            this.element.removeClass("ui-spinner-input").prop("disabled", !1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");
            this.uiSpinner.replaceWith(this.element)
        },
        stepUp: e(function(t) {
            this._stepUp(t)
        }),
        _stepUp: function(t) {
            if (this._start()) {
                this._spin((t || 1) * this.options.step);
                this._stop()
            }
        },
        stepDown: e(function(t) {
            this._stepDown(t)
        }),
        _stepDown: function(t) {
            if (this._start()) {
                this._spin((t || 1) * -this.options.step);
                this._stop()
            }
        },
        pageUp: e(function(t) {
            this._stepUp((t || 1) * this.options.page)
        }),
        pageDown: e(function(t) {
            this._stepDown((t || 1) * this.options.page)
        }),
        value: function(t) {
            if (!arguments.length) {
                return this._parse(this.element.val())
            };
            e(this._value).call(this, t)
        },
        widget: function() {
            return this.uiSpinner
        }
    })
}(jQuery));
(function(t, e) {
    var n = 0,
        i = /#.*$/;

    function o() {
        return ++n
    };

    function s(t) {
        return t.hash.length > 1 && decodeURIComponent(t.href.replace(i, "")) === decodeURIComponent(location.href.replace(i, ""))
    };
    t.widget("ui.tabs", {
        version: "1.10.3",
        delay: 300,
        options: {
            active: null,
            collapsible: !1,
            event: "click",
            heightStyle: "content",
            hide: null,
            show: null,
            activate: null,
            beforeActivate: null,
            beforeLoad: null,
            load: null
        },
        _create: function() {
            var i = this,
                e = this.options;
            this.running = !1;
            this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible", e.collapsible).delegate(".ui-tabs-nav > li", "mousedown" + this.eventNamespace, function(e) {
                if (t(this).is(".ui-state-disabled")) {
                    e.preventDefault()
                }
            }).delegate(".ui-tabs-anchor", "focus" + this.eventNamespace, function() {
                if (t(this).closest("li").is(".ui-state-disabled")) {
                    this.blur()
                }
            });
            this._processTabs();
            e.active = this._initialActive();
            if (t.isArray(e.disabled)) {
                e.disabled = t.unique(e.disabled.concat(t.map(this.tabs.filter(".ui-state-disabled"), function(t) {
                    return i.tabs.index(t)
                }))).sort()
            };
            if (this.options.active !== !1 && this.anchors.length) {
                this.active = this._findActive(e.active)
            } else {
                this.active = t()
            };
            this._refresh();
            if (this.active.length) {
                this.load(e.active)
            }
        },
        _initialActive: function() {
            var e = this.options.active,
                i = this.options.collapsible,
                s = location.hash.substring(1);
            if (e === null) {
                if (s) {
                    this.tabs.each(function(i, n) {
                        if (t(n).attr("aria-controls") === s) {
                            e = i;
                            return !1
                        }
                    })
                };
                if (e === null) {
                    e = this.tabs.index(this.tabs.filter(".ui-tabs-active"))
                };
                if (e === null || e === -1) {
                    e = this.tabs.length ? 0 : !1
                }
            };
            if (e !== !1) {
                e = this.tabs.index(this.tabs.eq(e));
                if (e === -1) {
                    e = i ? !1 : 0
                }
            };
            if (!i && e === !1 && this.anchors.length) {
                e = 0
            };
            return e
        },
        _getCreateEventData: function() {
            return {
                tab: this.active,
                panel: !this.active.length ? t() : this._getPanelForTab(this.active)
            }
        },
        _tabKeydown: function(e) {
            var s = t(this.document[0].activeElement).closest("li"),
                i = this.tabs.index(s),
                n = !0;
            if (this._handlePageNav(e)) {
                return
            };
            switch (e.keyCode) {
                case t.ui.keyCode.RIGHT:
                case t.ui.keyCode.DOWN:
                    i++;
                    break;
                case t.ui.keyCode.UP:
                case t.ui.keyCode.LEFT:
                    n = !1;
                    i--;
                    break;
                case t.ui.keyCode.END:
                    i = this.anchors.length - 1;
                    break;
                case t.ui.keyCode.HOME:
                    i = 0;
                    break;
                case t.ui.keyCode.SPACE:
                    e.preventDefault();
                    clearTimeout(this.activating);
                    this._activate(i);
                    return;
                case t.ui.keyCode.ENTER:
                    e.preventDefault();
                    clearTimeout(this.activating);
                    this._activate(i === this.options.active ? !1 : i);
                    return;
                default:
                    return
            };
            e.preventDefault();
            clearTimeout(this.activating);
            i = this._focusNextTab(i, n);
            if (!e.ctrlKey) {
                s.attr("aria-selected", "false");
                this.tabs.eq(i).attr("aria-selected", "true");
                this.activating = this._delay(function() {
                    this.option("active", i)
                }, this.delay)
            }
        },
        _panelKeydown: function(e) {
            if (this._handlePageNav(e)) {
                return
            };
            if (e.ctrlKey && e.keyCode === t.ui.keyCode.UP) {
                e.preventDefault();
                this.active.focus()
            }
        },
        _handlePageNav: function(e) {
            if (e.altKey && e.keyCode === t.ui.keyCode.PAGE_UP) {
                this._activate(this._focusNextTab(this.options.active - 1, !1));
                return !0
            };
            if (e.altKey && e.keyCode === t.ui.keyCode.PAGE_DOWN) {
                this._activate(this._focusNextTab(this.options.active + 1, !0));
                return !0
            }
        },
        _findNextTab: function(e, i) {
            var s = this.tabs.length - 1;

            function n() {
                if (e > s) {
                    e = 0
                };
                if (e < 0) {
                    e = s
                };
                return e
            }
            while (t.inArray(n(), this.options.disabled) !== -1) {
                e = i ? e + 1 : e - 1
            };
            return e
        },
        _focusNextTab: function(t, e) {
            t = this._findNextTab(t, e);
            this.tabs.eq(t).focus();
            return t
        },
        _setOption: function(t, e) {
            if (t === "active") {
                this._activate(e);
                return
            };
            if (t === "disabled") {
                this._setupDisabled(e);
                return
            };
            this._super(t, e);
            if (t === "collapsible") {
                this.element.toggleClass("ui-tabs-collapsible", e);
                if (!e && this.options.active === !1) {
                    this._activate(0)
                }
            };
            if (t === "event") {
                this._setupEvents(e)
            };
            if (t === "heightStyle") {
                this._setupHeightStyle(e)
            }
        },
        _tabId: function(t) {
            return t.attr("aria-controls") || "ui-tabs-" + o()
        },
        _sanitizeSelector: function(t) {
            return t ? t.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : ""
        },
        refresh: function() {
            var e = this.options,
                i = this.tablist.children(":has(a[href])");
            e.disabled = t.map(i.filter(".ui-state-disabled"), function(t) {
                return i.index(t)
            });
            this._processTabs();
            if (e.active === !1 || !this.anchors.length) {
                e.active = !1;
                this.active = t()
            } else if (this.active.length && !t.contains(this.tablist[0], this.active[0])) {
                if (this.tabs.length === e.disabled.length) {
                    e.active = !1;
                    this.active = t()
                } else {
                    this._activate(this._findNextTab(Math.max(0, e.active - 1), !1))
                }
            } else {
                e.active = this.tabs.index(this.active)
            };
            this._refresh()
        },
        _refresh: function() {
            this._setupDisabled(this.options.disabled);
            this._setupEvents(this.options.event);
            this._setupHeightStyle(this.options.heightStyle);
            this.tabs.not(this.active).attr({
                "aria-selected": "false",
                tabIndex: -1
            });
            this.panels.not(this._getPanelForTab(this.active)).hide().attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            });
            if (!this.active.length) {
                this.tabs.eq(0).attr("tabIndex", 0)
            } else {
                this.active.addClass("ui-tabs-active ui-state-active").attr({
                    "aria-selected": "true",
                    tabIndex: 0
                });
                this._getPanelForTab(this.active).show().attr({
                    "aria-expanded": "true",
                    "aria-hidden": "false"
                })
            }
        },
        _processTabs: function() {
            var e = this;
            this.tablist = this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role", "tablist");
            this.tabs = this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({
                role: "tab",
                tabIndex: -1
            });
            this.anchors = this.tabs.map(function() {
                return t("a", this)[0]
            }).addClass("ui-tabs-anchor").attr({
                role: "presentation",
                tabIndex: -1
            });
            this.panels = t();
            this.anchors.each(function(i, n) {
                var a, o, l, h = t(n).uniqueId().attr("id"),
                    r = t(n).closest("li"),
                    u = r.attr("aria-controls");
                if (s(n)) {
                    a = n.hash;
                    o = e.element.find(e._sanitizeSelector(a))
                } else {
                    l = e._tabId(r);
                    a = "#" + l;
                    o = e.element.find(a);
                    if (!o.length) {
                        o = e._createPanel(l);
                        o.insertAfter(e.panels[i - 1] || e.tablist)
                    };
                    o.attr("aria-live", "polite")
                };
                if (o.length) {
                    e.panels = e.panels.add(o)
                };
                if (u) {
                    r.data("ui-tabs-aria-controls", u)
                };
                r.attr({
                    "aria-controls": a.substring(1),
                    "aria-labelledby": h
                });
                o.attr("aria-labelledby", h)
            });
            this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role", "tabpanel")
        },
        _getList: function() {
            return this.element.find("ol,ul").eq(0)
        },
        _createPanel: function(e) {
            return t("<div>").attr("id", e).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", !0)
        },
        _setupDisabled: function(e) {
            if (t.isArray(e)) {
                if (!e.length) {
                    e = !1
                } else if (e.length === this.anchors.length) {
                    e = !0
                }
            };
            for (var i = 0, s;
                (s = this.tabs[i]); i++) {
                if (e === !0 || t.inArray(i, e) !== -1) {
                    t(s).addClass("ui-state-disabled").attr("aria-disabled", "true")
                } else {
                    t(s).removeClass("ui-state-disabled").removeAttr("aria-disabled")
                }
            };
            this.options.disabled = e
        },
        _setupEvents: function(e) {
            var i = {
                click: function(t) {
                    t.preventDefault()
                }
            };
            if (e) {
                t.each(e.split(" "), function(t, e) {
                    i[e] = "_eventHandler"
                })
            };
            this._off(this.anchors.add(this.tabs).add(this.panels));
            this._on(this.anchors, i);
            this._on(this.tabs, {
                keydown: "_tabKeydown"
            });
            this._on(this.panels, {
                keydown: "_panelKeydown"
            });
            this._focusable(this.tabs);
            this._hoverable(this.tabs)
        },
        _setupHeightStyle: function(e) {
            var i, s = this.element.parent();
            if (e === "fill") {
                i = s.height();
                i -= this.element.outerHeight() - this.element.height();
                this.element.siblings(":visible").each(function() {
                    var e = t(this),
                        s = e.css("position");
                    if (s === "absolute" || s === "fixed") {
                        return
                    };
                    i -= e.outerHeight(!0)
                });
                this.element.children().not(this.panels).each(function() {
                    i -= t(this).outerHeight(!0)
                });
                this.panels.each(function() {
                    t(this).height(Math.max(0, i - t(this).innerHeight() + t(this).height()))
                }).css("overflow", "auto")
            } else if (e === "auto") {
                i = 0;
                this.panels.each(function() {
                    i = Math.max(i, t(this).height("").height())
                }).height(i)
            }
        },
        _eventHandler: function(e) {
            var n = this.options,
                s = this.active,
                u = t(e.currentTarget),
                i = u.closest("li"),
                o = i[0] === s[0],
                a = o && n.collapsible,
                r = a ? t() : this._getPanelForTab(i),
                l = !s.length ? t() : this._getPanelForTab(s),
                h = {
                    oldTab: s,
                    oldPanel: l,
                    newTab: a ? t() : i,
                    newPanel: r
                };
            e.preventDefault();
            if (i.hasClass("ui-state-disabled") || i.hasClass("ui-tabs-loading") || this.running || (o && !n.collapsible) || (this._trigger("beforeActivate", e, h) === !1)) {
                return
            };
            n.active = a ? !1 : this.tabs.index(i);
            this.active = o ? t() : i;
            if (this.xhr) {
                this.xhr.abort()
            };
            if (!l.length && !r.length) {
                t.error("jQuery UI Tabs: Mismatching fragment identifier.")
            };
            if (r.length) {
                this.load(this.tabs.index(i), e)
            };
            this._toggle(e, h)
        },
        _toggle: function(e, i) {
            var n = this,
                s = i.newPanel,
                o = i.oldPanel;
            this.running = !0;

            function a() {
                n.running = !1;
                n._trigger("activate", e, i)
            };

            function r() {
                i.newTab.closest("li").addClass("ui-tabs-active ui-state-active");
                if (s.length && n.options.show) {
                    n._show(s, n.options.show, a)
                } else {
                    s.show();
                    a()
                }
            };
            if (o.length && this.options.hide) {
                this._hide(o, this.options.hide, function() {
                    i.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
                    r()
                })
            } else {
                i.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
                o.hide();
                r()
            };
            o.attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            });
            i.oldTab.attr("aria-selected", "false");
            if (s.length && o.length) {
                i.oldTab.attr("tabIndex", -1)
            } else if (s.length) {
                this.tabs.filter(function() {
                    return t(this).attr("tabIndex") === 0
                }).attr("tabIndex", -1)
            };
            s.attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            });
            i.newTab.attr({
                "aria-selected": "true",
                tabIndex: 0
            })
        },
        _activate: function(e) {
            var s, i = this._findActive(e);
            if (i[0] === this.active[0]) {
                return
            };
            if (!i.length) {
                i = this.active
            };
            s = i.find(".ui-tabs-anchor")[0];
            this._eventHandler({
                target: s,
                currentTarget: s,
                preventDefault: t.noop
            })
        },
        _findActive: function(e) {
            return e === !1 ? t() : this.tabs.eq(e)
        },
        _getIndex: function(t) {
            if (typeof t === "string") {
                t = this.anchors.index(this.anchors.filter("[href$='" + t + "']"))
            };
            return t
        },
        _destroy: function() {
            if (this.xhr) {
                this.xhr.abort()
            };
            this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible");
            this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role");
            this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeUniqueId();
            this.tabs.add(this.panels).each(function() {
                if (t.data(this, "ui-tabs-destroy")) {
                    t(this).remove()
                } else {
                    t(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")
                }
            });
            this.tabs.each(function() {
                var e = t(this),
                    i = e.data("ui-tabs-aria-controls");
                if (i) {
                    e.attr("aria-controls", i).removeData("ui-tabs-aria-controls")
                } else {
                    e.removeAttr("aria-controls")
                }
            });
            this.panels.show();
            if (this.options.heightStyle !== "content") {
                this.panels.css("height", "")
            }
        },
        enable: function(i) {
            var s = this.options.disabled;
            if (s === !1) {
                return
            };
            if (i === e) {
                s = !1
            } else {
                i = this._getIndex(i);
                if (t.isArray(s)) {
                    s = t.map(s, function(t) {
                        return t !== i ? t : null
                    })
                } else {
                    s = t.map(this.tabs, function(t, e) {
                        return e !== i ? e : null
                    })
                }
            };
            this._setupDisabled(s)
        },
        disable: function(i) {
            var s = this.options.disabled;
            if (s === !0) {
                return
            };
            if (i === e) {
                s = !0
            } else {
                i = this._getIndex(i);
                if (t.inArray(i, s) !== -1) {
                    return
                };
                if (t.isArray(s)) {
                    s = t.merge([i], s).sort()
                } else {
                    s = [i]
                }
            };
            this._setupDisabled(s)
        },
        load: function(e, i) {
            e = this._getIndex(e);
            var o = this,
                n = this.tabs.eq(e),
                r = n.find(".ui-tabs-anchor"),
                a = this._getPanelForTab(n),
                l = {
                    tab: n,
                    panel: a
                };
            if (s(r[0])) {
                return
            };
            this.xhr = t.ajax(this._ajaxSettings(r, i, l));
            if (this.xhr && this.xhr.statusText !== "canceled") {
                n.addClass("ui-tabs-loading");
                a.attr("aria-busy", "true");
                this.xhr.success(function(t) {
                    setTimeout(function() {
                        a.html(t);
                        o._trigger("load", i, l)
                    }, 1)
                }).complete(function(t, e) {
                    setTimeout(function() {
                        if (e === "abort") {
                            o.panels.stop(!1, !0)
                        };
                        n.removeClass("ui-tabs-loading");
                        a.removeAttr("aria-busy");
                        if (t === o.xhr) {
                            delete o.xhr
                        }
                    }, 1)
                })
            }
        },
        _ajaxSettings: function(e, i, s) {
            var n = this;
            return {
                url: e.attr("href"),
                beforeSend: function(e, o) {
                    return n._trigger("beforeLoad", i, t.extend({
                        jqXHR: e,
                        ajaxSettings: o
                    }, s))
                }
            }
        },
        _getPanelForTab: function(e) {
            var i = t(e).attr("aria-controls");
            return this.element.find(this._sanitizeSelector("#" + i))
        }
    })
})(jQuery);
(function(t) {
    var e = 0;

    function i(e, i) {
        var s = (e.attr("aria-describedby") || "").split(/\s+/);
        s.push(i);
        e.data("ui-tooltip-id", i).attr("aria-describedby", t.trim(s.join(" ")))
    };

    function s(e) {
        var n = e.data("ui-tooltip-id"),
            i = (e.attr("aria-describedby") || "").split(/\s+/),
            s = t.inArray(n, i);
        if (s !== -1) {
            i.splice(s, 1)
        };
        e.removeData("ui-tooltip-id");
        i = t.trim(i.join(" "));
        if (i) {
            e.attr("aria-describedby", i)
        } else {
            e.removeAttr("aria-describedby")
        }
    };
    t.widget("ui.tooltip", {
        version: "1.10.3",
        options: {
            content: function() {
                var e = t(this).attr("title") || "";
                return t("<a>").text(e).html()
            },
            hide: !0,
            items: "[title]:not([disabled])",
            position: {
                my: "left top+15",
                at: "left bottom",
                collision: "flipfit flip"
            },
            show: !0,
            tooltipClass: null,
            track: !1,
            close: null,
            open: null
        },
        _create: function() {
            this._on({
                mouseover: "open",
                focusin: "open"
            });
            this.tooltips = {};
            this.parents = {};
            if (this.options.disabled) {
                this._disable()
            }
        },
        _setOption: function(e, i) {
            var s = this;
            if (e === "disabled") {
                this[i ? "_disable" : "_enable"]();
                this.options[e] = i;
                return
            };
            this._super(e, i);
            if (e === "content") {
                t.each(this.tooltips, function(t, e) {
                    s._updateContent(e)
                })
            }
        },
        _disable: function() {
            var e = this;
            t.each(this.tooltips, function(i, s) {
                var n = t.Event("blur");
                n.target = n.currentTarget = s[0];
                e.close(n, !0)
            });
            this.element.find(this.options.items).addBack().each(function() {
                var e = t(this);
                if (e.is("[title]")) {
                    e.data("ui-tooltip-title", e.attr("title")).attr("title", "")
                }
            })
        },
        _enable: function() {
            this.element.find(this.options.items).addBack().each(function() {
                var e = t(this);
                if (e.data("ui-tooltip-title")) {
                    e.attr("title", e.data("ui-tooltip-title"))
                }
            })
        },
        open: function(e) {
            var s = this,
                i = t(e ? e.target : this.element).closest(this.options.items);
            if (!i.length || i.data("ui-tooltip-id")) {
                return
            };
            if (i.attr("title")) {
                i.data("ui-tooltip-title", i.attr("title"))
            };
            i.data("ui-tooltip-open", !0);
            if (e && e.type === "mouseover") {
                i.parents().each(function() {
                    var e = t(this),
                        i;
                    if (e.data("ui-tooltip-open")) {
                        i = t.Event("blur");
                        i.target = i.currentTarget = this;
                        s.close(i, !0)
                    };
                    if (e.attr("title")) {
                        e.uniqueId();
                        s.parents[this.id] = {
                            element: this,
                            title: e.attr("title")
                        };
                        e.attr("title", "")
                    }
                })
            };
            this._updateContent(i, e)
        },
        _updateContent: function(t, e) {
            var i, s = this.options.content,
                n = this,
                o = e ? e.type : null;
            if (typeof s === "string") {
                return this._open(e, t, s)
            };
            i = s.call(t[0], function(i) {
                if (!t.data("ui-tooltip-open")) {
                    return
                };
                n._delay(function() {
                    if (e) {
                        e.type = o
                    };
                    this._open(e, t, i)
                })
            });
            if (i) {
                this._open(e, t, i)
            }
        },
        _open: function(e, s, n) {
            var o, a, h, r = t.extend({}, this.options.position);
            if (!n) {
                return
            };
            o = this._find(s);
            if (o.length) {
                o.find(".ui-tooltip-content").html(n);
                return
            };
            if (s.is("[title]")) {
                if (e && e.type === "mouseover") {
                    s.attr("title", "")
                } else {
                    s.removeAttr("title")
                }
            };
            o = this._tooltip(s);
            i(s, o.attr("id"));
            o.find(".ui-tooltip-content").html(n);

            function l(t) {
                r.of = t;
                if (o.is(":hidden")) {
                    return
                };
                o.position(r)
            };
            if (this.options.track && e && /^mouse/.test(e.type)) {
                this._on(this.document, {
                    mousemove: l
                });
                l(e)
            } else {
                o.position(t.extend({
                    of: s
                }, this.options.position))
            };
            o.hide();
            this._show(o, this.options.show);
            if (this.options.show && this.options.show.delay) {
                h = this.delayedShow = setInterval(function() {
                    if (o.is(":visible")) {
                        l(r.of);
                        clearInterval(h)
                    }
                }, t.fx.interval)
            };
            this._trigger("open", e, {
                tooltip: o
            });
            a = {
                keyup: function(e) {
                    if (e.keyCode === t.ui.keyCode.ESCAPE) {
                        var i = t.Event(e);
                        i.currentTarget = s[0];
                        this.close(i, !0)
                    }
                },
                remove: function() {
                    this._removeTooltip(o)
                }
            };
            if (!e || e.type === "mouseover") {
                a.mouseleave = "close"
            };
            if (!e || e.type === "focusin") {
                a.focusout = "close"
            };
            this._on(!0, s, a)
        },
        close: function(e) {
            var o = this,
                i = t(e ? e.currentTarget : this.element),
                n = this._find(i);
            if (this.closing) {
                return
            };
            clearInterval(this.delayedShow);
            if (i.data("ui-tooltip-title")) {
                i.attr("title", i.data("ui-tooltip-title"))
            };
            s(i);
            n.stop(!0);
            this._hide(n, this.options.hide, function() {
                o._removeTooltip(t(this))
            });
            i.removeData("ui-tooltip-open");
            this._off(i, "mouseleave focusout keyup");
            if (i[0] !== this.element[0]) {
                this._off(i, "remove")
            };
            this._off(this.document, "mousemove");
            if (e && e.type === "mouseleave") {
                t.each(this.parents, function(e, i) {
                    t(i.element).attr("title", i.title);
                    delete o.parents[e]
                })
            };
            this.closing = !0;
            this._trigger("close", e, {
                tooltip: n
            });
            this.closing = !1
        },
        _tooltip: function(i) {
            var n = "ui-tooltip-" + e++,
                s = t("<div>").attr({
                    id: n,
                    role: "tooltip"
                }).addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content " + (this.options.tooltipClass || ""));
            t("<div>").addClass("ui-tooltip-content").appendTo(s);
            s.appendTo(this.document[0].body);
            this.tooltips[n] = i;
            return s
        },
        _find: function(e) {
            var i = e.data("ui-tooltip-id");
            return i ? t("#" + i) : t()
        },
        _removeTooltip: function(t) {
            t.remove();
            delete this.tooltips[t.attr("id")]
        },
        _destroy: function() {
            var e = this;
            t.each(this.tooltips, function(i, s) {
                var n = t.Event("blur");
                n.target = n.currentTarget = s[0];
                e.close(n, !0);
                t("#" + i).remove();
                if (s.data("ui-tooltip-title")) {
                    s.attr("title", s.data("ui-tooltip-title"));
                    s.removeData("ui-tooltip-title")
                }
            })
        }
    })
}(jQuery));
(function(t, i) {
    var o = 'ui-state-active',
        s = 'ui-state-hover',
        p = 'ui-state-disabled',
        e = t.ui.keyCode,
        l = e.UP,
        c = e.DOWN,
        a = e.RIGHT,
        f = e.LEFT,
        r = e.PAGE_UP,
        u = e.PAGE_DOWN,
        h = e.HOME,
        d = e.END,
        m = t.browser.msie,
        g = t.browser.mozilla ? 'DOMMouseScroll' : 'mousewheel',
        n = '.uispinner',
        v = [l, c, a, f, r, u, h, d, e.BACKSPACE, e.DELETE, e.TAB],
        b;
    t.widget('ui.spinner', {
        options: {
            min: null,
            max: null,
            allowNull: !1,
            group: '',
            point: '.',
            prefix: '',
            suffix: '',
            places: null,
            defaultStep: 1,
            largeStep: 10,
            mouseWheel: !0,
            increment: 'slow',
            className: null,
            showOn: 'always',
            width: 16,
            upIconClass: 'ui-icon-triangle-1-n',
            downIconClass: 'ui-icon-triangle-1-s',
            format: function(t, e) {
                var i = this,
                    s = /(\d+)(\d{3})/,
                    n = ((isNaN(t) ? 0 : Math.abs(t)).toFixed(e)) + '';
                for (n = n.replace('.', i.point); s.test(n) && i.group; n = n.replace(s, '$1' + i.group + '$2')) {};
                return (t < 0 ? '-' : '') + i.prefix + n + i.suffix
            },
            parse: function(t) {
                var e = this;
                if (e.group == '.') t = t.replace('.', '');
                if (e.point != '.') t = t.replace(e.point, '.');
                return parseFloat(t.replace(/[^0-9\-\.]/g, ''))
            }
        },
        _create: function() {
            var t = this,
                e = t.element,
                n = e.attr('type');
            if (!e.is('input') || ((n != 'text') && (n != 'number'))) {
                console.error('Invalid target for ui.spinner');
                return
            };
            t._procOptions(!0);
            t._createButtons(e);
            if (!e.is(':enabled')) t.disable()
        },
        _createButtons: function(i) {
            function R(t) {
                return t == 'auto' ? 0 : parseInt(t)
            };
            var p = this,
                w = p.options,
                I = w.className,
                y = w.width,
                C = w.showOn,
                k = t.support.boxModel,
                V = i.outerHeight(),
                D = p.oMargin = R(i.css('margin-right')),
                N = p.wrapper = i.css({
                    width: (p.oWidth = (k ? i.width() : i.outerWidth())) - y,
                    marginRight: D + y,
                    textAlign: 'right'
                }).after('<span class="ui-spinner ui-widget"></span>').next(),
                x = p.btnContainer = t('<div class="ui-spinner-buttons"><div class="ui-spinner-up ui-spinner-button ui-state-default ui-corner-tr"><span class="ui-icon ' + w.upIconClass + '">&nbsp;</span></div><div class="ui-spinner-down ui-spinner-button ui-state-default ui-corner-br"><span class="ui-icon ' + w.downIconClass + '">&nbsp;</span></div></div>'),
                S, A, g, W, M, F, O, T, B, E, G = i[0].dir == 'rtl';
            if (I) N.addClass(I);
            N.append(x.css({
                height: V,
                left: -y - D,
                top: (i.offset().top - N.offset().top) + 'px'
            }));
            g = p.buttons = x.find('.ui-spinner-button');
            g.css({
                width: y - (k ? g.outerWidth() - g.width() : 0),
                height: V / 2 - (k ? g.outerHeight() - g.height() : 0)
            });
            S = g[0];
            A = g[1];
            W = g.find('.ui-icon');
            W.css({
                marginLeft: (g.innerWidth() - W.width()) / 2,
                marginTop: (g.innerHeight() - W.height()) / 2
            });
            x.width(g.outerWidth());
            if (C != 'always') x.css('opacity', 0);
            if (C == 'hover' || C == 'both') g.add(i).bind('mouseenter' + n, function() {
                H(function() {
                    O = !0;
                    if (!p.focused || (C == 'hover')) p.showButtons()
                })
            }).bind('mouseleave' + n, function() {
                H(function() {
                    O = !1;
                    if (!p.focused || (C == 'hover')) p.hideButtons()
                })
            });
            g.hover(function() {
                p.buttons.removeClass(s);
                if (!w.disabled) t(this).addClass(s)
            }, function() {
                t(this).removeClass(s)
            }).mousedown(K).mouseup(P).mouseout(P);
            if (m) g.dblclick(function() {
                if (!w.disabled) {
                    p._change();
                    p._doSpin((this === S ? 1 : -1) * w.step)
                };
                return !1
            }).bind('selectstart', function() {
                return !1
            });
            i.bind('keydown' + n, function(e) {
                var n, m, i, s = e.keyCode;
                if (e.ctrl || e.alt) return !0;
                if (L(s)) B = !0;
                if (T) return !1;
                switch (s) {
                    case l:
                    case r:
                        n = 1;
                        m = s == r;
                        break;
                    case c:
                    case u:
                        n = -1;
                        m = s == u;
                        break;
                    case a:
                    case f:
                        n = (s == a) ^ G ? 1 : -1;
                        break;
                    case h:
                        i = p.options.min;
                        if (i != null) p._setValue(i);
                        return !1;
                    case d:
                        i = p.options.max;
                        i = p.options.max;
                        if (i != null) p._setValue(i);
                        return !1
                };
                if (n) {
                    if (!T && !w.disabled) {
                        keyDir = n;
                        t(n > 0 ? S : A).addClass(o);
                        T = !0;
                        p._startSpin(n, m)
                    };
                    return !1
                }
            }).bind('keyup' + n, function(t) {
                if (t.ctrl || t.alt) return !0;
                if (L(e)) B = !1;
                switch (t.keyCode) {
                    case l:
                    case a:
                    case r:
                    case c:
                    case f:
                    case u:
                        g.removeClass(o);
                        p._stopSpin();
                        T = !1;
                        return !1
                }
            }).bind('keypress' + n, function(t) {
                if (U(t.keyCode, t.charCode)) return !1
            }).bind('change' + n, function() {
                p._change()
            }).bind('focus' + n, function() {
                function t() {
                    p.element.select()
                };
                m ? t() : setTimeout(t, 0);
                p.focused = !0;
                b = p;
                if (!O && (C == 'focus' || C == 'both')) p.showButtons()
            }).bind('blur' + n, function() {
                p.focused = !1;
                if (!O && (C == 'focus' || C == 'both')) p.hideButtons()
            });

            function L(t) {
                for (var e = 0; e < v.length; e++)
                    if (v[e] == t) return !0;
                return !1
            };

            function U(t, e) {
                if (B) return !1;
                var n = String.fromCharCode(e || t),
                    i = p.options;
                if ((n >= '0') && (n <= '9') || (n == '-')) return !1;
                if (((p.places > 0) && (n == i.point)) || (n == i.group)) return !1;
                return !0
            };

            function H(t) {
                if (M) {
                    if (t === F) return;
                    clearTimeout(M)
                };
                F = t;
                M = setTimeout(e, 100);

                function e() {
                    M = 0;
                    t()
                }
            };

            function K() {
                if (!w.disabled) {
                    var e = p.element[0],
                        n = (this === S ? 1 : -1);
                    e.focus();
                    e.select();
                    t(this).addClass(o);
                    E = !0;
                    p._startSpin(n)
                };
                return !1
            };

            function P() {
                if (E) {
                    t(this).removeClass(o);
                    p._stopSpin();
                    E = !1
                };
                return !1
            }
        },
        _procOptions: function(t) {
            var u = this,
                a = u.element,
                i = u.options,
                s = i.min,
                o = i.max,
                l = i.step,
                c = i.places,
                r = -1,
                e;
            if (i.increment == 'slow') i.increment = [{
                count: 1,
                mult: 1,
                delay: 250
            }, {
                count: 3,
                mult: 1,
                delay: 100
            }, {
                count: 0,
                mult: 1,
                delay: 50
            }];
            else if (i.increment == 'fast') i.increment = [{
                count: 1,
                mult: 1,
                delay: 250
            }, {
                count: 19,
                mult: 1,
                delay: 100
            }, {
                count: 80,
                mult: 1,
                delay: 20
            }, {
                count: 100,
                mult: 10,
                delay: 20
            }, {
                count: 0,
                mult: 100,
                delay: 20
            }];
            if ((s == null) && ((e = a.attr('min')) != null)) s = parseFloat(e);
            if ((o == null) && ((e = a.attr('max')) != null)) o = parseFloat(e);
            if (!l && ((e = a.attr('step')) != null))
                if (e != 'any') {
                    l = parseFloat(e);
                    i.largeStep *= l
                };
            i.step = l = l || i.defaultStep;
            if ((c == null) && ((e = l + '').indexOf('.') != -1)) c = e.length - e.indexOf('.') - 1;
            u.places = c;
            if ((o != null) && (s != null)) {
                if (s > o) s = o;
                r = Math.max(Math.max(r, i.format(o, c, a).length), i.format(s, c, a).length)
            };
            if (t) u.inputMaxLength = a[0].maxLength;
            e = u.inputMaxLength;
            if (e > 0) {
                r = r > 0 ? Math.min(e, r) : e;
                e = Math.pow(10, r) - 1;
                if ((o == null) || (o > e)) o = e;
                e = -(e + 1) / 10 + 1;
                if ((s == null) || (s < e)) s = e
            };
            if (r > 0) a.attr('maxlength', r);
            i.min = s;
            i.max = o;
            u._change();
            a.unbind(g + n);
            if (i.mouseWheel) a.bind(g + n, u._mouseWheel)
        },
        _mouseWheel: function(e) {
            var n = t.data(this, 'spinner');
            if (!n.options.disabled && n.focused && (b === n)) {
                n._change();
                n._doSpin(((e.wheelDelta || -e.detail) > 0 ? 1 : -1) * n.options.step);
                return !1
            }
        },
        _setTimer: function(t, e, i) {
            var n = this;
            n._stopSpin();
            n.timer = setInterval(s, t);

            function s() {
                n._spin(e, i)
            }
        },
        _stopSpin: function() {
            if (this.timer) {
                clearInterval(this.timer);
                this.timer = 0
            }
        },
        _startSpin: function(t, e) {
            var n = this,
                s = n.options,
                i = s.increment;
            n._change();
            n._doSpin(t * (e ? n.options.largeStep : n.options.step));
            if (i && i.length > 0) {
                n.counter = 0;
                n.incCounter = 0;
                n._setTimer(i[0].delay, t, e)
            }
        },
        _spin: function(t, n) {
            var e = this,
                s = e.options.increment,
                i = s[e.incCounter];
            e._doSpin(t * i.mult * (n ? e.options.largeStep : e.options.step));
            e.counter++;
            if ((e.counter > i.count) && (e.incCounter < s.length - 1)) {
                e.counter = 0;
                i = s[++e.incCounter];
                e._setTimer(i.delay, t, n)
            }
        },
        _doSpin: function(t) {
            var e = this,
                n = e.curvalue;
            if (n == null) n = (t > 0 ? e.options.min : e.options.max) || 0;
            e._setValue(n + t)
        },
        _parseValue: function() {
            var t = this.element.val();
            return t ? this.options.parse(t, this.element) : null
        },
        _validate: function(t) {
            var i = this.options,
                e = i.min,
                n = i.max;
            if ((t == null) && !i.allowNull) t = this.curvalue != null ? this.curvalue : e || n || 0;
            if ((n != null) && (t > n)) return n;
            else if ((e != null) && (t < e)) return e;
            else return t
        },
        _change: function() {
            var t = this,
                e = t._parseValue(),
                n = t.options.min,
                i = t.options.max;
            if (!t.selfChange) {
                if (isNaN(e)) e = t.curvalue;
                t._setValue(e, !0)
            }
        },
        _setOption: function(e, n) {
            t.Widget.prototype._setOption.call(this, e, n);
            this._procOptions()
        },
        increment: function() {
            this._doSpin(this.options.step)
        },
        decrement: function() {
            this._doSpin(-this.options.step)
        },
        showButtons: function(t) {
            var e = this.btnContainer.stop();
            if (t) e.css('opacity', 1);
            else e.fadeTo('fast', 1)
        },
        hideButtons: function(t) {
            var e = this.btnContainer.stop();
            if (t) e.css('opacity', 0);
            else e.fadeTo('fast', 0);
            this.buttons.removeClass(s)
        },
        _setValue: function(t, n) {
            var e = this;
            e.curvalue = t = e._validate(t);
            e.element.val(t != null ? e.options.format(t, e.places, e.element) : '');
            if (!n) {
                e.selfChange = !0;
                e.element.change();
                e.selfChange = !1
            }
        },
        value: function(t) {
            if (arguments.length) {
                this._setValue(t);
                return this.element
            };
            return this.curvalue
        },
        enable: function() {
            this.buttons.removeClass(p);
            this.element[0].disabled = !1;
            t.Widget.prototype.enable.call(this)
        },
        disable: function() {
            this.buttons.addClass(p).removeClass(s);
            this.element[0].disabled = !0;
            t.Widget.prototype.disable.call(this)
        },
        destroy: function(e) {
            this.wrapper.remove();
            this.element.unbind(n).css({
                width: this.oWidth,
                marginRight: this.oMargin
            });
            t.Widget.prototype.destroy.call(this)
        }
    })
})(jQuery);
/*
 jQuery UI Spinner 1.20

 Copyright (c) 2009-2010 Brant Burnett
 Dual licensed under the MIT or GPL Version 2 licenses.
*/
(function(j) {
    var s = "ui-state-active",
        l = j.ui.keyCode,
        C = l.UP,
        D = l.DOWN,
        t = l.RIGHT,
        E = l.LEFT,
        u = l.PAGE_UP,
        v = l.PAGE_DOWN,
        J = l.HOME,
        K = l.END,
        L = j.browser.msie,
        M = j.browser.mozilla ? "DOMMouseScroll" : "mousewheel",
        N = [C, D, t, E, u, v, J, K, l.BACKSPACE, l.DELETE, l.TAB],
        O;
    j.widget("ui.spinner", {
        options: {
            min: null,
            max: null,
            allowNull: false,
            group: "",
            point: ".",
            prefix: "",
            suffix: "",
            places: null,
            defaultStep: 1,
            largeStep: 10,
            mouseWheel: true,
            increment: "slow",
            className: null,
            showOn: "always",
            width: 16,
            upIconClass: "ui-icon-triangle-1-n",
            downIconClass: "ui-icon-triangle-1-s",
            format: function(a, b) {
                var d = /(\d+)(\d{3})/,
                    g = (isNaN(a) ? 0 : Math.abs(a)).toFixed(b) + "";
                for (g = g.replace(".", this.point); d.test(g) && this.group; g = g.replace(d, "$1" + this.group + "$2"));
                return (a < 0 ? "-" : "") + this.prefix + g + this.suffix
            },
            parse: function(a) {
                if (this.group == ".") a = a.replace(".", "");
                if (this.point != ".") a = a.replace(this.point, ".");
                return parseFloat(a.replace(/[^0-9\-\.]/g, ""))
            }
        },
        _create: function() {
            var a = this.element,
                b = a.attr("type");
            if (!a.is("input") || b != "text" && b != "number") console.error("Invalid target for ui.spinner");
            else {
                this._procOptions(true);
                this._createButtons(a);
                a.is(":enabled") || this.disable()
            }
        },
        _createButtons: function(a) {
            function b(e) {
                return e == "auto" ? 0 : parseInt(e)
            }

            function d(e) {
                for (var h = 0; h < N.length; h++)
                    if (N[h] == e) return true;
                return false
            }

            function g(e, h) {
                if (F) return false;
                var m = String.fromCharCode(h || e),
                    o = c.options;
                if (m >= "0" && m <= "9" || m == "-") return false;
                if (c.places > 0 && m == o.point || m == o.group) return false;
                return true
            }

            function i(e) {
                function h() {
                    w = 0;
                    e()
                }
                if (w) {
                    if (e === P) return;
                    clearTimeout(w)
                }
                P = e;
                w = setTimeout(h,
                    100)
            }

            function p() {
                if (!f.disabled) {
                    var e = c.element[0],
                        h = this === x ? 1 : -1;
                    e.focus();
                    e.select();
                    j(this).addClass(s);
                    G = true;
                    c._startSpin(h)
                }
                return false
            }

            function q() {
                if (G) {
                    j(this).removeClass(s);
                    c._stopSpin();
                    G = false
                }
                return false
            }
            var c = this,
                f = c.options,
                r = f.className,
                y = f.width,
                n = f.showOn,
                H = j.support.boxModel,
                Q = a.outerHeight(),
                R = c.oMargin = b(a.css("margin-right")),
                I = c.wrapper = a.css({
                    width: (c.oWidth = H ? a.width() : a.outerWidth()) - y,
                    marginRight: R + y,
                    textAlign: "right"
                }).after('<span class="ui-spinner ui-widget"></span>').next(),
                z = c.btnContainer = j('<div class="ui-spinner-buttons"><div class="ui-spinner-up ui-spinner-button ui-state-default ui-corner-tr"><span class="ui-icon ' + f.upIconClass + '">&nbsp;</span></div><div class="ui-spinner-down ui-spinner-button ui-state-default ui-corner-br"><span class="ui-icon ' + f.downIconClass + '">&nbsp;</span></div></div>'),
                x, S, k, w, P, A, B, F, G, T = a[0].dir == "rtl";
            r && I.addClass(r);
            I.append(z.css({
                height: Q,
                left: -y - R,
                top: a.offset().top - I.offset().top + "px"
            }));
            k = c.buttons = z.find(".ui-spinner-button");
            k.css({
                width: y - (H ? k.outerWidth() - k.width() : 0),
                height: Q / 2 - (H ? k.outerHeight() - k.height() : 0)
            });
            x = k[0];
            S = k[1];
            r = k.find(".ui-icon");
            r.css({
                marginLeft: (k.innerWidth() - r.width()) / 2,
                marginTop: (k.innerHeight() - r.height()) / 2
            });
            z.width(k.outerWidth());
            n != "always" && z.css("opacity", 0);
            if (n == "hover" || n == "both") k.add(a).bind("mouseenter.uispinner", function() {
                i(function() {
                    A = true;
                    if (!c.focused || n == "hover") c.showButtons()
                })
            }).bind("mouseleave.uispinner", function() {
                i(function() {
                    A = false;
                    if (!c.focused || n == "hover") c.hideButtons()
                })
            });
            k.hover(function() {
                c.buttons.removeClass("ui-state-hover");
                f.disabled || j(this).addClass("ui-state-hover")
            }, function() {
                j(this).removeClass("ui-state-hover")
            }).mousedown(p).mouseup(q).mouseout(q);
            L && k.dblclick(function() {
                if (!f.disabled) {
                    c._change();
                    c._doSpin((this === x ? 1 : -1) * f.step)
                }
                return false
            }).bind("selectstart", function() {
                return false
            });
            a.bind("keydown.uispinner", function(e) {
                var h, m, o = e.keyCode;
                if (e.ctrl || e.alt) return true;
                if (d(o)) F = true;
                if (B) return false;
                switch (o) {
                    case C:
                    case u:
                        h = 1;
                        m = o == u;
                        break;
                    case D:
                    case v:
                        h = -1;
                        m = o == v;
                        break;
                    case t:
                    case E:
                        h = o == t ^ T ? 1 : -1;
                        break;
                    case J:
                        e = c.options.min;
                        e != null && c._setValue(e);
                        return false;
                    case K:
                        e = c.options.max;
                        e != null && c._setValue(e);
                        return false
                }
                if (h) {
                    if (!B && !f.disabled) {
                        keyDir = h;
                        j(h > 0 ? x : S).addClass(s);
                        B = true;
                        c._startSpin(h, m)
                    }
                    return false
                }
            }).bind("keyup.uispinner", function(e) {
                if (e.ctrl || e.alt) return true;
                if (d(l)) F = false;
                switch (e.keyCode) {
                    case C:
                    case t:
                    case u:
                    case D:
                    case E:
                    case v:
                        k.removeClass(s);
                        c._stopSpin();
                        return B = false
                }
            }).bind("keypress.uispinner", function(e) {
                if (g(e.keyCode,
                        e.charCode)) return false
            }).bind("change.uispinner", function() {
                c._change()
            }).bind("focus.uispinner", function() {
                function e() {
                    c.element.select()
                }
                L ? e() : setTimeout(e, 0);
                c.focused = true;
                O = c;
                if (!A && (n == "focus" || n == "both")) c.showButtons()
            }).bind("blur.uispinner", function() {
                c.focused = false;
                if (!A && (n == "focus" || n == "both")) c.hideButtons()
            })
        },
        _procOptions: function(a) {
            var b = this.element,
                d = this.options,
                g = d.min,
                i = d.max,
                p = d.step,
                q = d.places,
                c = -1,
                f;
            if (d.increment == "slow") d.increment = [{
                count: 1,
                mult: 1,
                delay: 250
            }, {
                count: 3,
                mult: 1,
                delay: 100
            }, {
                count: 0,
                mult: 1,
                delay: 50
            }];
            else if (d.increment == "fast") d.increment = [{
                count: 1,
                mult: 1,
                delay: 250
            }, {
                count: 19,
                mult: 1,
                delay: 100
            }, {
                count: 80,
                mult: 1,
                delay: 20
            }, {
                count: 100,
                mult: 10,
                delay: 20
            }, {
                count: 0,
                mult: 100,
                delay: 20
            }];
            if (g == null && (f = b.attr("min")) != null) g = parseFloat(f);
            if (i == null && (f = b.attr("max")) != null) i = parseFloat(f);
            if (!p && (f = b.attr("step")) != null)
                if (f != "any") {
                    p = parseFloat(f);
                    d.largeStep *= p
                }
            d.step = p = p || d.defaultStep;
            if (q == null && (f = p + "").indexOf(".") != -1) q = f.length - f.indexOf(".") - 1;
            this.places =
                q;
            if (i != null && g != null) {
                if (g > i) g = i;
                c = Math.max(Math.max(c, d.format(i, q, b).length), d.format(g, q, b).length)
            }
            if (a) this.inputMaxLength = b[0].maxLength;
            f = this.inputMaxLength;
            if (f > 0) {
                c = c > 0 ? Math.min(f, c) : f;
                f = Math.pow(10, c) - 1;
                if (i == null || i > f) i = f;
                f = -(f + 1) / 10 + 1;
                if (g == null || g < f) g = f
            }
            c > 0 && b.attr("maxlength", c);
            d.min = g;
            d.max = i;
            this._change();
            b.unbind(M + ".uispinner");
            d.mouseWheel && b.bind(M + ".uispinner", this._mouseWheel)
        },
        _mouseWheel: function(a) {
            var b = j.data(this, "spinner");
            if (!b.options.disabled && b.focused && O === b) {
                b._change();
                b._doSpin(((a.wheelDelta || -a.detail) > 0 ? 1 : -1) * b.options.step);
                return false
            }
        },
        _setTimer: function(a, b, d) {
            function g() {
                i._spin(b, d)
            }
            var i = this;
            i._stopSpin();
            i.timer = setInterval(g, a)
        },
        _stopSpin: function() {
            if (this.timer) {
                clearInterval(this.timer);
                this.timer = 0
            }
        },
        _startSpin: function(a, b) {
            var d = this.options.increment;
            this._change();
            this._doSpin(a * (b ? this.options.largeStep : this.options.step));
            if (d && d.length > 0) {
                this.incCounter = this.counter = 0;
                this._setTimer(d[0].delay, a, b)
            }
        },
        _spin: function(a, b) {
            var d = this.options.increment,
                g = d[this.incCounter];
            this._doSpin(a * g.mult * (b ? this.options.largeStep : this.options.step));
            this.counter++;
            if (this.counter > g.count && this.incCounter < d.length - 1) {
                this.counter = 0;
                g = d[++this.incCounter];
                this._setTimer(g.delay, a, b)
            }
        },
        _doSpin: function(a) {
            var b = this.curvalue;
            if (b == null) b = (a > 0 ? this.options.min : this.options.max) || 0;
            this._setValue(b + a)
        },
        _parseValue: function() {
            var a = this.element.val();
            return a ? this.options.parse(a, this.element) : null
        },
        _validate: function(a) {
            var b = this.options,
                d = b.min,
                g = b.max;
            if (a ==
                null && !b.allowNull) a = this.curvalue != null ? this.curvalue : d || g || 0;
            return g != null && a > g ? g : d != null && a < d ? d : a
        },
        _change: function() {
            var a = this._parseValue();
            if (!this.selfChange) {
                if (isNaN(a)) a = this.curvalue;
                this._setValue(a, true)
            }
        },
        _setOption: function(a, b) {
            j.Widget.prototype._setOption.call(this, a, b);
            this._procOptions()
        },
        increment: function() {
            this._doSpin(this.options.step)
        },
        decrement: function() {
            this._doSpin(-this.options.step)
        },
        showButtons: function(a) {
            var b = this.btnContainer.stop();
            a ? b.css("opacity", 1) : b.fadeTo("fast",
                1)
        },
        hideButtons: function(a) {
            var b = this.btnContainer.stop();
            a ? b.css("opacity", 0) : b.fadeTo("fast", 0);
            this.buttons.removeClass("ui-state-hover")
        },
        _setValue: function(a, b) {
            this.curvalue = a = this._validate(a);
            this.element.val(a != null ? this.options.format(a, this.places, this.element) : "");
            if (!b) {
                this.selfChange = true;
                this.element.change();
                this.selfChange = false
            }
        },
        value: function(a) {
            if (arguments.length) {
                this._setValue(a);
                return this.element
            }
            return this.curvalue
        },
        enable: function() {
            this.buttons.removeClass("ui-state-disabled");
            this.element[0].disabled = false;
            j.Widget.prototype.enable.call(this)
        },
        disable: function() {
            this.buttons.addClass("ui-state-disabled").removeClass("ui-state-hover");
            this.element[0].disabled = true;
            j.Widget.prototype.disable.call(this)
        },
        destroy: function() {
            this.wrapper.remove();
            this.element.unbind(".uispinner").css({
                width: this.oWidth,
                marginRight: this.oMargin
            });
            j.Widget.prototype.destroy.call(this)
        }
    })
})(jQuery);; /**/
/*! http://mths.be/placeholder v2.0.7 by @mathias */
;
(function(t, a, e) {
    var o = 'placeholder' in a.createElement('input'),
        i = 'placeholder' in a.createElement('textarea'),
        n = e.fn,
        u = e.valHooks,
        h = e.propHooks,
        r, l;
    if (o && i) {
        l = n.placeholder = function() {
            return this
        };
        l.input = l.textarea = !0
    } else {
        l = n.placeholder = function() {
            var e = this;
            e.filter((o ? 'textarea' : ':input') + '[placeholder]').not('.placeholder').bind({
                'focus.placeholder': d,
                'blur.placeholder': c
            }).data('placeholder-enabled', !0).trigger('blur.placeholder');
            return e
        };
        l.input = o;
        l.textarea = i;
        r = {
            'get': function(a) {
                var t = e(a),
                    l = t.data('placeholder-password');
                if (l) {
                    return l[0].value
                };
                return t.data('placeholder-enabled') && t.hasClass('placeholder') ? '' : a.value
            },
            'set': function(t, l) {
                var r = e(t),
                    o = r.data('placeholder-password');
                if (o) {
                    return o[0].value = l
                };
                if (!r.data('placeholder-enabled')) {
                    return t.value = l
                };
                if (l == '') {
                    t.value = l;
                    if (t != a.activeElement) {
                        c.call(t)
                    }
                } else if (r.hasClass('placeholder')) {
                    d.call(t, !0, l) || (t.value = l)
                } else {
                    t.value = l
                };
                return r
            }
        };
        if (!o) {
            u.input = r;
            h.value = r
        };
        if (!i) {
            u.textarea = r;
            h.value = r
        };
        e(function() {
            e(a).delegate('form', 'submit.placeholder', function() {
                var a = e('.placeholder', this).each(d);
                setTimeout(function() {
                    a.each(c)
                }, 10)
            })
        });
        e(t).bind('beforeunload.placeholder', function() {
            e('.placeholder').each(function() {
                this.value = ''
            })
        })
    };

    function p(a) {
        var t = {};
        var l = /^jQuery\d+$/;
        e.each(a.attributes, function(a, e) {
            if (e.specified && !l.test(e.name)) {
                t[e.name] = e.value
            }
        });
        return t
    };

    function d(l, o) {
        var r = this,
            t = e(r);
        if (r.value == t.attr('placeholder') && t.hasClass('placeholder')) {
            if (t.data('placeholder-password')) {
                t = t.hide().next().show().attr('id', t.removeAttr('id').data('placeholder-id'));
                if (l === !0) {
                    return t[0].value = o
                };
                t.focus()
            } else {
                r.value = '';
                t.removeClass('placeholder');
                r == a.activeElement && r.select()
            }
        }
    };

    function c() {
        var t, l = this,
            a = e(l),
            r = this.id;
        if (l.value == '') {
            if (l.type == 'password') {
                if (!a.data('placeholder-textinput')) {
                    try {
                        t = a.clone().attr({
                            'type': 'text'
                        })
                    } catch (o) {
                        t = e('<input>').attr(e.extend(p(this), {
                            'type': 'text'
                        }))
                    };
                    t.removeAttr('name').data({
                        'placeholder-password': a,
                        'placeholder-id': r
                    }).bind('focus.placeholder', d);
                    a.data({
                        'placeholder-textinput': t,
                        'placeholder-id': r
                    }).before(t)
                };
                a = a.removeAttr('id').hide().prev().attr('id', r).show()
            };
            a.addClass('placeholder');
            a[0].value = a.attr('placeholder')
        } else {
            a.removeClass('placeholder')
        }
    }
}(this, document, jQuery));;
jQuery.browser = {};
(function() {
    jQuery.browser.msie = !1;
    jQuery.browser.version = 0;
    if (navigator.userAgent.match(/MSIE ([0-9]+)\./)) {
        jQuery.browser.msie = !0;
        jQuery.browser.version = RegExp.$1
    }
})();
(function(e, o, t, i, s) {
    o.behaviors.search_form = {
        attach: function(o, t) {
            e('#search-link:not(.bf-processed), .right-menu-block .search-link:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function(o) {
                    o.preventDefault();
                    e('#edit-search-block-form--2').focus();
                    if (e('#block-search-form').hasClass('default_state')) {
                        e('#block-search-form').animate({
                            'margin-top': '-5px'
                        }, 500);
                        e('#block-search-form').addClass('show')
                    } else {
                        e('#block-search-form').animate({
                            'margin-top': '30px'
                        }, 500);
                        e('#block-search-form').addClass('show')
                    }
                })
            });
            e('.close_header_search:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function(o) {
                    e('#block-search-form').animate({
                        'margin-top': '-110px'
                    }, 500);
                    e('#block-search-form').removeClass('show')
                })
            })
        }
    };
    o.behaviors.inputNumberfgghdfgdf = {
        attach: function(o, t) {
            e('.input_number:not(.bf-processed)').each(function() {
                e('.input_number').addClass('bf-processed').spinner({
                    min: 1,
                    max: 100,
                    increment: 'fast'
                })
            })
        }
    };
    o.behaviors.faq_scroll = {
        attach: function(o, i) {
            e('.section-faq a[href*=#]:not([href=#])').on('click', function(o) {
                o.preventDefault();
                if (location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') && location.hostname == this.hostname) {
                    var i = e(this.hash),
                        s = this.hash;
                    i = i.length ? i : e('[name=' + this.hash.slice(1) + ']');
                    if (i.length) {
                        e('html,body').animate({
                            scrollTop: i.offset().top - e('.fixed-header-navigation').outerHeight()
                        }, 500, 'swing', function() {
                            t.location.hash = s
                        })
                    }
                }
            })
        }
    };
    o.behaviors.country_anchor = {
        attach: function(o, t) {
            e('.self_country_anchor:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function(o) {
                    o.preventDefault();
                    if (e('.node-country-page').length > 0) {
                        e('html,body').animate({
                            scrollTop: e('.node-country-page .beschikbaar-nummers').offset().top - 60
                        }, 'slow')
                    } else {
                        e('html,body').animate({
                            scrollTop: e('#ontdek-hoe').offset().top - 60
                        }, 'slow')
                    }
                })
            })
        }
    };
    o.behaviors.placeholder = {
        attach: function(o, t) {
            e('input').placeholder();
            e('textarea').placeholder();
            e('.section-contact input').placeholder();
            e('.section-contact textarea').placeholder();
            e('.section-artikelen input,.section-categorieen input').placeholder();
            e('.page-node-213.section-samenwerken input, .page-node-213.section-samenwerkene textarea').placeholder();
            e('input').focus(function() {
                if (e(this).attr('placeholder') != '') {
                    e(this).attr('default_value', e(this).attr('placeholder'))
                };
                e(this).attr('placeholder', '')
            });
            e('input').blur(function() {
                if (e(this).val() == '') {
                    e(this).attr('placeholder', e(this).attr('default_value'))
                }
            });
            e('textarea').focus(function() {
                if (e(this).attr('placeholder') != '') {
                    e(this).attr('default_value', e(this).attr('placeholder'))
                };
                e(this).attr('placeholder', '')
            });
            e('textarea').blur(function() {
                if (e(this).val() == '') {
                    e(this).attr('placeholder', e(this).attr('default_value'))
                }
            })
        }
    };
    o.behaviors.inputValue = {
        attach: function(o, t) {
            e('.form-text.error, .form-textarea.error').focus(function() {
                e(this).removeClass('error')
            })
        }
    };
    o.behaviors.signature_besteloverzicht = {
        attach: function(o, t) {
            e('.pad:not(.bf-processed)').each(function() {
                e('.pad, .signature label').mousedown('click', function() {
                    e('.signature label').hide();
                    e('.pad.error').removeClass('error')
                })
            })
        }
    };
    o.behaviors.number_over = {
        attach: function(o, t) {
            e('.number_over:not(.bf-processed)').each(function() {
                e('.number_over').click(function() {
                    e(this).addClass('disabled');
                    e('#edit-number').focus()
                });
                e('#numbershop-search-product-form').focusout(function() {
                    var o = e('#edit-number').val(),
                        t = e('.number_over .number_word').text();
                    if (!o) {
                        e('.number_over').removeClass('disabled')
                    };
                    if (o == t) {
                        e('.number_over').removeClass('disabled')
                    }
                })
            })
        }
    };
    o.behaviors.mailchimp_showing = {
        attach: function(o, t) {
            if (e('.form-item-mergevars-EMAIL input').hasClass('error')) {
                e('#block-belfabriek-helper-subcribe-artikelens .artikelens_subscribe .artikelen-subscribe span').addClass('subcribe_open');
                e('.block-mailchimp-signup').show()
            };
            e('a.artikelen-subscribe').on('click', function(e) {
                e.preventDefault()
            });
            e('#block-belfabriek-helper-subcribe-artikelens .artikelens_subscribe .artikelen-subscribe:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function() {
                    e('#block-belfabriek-helper-subcribe-artikelens .artikelens_subscribe .artikelen-subscribe span').toggleClass('subcribe_open');
                    e('.block-mailchimp-signup').toggle()
                })
            });
            e('.scroll_popup_sb .form-submit').each(function() {
                e(this).addClass('bf-processed').click(function(o) {
                    var t = e('.scroll_popup_sb .form-text').val()
                })
            })
        }
    };
    o.behaviors.voorbelden_filter = {
        attach: function(o) {
            e('#edit-field-category-voorbelden-tid input').each(function() {
                if (e(this).is(':checked')) {
                    e(this).next().addClass('active_option')
                }
            })
        }
    };
    o.behaviors.mailchimp_subscription_popupclose = {
        attach: function(o, t) {
            e('.close_lightbox_button:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function() {
                    e('.time_popup_sb').hide();
                    e('#back_popup').hide()
                })
            });
            e('.close_lightbox_scroll:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function() {
                    e('.scroll_popup_sb').animate({
                        'right': '-750px'
                    }, 500)
                })
            });
            e('#back_popup:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function() {
                    e('.time_popup_sb').hide();
                    e('#back_popup').hide()
                })
            })
        }
    };
    o.behaviors.mailchimp_fadeOut = {
        attach: function(o, t) {
            if (e('.scroll_popup_sb, .time_popup_sb').length > 0) {
                e('.scroll_popup_sb:not(.bf-process), .time_popup_sb:not(.bf-process)').each(function() {
                    e(this).addClass('bf-process').find('input[type=text]').keypress(function(o) {
                        var t = o.which;
                        if (t == 13) {
                            o.preventDefault();
                            e('.scroll_popup_sb .form-submit, .time_popup_sb .form-submit').trigger('click')
                        }
                    });
                    e(this).addClass('bf-process').ajaxSuccess(function() {
                        if (e('.scroll_popup_sb .webform-confirmation, .time_popup_sb .webform-confirmation').length > 0) {}
                    })
                })
            }
        }
    };
    o.behaviors.download_serivice_universal_analytics = {
        attach: function(o, t) {
            e('.download_service:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').on('click', function() {
                    ga('send', 'event', 'ebooks', 'download', 'Haal meer uit uw servicenummer')
                })
            })
        }
    };
    o.behaviors.download_ebook = {
        attach: function(o, t) {
            e('.front .download_link_wrapper .green_button:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').on('click', function() {
                    ga('send', 'event', 'ebooks', 'download', 'Beginnen met Servicenummers')
                })
            })
        }
    };
    e(t).load(function() {
        if (e('.background_image_wrapper').length > 0) {
            e('.background_image_wrapper').waitForImages(function() {
                e(this).css({
                    opacity: 0.0,
                    visibility: 'visible'
                }).animate({
                    opacity: 1.0
                })
            })
        }
    });
    e(i).ready(function() {
        if (e('.section-compare-servicenumber-types').length > 0) {
            e('.arrow_box').each(function() {
                e(this).css('top', -e(this).outerHeight() / 2 + 10)
            })
        };
        if (e('#edit-footer-prefix').length > 0) {
            e('#edit-footer-prefix').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#first').length > 0) {
            e('#first').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#edit-laand').length > 0) {
            e('#edit-laand').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#edit-factur-laand').length > 0) {
            e('#edit-factur-laand').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#edit-betaling-per').length > 0) {
            e('#edit-betaling-per').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#edit-prefix').length > 0) {
            e('#edit-prefix').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#edit-prefix--2').length > 0) {
            e('#edit-prefix--2').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#edit-prefix--3').length > 0) {
            e('#edit-prefix--3').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#edit-geographical-area').length > 0) {
            e('#edit-geographical-area').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#mailchimp-newsletter-blijf_op_de_hoogte_ .messages-inline-error').length > 0) {
            e('#block-mailchimp-lists-blijf-op-de-hoogte-').show()
        };
        var s = !1;
        if (e('#block-webform-client-block-53 .messages-inline-error').length > 0) {
            s = !0;
            e(t).scrollTop(959)
        };
        if (e('#block-webform-client-block-185 .messages-inline-error').length > 0) {
            s = !0;
            e(t).scrollTop(959)
        };
        if (e('.error').length > 0) {
            if (!s) {
                e('html, body').animate({
                    scrollTop: e('.error').offset().top - 140
                }, 500)
            }
        };
        e('.number_blocks .header').click(function() {
            e(this).toggleClass('show')
        });
        if (e('.product_blocks_container #block-numbershop-shopping-cart').length > 0) {
            e(t).scroll(function() {
                var s = e('.product_blocks_container .field-name-field-product-block').offset().top,
                    o = e('.field-name-field-product-block').height(),
                    i = e('#block-numbershop-shopping-cart').height(),
                    a = s - 150,
                    n = s + o - i - 285;
                if (o > i) {
                    if (e(t).scrollTop() > a) {
                        e('#block-numbershop-shopping-cart').addClass('fixed');
                        e('#block-numbershop-shopping-cart').css('margin-top', '')
                    };
                    if (e(t).scrollTop() > n) {
                        e('#block-numbershop-shopping-cart').removeClass('fixed');
                        e('#block-numbershop-shopping-cart').css('margin-top', o - i - 135)
                    };
                    if (e(t).scrollTop() < a) {
                        e('#block-numbershop-shopping-cart').removeClass('fixed');
                        e('#block-numbershop-shopping-cart').css('margin-top', '')
                    }
                }
            })
        };
        if (e('#block-numbershop-numbershop-search-result #block-numbershop-shopping-cart').length > 0) {
            e(t).scroll(function() {
                var a = e('header.header').height(),
                    n = e('.search_result_header').height(),
                    r = e('.search_result_invalid').height(),
                    c = e('.search_result_numbers').height(),
                    l = e('.search_result .product_blocks_container').height(),
                    p = e('.available_numbers.total_block').height(),
                    i = 0,
                    s = 0,
                    o = 0;
                if (e('.tabs-primary.tabs.primary').length > 0) {
                    i = e('.tabs-primary.tabs.primary').height() + 60;
                    s = 65
                };
                if (e('.logged-in').length > 0) {
                    o = 8
                };
                add_class = a + n - 70 + i - o, remove_class = add_class + c + l + r + 600 - p + s - o;
                if (e(t).scrollTop() > add_class) {
                    e('#block-numbershop-shopping-cart .available_numbers.total_block').addClass('search_result_cart_fixed_animation');
                    e('#block-numbershop-shopping-cart .available_numbers.total_block').css('margin-top', '')
                };
                if (e(t).scrollTop() > remove_class) {
                    e('#block-numbershop-shopping-cart .available_numbers.total_block').removeClass('search_result_cart_fixed_animation');
                    e('#block-numbershop-shopping-cart .available_numbers.total_block').css('margin-top', remove_class - add_class)
                };
                if (e(t).scrollTop() < add_class) {
                    e('#block-numbershop-shopping-cart .available_numbers.total_block').removeClass('search_result_cart_fixed_animation');
                    e('#block-numbershop-shopping-cart .available_numbers.total_block').css('margin-top', '')
                }
            })
        };
        if (e('#info-ballon-contractgegevens-page').length > 0) {
            e(t).scroll(function() {
                var s = e('header.header').height(),
                    a = e('#main .content_header_wrapper').height(),
                    n = e('#main .navigation_header').height(),
                    r = e('#info-ballon-contractgegevens-page').height(),
                    c = e('#callfactory-numbershop-checkout-your-detail-form').height(),
                    o = s + a + n - 60,
                    i = o + c - r - 20;
                if (e(t).scrollTop() > o) {
                    e('#info-ballon-contractgegevens-page').addClass('fixed');
                    e('#info-ballon-contractgegevens-page').css('margin-top', '')
                };
                if (e(t).scrollTop() > i) {
                    e('#info-ballon-contractgegevens-page').removeClass('fixed');
                    e('#info-ballon-contractgegevens-page').css('margin-top', i - o)
                };
                if (e(t).scrollTop() < o) {
                    e('#info-ballon-contractgegevens-page').removeClass('fixed');
                    e('#info-ballon-contractgegevens-page').css('margin-top', '')
                }
            })
        };
        if (e('#quicktabs-belfabriek_mobile_content_blocks').length > 0) {
            if ((t.location.hash != '') && (t.location.hash == ('#' + o.t('employee')))) {
                e('#quicktabs-tab-belfabriek_mobile_content_blocks-1').trigger('click')
            } else {
                t.location.hash = 'vip';
                e('#quicktabs-tab-belfabriek_mobile_content_blocks-0').trigger('click')
            }
        };

        function n() {
            if (e('.node-type-artikelen').length > 0) {
                if (!e('.scroll_popup_sb').is(':visible')) {
                    var i = e.cookie('artikelen_subscription');
                    if (!i) {
                        e('.time_popup_sb').fadeIn('slow');
                        e('#back_popup').fadeIn('slow', function() {
                            e(this).show()
                        });
                        var o = new Date(),
                            t = 60;
                        o.setTime(o.getTime() + (t * 60 * 1000));
                        e.cookie('artikelen_subscription', 1, {
                            expires: o
                        });
                        ga('send', 'event', 'mailing_invite', 'overlay_invite')
                    }
                }
            }
        };
        setTimeout(n, 3000);

        function r() {
            return typeof t.pageYOffset != 'undefined' ? t.pageYOffset : i.documentElement.scrollTop ? i.documentElement.scrollTop : i.body.scrollTop ? i.body.scrollTop : 0
        };

        function c() {
            return i.body.scrollTop || i.documentElement.scrollTop || t.pageYOffset || 0
        };
        e(t).scroll(function() {
            var s = i.body.scrollTop || i.documentElement.scrollTop || t.pageYOffset || 0;
            if (s > 800 && s < 910) {
                if (e('.node-type-artikelen').length > 0) {
                    if (!e('.time_popup_sb').is(':visible')) {
                        var n = e.cookie('artikelen_subscription');
                        if (!n) {
                            e('.scroll_popup_sb').fadeIn('slow');
                            var o = new Date(),
                                a = 60;
                            o.setTime(o.getTime() + (a * 60 * 1000));
                            e.cookie('artikelen_subscription', 1, {
                                expires: o
                            });
                            e('.scroll_popup_sb').addClass('show').animate({
                                'right': '0'
                            }, 500);
                            ga('send', 'event', 'mailing_invite', 'overlay_invite')
                        } else {}
                    }
                }
            }
        });
        var a = e('#shop-cart span').html();
        if (a !== null) {
            e('.right-menu-block li.cart a').html('<span>' + a + '</span>')
        }
    });
    o.behaviors.new_mobile_menu = {
        attach: function(o, t) {
            e('.fixed-header-navigation .region-header-navigation').on('click', function(o) {
                o.preventDefault;
                o.stopPropagation;
                e(this).toggleClass('open')
            })
        }
    };
    o.behaviors.hash_mobile_page = {
        attach: function(i, s) {
            e('#quicktabs-tab-belfabriek_mobile_content_blocks-1').click(function() {
                t.location.hash = o.t('employee')
            });
            e('#quicktabs-tab-belfabriek_mobile_content_blocks-0').click(function() {
                t.location.hash = 'vip'
            })
        }
    };
    o.behaviors.header_scroll = {
        attach: function(o, i) {
            e(t).scroll(function() {
                var o = 140;
                if (e(t).scrollTop() > o) {
                    e('.fixed-header-navigation').addClass('menu-fixed')
                } else {
                    e('.fixed-header-navigation').removeClass('menu-fixed')
                }
            })
        }
    }
})(jQuery, Drupal, this, this.document);
/*!
 * jQuery Cookie Plugin v1.4.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2013 Klaus Hartl
 * Released under the MIT license
 */
(function(e) {
    if (typeof define === 'function' && define.amd) {
        define(['jquery'], e)
    } else if (typeof exports === 'object') {
        e(require('jquery'))
    } else {
        e(jQuery)
    }
}(function(e) {
    var o = /\+/g;

    function i(e) {
        return n.raw ? e : encodeURIComponent(e)
    };

    function t(e) {
        return n.raw ? e : decodeURIComponent(e)
    };

    function u(e) {
        return i(n.json ? JSON.stringify(e) : String(e))
    };

    function c(e) {
        if (e.indexOf('"') === 0) {
            e = e.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\')
        };
        try {
            e = decodeURIComponent(e.replace(o, ' '));
            return n.json ? JSON.parse(e) : e
        } catch (i) {}
    };

    function r(i, r) {
        var o = n.raw ? i : c(i);
        return e.isFunction(r) ? r(o) : o
    };
    var n = e.cookie = function(o, f, c) {
        if (f !== undefined && !e.isFunction(f)) {
            c = e.extend({}, n.defaults, c);
            if (typeof c.expires === 'number') {
                var v = c.expires,
                    x = c.expires = new Date();
                x.setTime(+x + v * 864e+5)
            };
            return (document.cookie = [i(o), '=', u(f), c.expires ? '; expires=' + c.expires.toUTCString() : '', c.path ? '; path=' + c.path : '', c.domain ? '; domain=' + c.domain : '', c.secure ? '; secure' : ''].join(''))
        };
        var s = o ? undefined : {};
        var l = document.cookie ? document.cookie.split('; ') : [];
        for (var a = 0, k = l.length; a < k; a++) {
            var p = l[a].split('='),
                m = t(p.shift()),
                d = p.join('=');
            if (o && o === m) {
                s = r(d, f);
                break
            };
            if (!o && (d = r(d)) !== undefined) {
                s[m] = d
            }
        };
        return s
    };
    n.defaults = {};
    e.removeCookie = function(n, i) {
        if (e.cookie(n) === undefined) {
            return !1
        };
        e.cookie(n, '', e.extend({}, i, {
            expires: -1
        }));
        return !e.cookie(n)
    }
}));
(function(t) {
    Drupal.cartInitialize = function() {
        if (t('#block-callfactory-numbershop-cart-shopping-cart').length > 0) {
            var a = t('#block-callfactory-numbershop-cart-shopping-cart'),
                s = a.outerHeight(),
                o = 100,
                r = 10,
                e = 0,
                i = 0,
                c = t('.numberblock_shop').offset().top,
                l = t('.numberblock_shop').height(),
                n = t('.numberblock_shop');
            if (t('.number_blocks .meer_nummers_tonen').length) {
                r = 44
            };
            if (t('.search_result_header').length > 0) {
                e = t('.search_result_cart_wrapper').offset().top + 1
            };
            Drupal.settings.numbershop_cart = {
                'cart': t('.field-name-field-product-block-right .block-callfactory-numbershop-cart'),
                'header_height': t('header.header').height(),
                'product_blocks_container': t('.product_blocks_container').height(),
                'number_block_height': l,
                'search_cart': a,
                'search_result_start_point': e,
                'cart_height': s,
                'add_class': e - o,
                'stop_cart_point': n.offset().top + n.height(),
                'top_cart': c - 100,
                'cart_footer_total_height': r,
                'no_numbers_offset': i,
                'bottom_cart': c + l - s - o - r
            };
            if (Drupal.settings.numbershop_cart.number_block_height > Drupal.settings.numbershop_cart.cart_height) {
                if (Drupal.settings.numbershop_cart.cart.children('.total_block').hasClass('relative')) {
                    Drupal.settings.numbershop_cart.cart.children('.total_block').removeClass('relative')
                }
            } else {
                Drupal.settings.numbershop_cart.cart.children('.total_block').addClass('relative')
            }
        }
    };
    Drupal.cartRefresh = function() {
        if (Drupal.settings.numbershop_cart.number_block_height > Drupal.settings.numbershop_cart.cart_height) {
            if (Drupal.settings.numbershop_cart.cart.children('.total_block').hasClass('relative')) {
                Drupal.settings.numbershop_cart.cart.children('.total_block').removeClass('relative')
            }
        } else {
            Drupal.settings.numbershop_cart.cart.children('.total_block').addClass('relative')
        }
    };

    function r() {
        if (t('.search_result_cart_wrapper #block-callfactory-numbershop-cart-shopping-cart')[0]) {
            Drupal.settings.numbershop_cart.cart.hide();
            if (t(window).scrollTop() > Drupal.settings.numbershop_cart.add_class) {
                Drupal.settings.numbershop_cart.search_cart.addClass('search_result_cart_fixed_animation');
                Drupal.settings.numbershop_cart.search_cart.removeAttr('style')
            };
            if (t(window).scrollTop() > Drupal.settings.numbershop_cart.bottom_cart) {
                Drupal.settings.numbershop_cart.search_cart.removeClass('search_result_cart_fixed_animation');
                Drupal.settings.numbershop_cart.search_cart.css({
                    'position': 'absolute',
                    'top': Drupal.settings.numbershop_cart.stop_cart_point + Drupal.settings.numbershop_cart.no_numbers_offset - t('.search_result_cart_wrapper').offset().top - Drupal.settings.numbershop_cart.cart_height - Drupal.settings.numbershop_cart.cart_footer_total_height
                })
            };
            if (t(window).scrollTop() < Drupal.settings.numbershop_cart.add_class) {
                Drupal.settings.numbershop_cart.search_cart.removeClass('search_result_cart_fixed_animation');
                Drupal.settings.numbershop_cart.search_cart.removeAttr('style')
            }
        } else {
            if ((Drupal.settings.numbershop_cart.number_block_height - Drupal.settings.numbershop_cart.cart_footer_total_height) > Drupal.settings.numbershop_cart.cart_height) {
                if (t(window).scrollTop() > Drupal.settings.numbershop_cart.top_cart) {
                    Drupal.settings.numbershop_cart.cart.addClass('fixed');
                    Drupal.settings.numbershop_cart.cart.removeAttr('style')
                };
                if (t(window).scrollTop() <= Drupal.settings.numbershop_cart.top_cart) {
                    Drupal.settings.numbershop_cart.cart.removeClass('fixed');
                    Drupal.settings.numbershop_cart.cart.removeAttr('style')
                };
                if (t(window).scrollTop() > Drupal.settings.numbershop_cart.bottom_cart) {
                    Drupal.settings.numbershop_cart.cart.removeClass('fixed');
                    Drupal.settings.numbershop_cart.cart.css('margin-top', Drupal.settings.numbershop_cart.number_block_height - Drupal.settings.numbershop_cart.cart_height - Drupal.settings.numbershop_cart.cart_footer_total_height)
                }
            } else {
                Drupal.settings.numbershop_cart.cart.children('.total_block').addClass('relative')
            }
        }
    };
    t(window).load(function() {
        Drupal.cartInitialize();
        if (Drupal.settings.numbershop_cart != undefined) {
            r();
            t(window).scroll(function() {
                Drupal.cartInitialize();
                r()
            })
        }
    })
})(jQuery);
(function(e, t, o) {
    'use strict';
    var h = navigator.userAgent.match(/MSIE ([0-9]{1,}[\.0-9]{0,})/),
        c = !!h,
        C = c && parseFloat(h[1]) < 7,
        w = navigator.userAgent.match(/iPad|iPhone|Android|IEMobile|BlackBerry/i),
        x = c ? 'mousedown' : 'click',
        A = 'onwheel' in t ? 'wheel' : 'onmousewheel' in o ? 'mousewheel' : 'MouseScrollEvent' in t && 'DOMMouseScroll MozMousePixelScroll',
        g = {
            fired: !1,
            fire: function() {
                e(o).on(x, '.dk_options a', function() {
                    var t = e(this),
                        a = t.parent(),
                        i = t.parents('.dk_container').first();
                    if (!a.hasClass('disabled') && !a.closest('.dk_optgroup', i).hasClass('disabled')) {
                        if (!a.hasClass('dk_option_current')) {
                            d(t, i);
                            n(t.parent(), i)
                        };
                        r(i)
                    };
                    return !1
                }).on(A, '.dk_options_inner', function(e) {
                    var t = e.originalEvent.wheelDelta || -e.originalEvent.deltaY || -e.originalEvent.detail;
                    if (c) {
                        this.scrollTop -= Math.round(t / 10);
                        return !1
                    };
                    return (t > 0 && this.scrollTop <= 0) || (t < 0 && this.scrollTop >= this.scrollHeight - this.offsetHeight) ? !1 : !0
                }).on({
                    'keydown.dk_nav': function(e) {
                        var t = a || u;
                        t && H(e, t)
                    },
                    'click': function(t) {
                        var i = e(t.target),
                            n;
                        if (a && i.closest('.dk_container').length === 0) {
                            r(a)
                        } else if (i.is('.dk_toggle, .dk_label')) {
                            n = i.parents('.dk_container').first();
                            if (n.hasClass('dk_open')) {
                                r(n)
                            } else {
                                a && r(a);
                                !n.attr('disabled') && p(n, t)
                            };
                            return !1
                        } else if (i.attr('for') && !!e('#dk_container_' + i.attr('for'))[0]) {
                            e('#dk_container_' + i.attr('for')).trigger('focus.dropkick')
                        }
                    }
                });
                this.fired = !0
            }
        },
        i = {},
        b = [],
        l = {
            'left': 37,
            'up': 38,
            'right': 39,
            'down': 40,
            'enter': 13,
            'tab': 9,
            'zero': 48,
            'z': 90,
            'last': 221
        },
        s = ['<div class="dk_container" id="dk_container_{{ id }}" tabindex="{{ tabindex }}" aria-hidden="true">', '<a class="dk_toggle dk_label">{{ label }}</a>', '<div class="dk_options">', '<ul class="dk_options_inner" role="main" aria-hidden="true">', '</ul>', '</div>', '</div>'].join(''),
        f = '<li class="{{ current }}{{ disabled }}"><a data-dk-dropdown-value="{{ value }}">{{ text }}</a></li>',
        y = '<li class="dk_optgroup{{ disabled }}"><span>{{ text }}</span>',
        T = {
            startSpeed: 400,
            theme: !1,
            changes: !1,
            syncReverse: !0,
            nativeMobile: !0,
            autoWidth: !0
        },
        a = null,
        u = null,
        d = function(e, t, i) {
            var n = t.data('dropkick'),
                a = n.$select,
                o = e.length ? e : n.$original,
                d = o.attr('data-dk-dropdown-value') || e.attr('value'),
                r = o.text();
            t.find('.dk_label').html(!!r ? r : '&nbsp;');
            !i ? a.val(d).trigger('change') : a.val(d);
            n.settings.change && !i && !n.settings.syncReverse && n.settings.change.call(a, d, r)
        },
        r = function(e) {
            e.removeClass('dk_open dk_open_top');
            a = null
        },
        M = function(i) {
            if (i.data('dropkick').settings.fixedMove) {
                return i.data('dropkick').settings.fixedMove == 'up' ? !1 : !0
            };
            var n = i.find('.dk_toggle'),
                a = i.find('.dk_options').outerHeight(),
                d = e(t).height() - n.outerHeight() - n.offset().top + e(t).scrollTop(),
                r = n.offset().top - e(t).scrollTop();
            return !(a < r) ? !0 : (a < d)
        },
        v = function(e, t, n) {
            var i = e.find('.dk_options_inner'),
                a = t.prevAll('li').outerHeight() * t.prevAll('li').length + (t.closest('.dk_optgroup', i).length && t.closest('.dk_optgroup', i).prevAll('li').outerHeight() * t.closest('.dk_optgroup', i).prevAll('li').length),
                d = i.scrollTop(),
                r = i.height() + i.scrollTop() - t.outerHeight();
            ((n && n.type === 'keydown') || (a < d || a > r)) && i.scrollTop(a)
        },
        p = function(e, t) {
            var i = M(e),
                n = 'dk_open' + (i ? '' : ' dk_open_top');
            e.find('.dk_options').css({
                top: i ? e.find('.dk_toggle').outerHeight() - 1 : '',
                bottom: i ? '' : e.find('.dk_toggle').outerHeight() - 1
            });
            a = e.addClass(n);
            v(e, e.find('.dk_option_current'), t)
        },
        n = function(e, t, i) {
            t.find('.dk_option_current').removeClass('dk_option_current');
            e.addClass('dk_option_current');
            v(t, e, i)
        },
        H = function(t, i) {
            var g = t.keyCode,
                a = i.data('dropkick'),
                m = String.fromCharCode(g),
                C = i.find('.dk_options'),
                b = i.hasClass('dk_open'),
                f = C.find('li:not(.disabled)'),
                u = i.find('.dk_option_current'),
                o = u.closest('.dk_optgroup', C),
                A = f.first().hasClass('dk_optgroup') ? f.first().find('li:not(.disabled)').first() : f.first(),
                y = f.last().hasClass('dk_optgroup') ? f.last().find('li:not(.disabled)').last() : f.last(),
                s, c, k, w, v, x, h;
            switch (g) {
                case l.enter:
                    if (b) {
                        if (!u.hasClass('disabled')) {
                            d(u.find('a'), i);
                            r(i)
                        }
                    } else {
                        p(i, t)
                    };
                    t.preventDefault();
                    break;
                case l.tab:
                    if (b) {
                        u.length && d(u.find('a'), i);
                        r(i)
                    };
                    break;
                case l.up:
                    if (b) {
                        c = u.prevAll('li:not(.disabled)').first();
                        if (c.hasClass('dk_optgroup')) c = c.find('li:not(.disabled)').last();
                        if (!c.length && o.length) c = o.prevAll('li:not(.disabled)').first().hasClass('dk_optgroup') ? o.prevAll('li:not(.disabled)').first().find('li:not(.disabled)').last() : o.prevAll('li:not(.disabled)').first();
                        n(c.length ? c : y, i, t)
                    } else {
                        p(i, t)
                    };
                    t.preventDefault();
                    break;
                case l.down:
                    if (b) {
                        s = u.nextAll('li:not(.disabled)').first();
                        if (s.hasClass('dk_optgroup')) s = s.find('li:not(.disabled)').first();
                        if (!s.length && o.length) s = o.nextAll('li:not(.disabled)').first().hasClass('dk_optgroup') ? o.nextAll('li:not(.disabled)').first().find('li:not(.disabled)').first() : o.nextAll('li:not(.disabled)').first();
                        n(s.length ? s : A, i, t)
                    } else {
                        p(i, t)
                    };
                    t.preventDefault();
                    break;
                default:
                    break
            };
            if (g >= l.zero && g <= l.z) {
                k = new Date().getTime();
                if (a.finder === null || a.finder === undefined) {
                    a.finder = m.toUpperCase();
                    a.timer = k
                } else {
                    if (k > parseInt(a.timer, 10) + 1000) {
                        a.finder = m.toUpperCase();
                        a.timer = k
                    } else {
                        a.finder = a.finder + m.toUpperCase();
                        a.timer = k
                    }
                };
                w = f.find('a');
                for (v = 0, x = w.length; v < x; v++) {
                    h = e(w[v]);
                    if (h.html().toUpperCase().indexOf(a.finder) === 0 && !h.closest('.dk_optgroup', C).hasClass('disabled')) {
                        d(h, i);
                        n(h.parent(), i, t);
                        break
                    }
                };
                i.data('dropkick', a)
            }
        },
        k = function(t) {
            return (e.trim(t).length > 0) ? t : !1
        },
        m = function(t, i) {
            var s = function(t) {
                    var n = t.val(),
                        a = t.html(),
                        d = t.attr('disabled') !== undefined;
                    return f.replace('{{ value }}', n).replace('{{ current }}', (k(n) === i.value && !d) ? 'dk_option_current' : '').replace('{{ disabled }}', (d) ? 'disabled' : '').replace('{{ text }}', !!e.trim(a) ? e.trim(a) : '&nbsp;')
                },
                h = t.replace('{{ id }}', i.id).replace('{{ label }}', i.label).replace('{{ tabindex }}', i.tabindex),
                o = [],
                l, n, p, a, d;
            if (i.options && i.options.length) {
                for (n = 0, p = i.options.length; n < p; n++) {
                    a = e(i.options[n]);
                    if (a.is('option')) {
                        d = (n === 0 && a.attr('selected') !== undefined && a.attr('disabled') !== undefined) ? null : s(a)
                    } else if (a.is('optgroup')) {
                        d = y.replace('{{ text }}', a.attr('label') || '---').replace('{{ disabled }}', (a.attr('disabled') !== undefined) ? ' disabled' : '');
                        if (e(i.options[n]).children().length) {
                            d += '<ul>';
                            for (var r = 0, u = e(i.options[n]).children().length; r < u; r++) {
                                var c = e(i.options[n]).children().eq(r);
                                d += s(c)
                            };
                            d += '</ul>'
                        };
                        d += '</li>'
                    };
                    o[o.length] = d
                }
            };
            l = e(h);
            l.find('.dk_options_inner').html(o.join(''));
            return l
        };
    i.init = function(t) {
        t = e.extend({}, T, t);
        s = t.dropdownTemplate ? t.dropdownTemplate : s;
        f = t.optionTemplate ? t.optionTemplate : f;
        !g.fired && g.fire();
        return this.each(function() {
            var i = e(this),
                r = i.find(':selected').first(),
                p = i.children(),
                a = i.data('dropkick') || {},
                c = i.attr('id') || i.attr('name'),
                o = i.parent('.dk_wrap'),
                f = t.width || o.length ? o.width() - (i.innerWidth() - i.width()) : i.outerWidth(),
                h = i.attr('tabindex') || '0',
                g = !!i.attr('disabled'),
                d = !1,
                l;
            if (a.id) {
                return i
            };
            a.settings = t;
            a.tabindex = h;
            a.id = c;
            a.$original = r;
            a.$select = i;
            a.value = k(i.val()) || k(r.attr('value'));
            a.label = !!r.text() ? r.text() : '&nbsp;';
            a.options = p;
            a.theme = t.theme || 'default';
            d = m(s, a);
            a.settings.autoWidth && d.find('.dk_toggle').css({
                'width': f + 'px'
            });
            g && d.attr({
                disabled: 'disabled',
                tabindex: -1
            });
            i.before(d).appendTo(d.addClass('dk_theme_' + a.theme));
            if (o.length) {
                o.removeClass('dk_wrap');
                d.show()
            } else {
                d.fadeIn(t.startSpeed)
            };
            a.$dk = d;
            i.data('dropkick', a);
            d.addClass(i.attr('class'));
            d.data('dropkick', a);
            b[b.length] = i;
            d.on({
                'focus.dropkick': function() {
                    u = !d.attr('disabled') && d.addClass('dk_focus')
                },
                'blur.dropkick': function() {
                    d.removeClass('dk_focus');
                    u = null
                }
            });
            w && a.settings.nativeMobile && d.addClass('dk_mobile');
            if (a.settings.syncReverse) {
                i.on('change', function(t) {
                    var o = i.val(),
                        l = e('a[data-dk-dropdown-value="' + o + '"]', d),
                        r = l.text();
                    d.find('.dk_label').html(!!r ? r : '&nbsp;');
                    n(l.parent(), d, t);
                    a.settings.change && a.settings.change.call(i, o, r)
                })
            };
            l = i.attr('form') ? e('#' + i.attr('form').replace(' ', ', #')) : i.closest('form');
            l.length && l.on('reset', function() {
                i.dropkick('reset')
            })
        })
    };
    i.theme = function(t) {
        var i = e(this).data('dropkick'),
            n = i.$dk,
            a = 'dk_theme_' + i.theme;
        i.theme = t || i.theme;
        n.removeClass(a).addClass('dk_theme_' + t)
    };
    i.reset = function(t) {
        return this.each(function() {
            var i = e(this).data('dropkick'),
                a = i.$dk,
                r = e('a[data-dk-dropdown-value="' + i.$original.attr('value') + '"]', a);
            i.$original.prop('selected', !0);
            n(r.parent(), a);
            d(r, a, !t)
        })
    };
    i.setValue = function(t) {
        return this.each(function() {
            var i = e(this).data('dropkick').$dk,
                a = e('.dk_options a[data-dk-dropdown-value="' + t + '"]', i);
            a.length && d(a, i) | n(a.parent(), i)
        })
    };
    i.refresh = function(t) {
        return this.each(function() {
            var i = e(this).data('dropkick'),
                r = i.$select,
                a = i.$dk,
                o, l;
            i.options = r.children();
            l = m(s, i).find('.dk_options_inner');
            a.find('.dk_options_inner').replaceWith(l);
            if (!i.$original.parent().length) {
                i.$original = r.find(':selected').first();
                i.label = i.$original.text()
            };
            o = e('a[data-dk-dropdown-value="' + r.val() + '"]', a);
            n(o.parent(), a);
            d(o, a, !t)
        })
    };
    i.destroy = function() {
        return this.each(function() {
            var t = e(this).data('dropkick');
            t.$dk.before(function() {
                return t.$select.removeData('dropkick')
            }).remove()
        })
    };
    i.clone = function(t, i, n) {
        var a = [];
        e.each(this, function(d) {
            var o = e(this).data('dropkick'),
                l = o.settings,
                r = o.$select.clone();
            if (l.autoWidth) {
                l.width = o.$dk.find('.dk_label').width()
            };
            i && r.attr({
                id: i
            });
            n && r.attr({
                name: n
            });
            r.removeData('dropkick');
            if (t === !1) {
                a[d] = r[0]
            } else {
                r.dropkick(l);
                a[d] = r.data('dropkick').$dk[0]
            }
        })
    };
    i.disable = function(t) {
        return this.each(function() {
            var n = e(this).data('dropkick'),
                a = n.$select,
                i = n.$dk;
            if (t === !1) {
                a.removeAttr('disabled');
                i.removeAttr('disabled').attr({
                    tabindex: n.tabindex
                })
            } else {
                i.hasClass('dk_open') && r(i);
                a.attr({
                    disabled: 'disabled'
                });
                i.attr({
                    disabled: 'disabled',
                    tabindex: -1
                })
            }
        })
    };
    e.fn.dropkick = function(e) {
        if (!C) {
            if (i[e]) {
                return i[e].apply(this, Array.prototype.slice.call(arguments, 1))
            };
            if (typeof e === 'object' || !e) {
                return i.init.apply(this, arguments)
            }
        }
    }
}(jQuery, window, document)); /*! waitForImages jQuery Plugin 2013-07-20 */
! function(a) {
    var b = "waitForImages";
    a.waitForImages = {
        hasImageProperties: ["backgroundImage", "listStyleImage", "borderImage", "borderCornerImage", "cursor"]
    }, a.expr[":"].uncached = function(b) {
        if (!a(b).is('img[src!=""]')) return !1;
        var c = new Image;
        return c.src = b.src, !c.complete
    }, a.fn.waitForImages = function(c, d, e) {
        var f = 0,
            g = 0;
        if (a.isPlainObject(arguments[0]) && (e = arguments[0].waitForAll, d = arguments[0].each, c = arguments[0].finished), c = c || a.noop, d = d || a.noop, e = !!e, !a.isFunction(c) || !a.isFunction(d)) throw new TypeError("An invalid callback was supplied.");
        return this.each(function() {
            var h = a(this),
                i = [],
                j = a.waitForImages.hasImageProperties || [],
                k = /url\(\s*(['"]?)(.*?)\1\s*\)/g;
            e ? h.find("*").addBack().each(function() {
                var b = a(this);
                b.is("img:uncached") && i.push({
                    src: b.attr("src"),
                    element: b[0]
                }), a.each(j, function(a, c) {
                    var d, e = b.css(c);
                    if (!e) return !0;
                    for (; d = k.exec(e);) i.push({
                        src: d[2],
                        element: b[0]
                    })
                })
            }) : h.find("img:uncached").each(function() {
                i.push({
                    src: this.src,
                    element: this
                })
            }), f = i.length, g = 0, 0 === f && c.call(h[0]), a.each(i, function(e, i) {
                var j = new Image;
                a(j).on("load." + b + " error." + b, function(a) {
                    return g++, d.call(i.element, g, f, "load" == a.type), g == f ? (c.call(h[0]), !1) : void 0
                }), j.src = i.src
            })
        })
    }
}(jQuery);; /**/
/*! jQuery UI - v1.10.3 - 2013-05-03
 * http://jqueryui.com
 * Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.sortable.js, jquery.ui.effect.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.effect-blind.js, jquery.ui.effect-bounce.js, jquery.ui.effect-clip.js, jquery.ui.effect-drop.js, jquery.ui.effect-explode.js, jquery.ui.effect-fade.js, jquery.ui.effect-fold.js, jquery.ui.effect-highlight.js, jquery.ui.effect-pulsate.js, jquery.ui.effect-scale.js, jquery.ui.effect-shake.js, jquery.ui.effect-slide.js, jquery.ui.effect-transfer.js, jquery.ui.menu.js, jquery.ui.position.js, jquery.ui.progressbar.js, jquery.ui.slider.js, jquery.ui.spinner.js, jquery.ui.tabs.js, jquery.ui.tooltip.js
 * Copyright 2013 jQuery Foundation and other contributors; Licensed MIT */
(function(t, e) {
    var n = 0,
        o = /^ui-id-\d+$/;
    t.ui = t.ui || {};
    t.extend(t.ui, {
        version: "1.10.3",
        keyCode: {
            BACKSPACE: 8,
            COMMA: 188,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            LEFT: 37,
            NUMPAD_ADD: 107,
            NUMPAD_DECIMAL: 110,
            NUMPAD_DIVIDE: 111,
            NUMPAD_ENTER: 108,
            NUMPAD_MULTIPLY: 106,
            NUMPAD_SUBTRACT: 109,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38
        }
    });
    t.fn.extend({
        focus: (function(e) {
            return function(i, s) {
                return typeof i === "number" ? this.each(function() {
                    var e = this;
                    setTimeout(function() {
                        t(e).focus();
                        if (s) {
                            s.call(e)
                        }
                    }, i)
                }) : e.apply(this, arguments)
            }
        })(t.fn.focus),
        scrollParent: function() {
            var e;
            if ((t.ui.ie && (/(static|relative)/).test(this.css("position"))) || (/absolute/).test(this.css("position"))) {
                e = this.parents().filter(function() {
                    return (/(relative|absolute|fixed)/).test(t.css(this, "position")) && (/(auto|scroll)/).test(t.css(this, "overflow") + t.css(this, "overflow-y") + t.css(this, "overflow-x"))
                }).eq(0)
            } else {
                e = this.parents().filter(function() {
                    return (/(auto|scroll)/).test(t.css(this, "overflow") + t.css(this, "overflow-y") + t.css(this, "overflow-x"))
                }).eq(0)
            };
            return (/fixed/).test(this.css("position")) || !e.length ? t(document) : e
        },
        zIndex: function(i) {
            if (i !== e) {
                return this.css("zIndex", i)
            };
            if (this.length) {
                var s = t(this[0]),
                    n, o;
                while (s.length && s[0] !== document) {
                    n = s.css("position");
                    if (n === "absolute" || n === "relative" || n === "fixed") {
                        o = parseInt(s.css("zIndex"), 10);
                        if (!isNaN(o) && o !== 0) {
                            return o
                        }
                    };
                    s = s.parent()
                }
            };
            return 0
        },
        uniqueId: function() {
            return this.each(function() {
                if (!this.id) {
                    this.id = "ui-id-" + (++n)
                }
            })
        },
        removeUniqueId: function() {
            return this.each(function() {
                if (o.test(this.id)) {
                    t(this).removeAttr("id")
                }
            })
        }
    });

    function i(e, i) {
        var n, o, a, r = e.nodeName.toLowerCase();
        if ("area" === r) {
            n = e.parentNode;
            o = n.name;
            if (!e.href || !o || n.nodeName.toLowerCase() !== "map") {
                return !1
            };
            a = t("img[usemap=#" + o + "]")[0];
            return !!a && s(a)
        };
        return (/input|select|textarea|button|object/.test(r) ? !e.disabled : "a" === r ? e.href || i : i) && s(e)
    };

    function s(e) {
        return t.expr.filters.visible(e) && !t(e).parents().addBack().filter(function() {
            return t.css(this, "visibility") === "hidden"
        }).length
    };
    t.extend(t.expr[":"], {
        data: t.expr.createPseudo ? t.expr.createPseudo(function(e) {
            return function(i) {
                return !!t.data(i, e)
            }
        }) : function(e, i, s) {
            return !!t.data(e, s[3])
        },
        focusable: function(e) {
            return i(e, !isNaN(t.attr(e, "tabindex")))
        },
        tabbable: function(e) {
            var s = t.attr(e, "tabindex"),
                n = isNaN(s);
            return (n || s >= 0) && i(e, !n)
        }
    });
    if (!t("<a>").outerWidth(1).jquery) {
        t.each(["Width", "Height"], function(i, s) {
            var r = s === "Width" ? ["Left", "Right"] : ["Top", "Bottom"],
                n = s.toLowerCase(),
                o = {
                    innerWidth: t.fn.innerWidth,
                    innerHeight: t.fn.innerHeight,
                    outerWidth: t.fn.outerWidth,
                    outerHeight: t.fn.outerHeight
                };

            function a(e, i, s, n) {
                t.each(r, function() {
                    i -= parseFloat(t.css(e, "padding" + this)) || 0;
                    if (s) {
                        i -= parseFloat(t.css(e, "border" + this + "Width")) || 0
                    };
                    if (n) {
                        i -= parseFloat(t.css(e, "margin" + this)) || 0
                    }
                });
                return i
            };
            t.fn["inner" + s] = function(i) {
                if (i === e) {
                    return o["inner" + s].call(this)
                };
                return this.each(function() {
                    t(this).css(n, a(this, i) + "px")
                })
            };
            t.fn["outer" + s] = function(e, i) {
                if (typeof e !== "number") {
                    return o["outer" + s].call(this, e)
                };
                return this.each(function() {
                    t(this).css(n, a(this, e, !0, i) + "px")
                })
            }
        })
    };
    if (!t.fn.addBack) {
        t.fn.addBack = function(t) {
            return this.add(t == null ? this.prevObject : this.prevObject.filter(t))
        }
    };
    if (t("<a>").data("a-b", "a").removeData("a-b").data("a-b")) {
        t.fn.removeData = (function(e) {
            return function(i) {
                if (arguments.length) {
                    return e.call(this, t.camelCase(i))
                } else {
                    return e.call(this)
                }
            }
        })(t.fn.removeData)
    };
    t.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());
    t.support.selectstart = "onselectstart" in document.createElement("div");
    t.fn.extend({
        disableSelection: function() {
            return this.bind((t.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function(t) {
                t.preventDefault()
            })
        },
        enableSelection: function() {
            return this.unbind(".ui-disableSelection")
        }
    });
    t.extend(t.ui, {
        plugin: {
            add: function(e, i, s) {
                var n, o = t.ui[e].prototype;
                for (n in s) {
                    o.plugins[n] = o.plugins[n] || [];
                    o.plugins[n].push([i, s[n]])
                }
            },
            call: function(t, e, i) {
                var s, n = t.plugins[e];
                if (!n || !t.element[0].parentNode || t.element[0].parentNode.nodeType === 11) {
                    return
                };
                for (s = 0; s < n.length; s++) {
                    if (t.options[n[s][0]]) {
                        n[s][1].apply(t.element, i)
                    }
                }
            }
        },
        hasScroll: function(e, i) {
            if (t(e).css("overflow") === "hidden") {
                return !1
            };
            var s = (i && i === "left") ? "scrollLeft" : "scrollTop",
                n = !1;
            if (e[s] > 0) {
                return !0
            };
            e[s] = 1;
            n = (e[s] > 0);
            e[s] = 0;
            return n
        }
    })
})(jQuery);
(function(t, e) {
    var s = 0,
        i = Array.prototype.slice,
        n = t.cleanData;
    t.cleanData = function(e) {
        for (var s = 0, o;
            (o = e[s]) != null; s++) {
            try {
                t(o).triggerHandler("remove")
            } catch (i) {}
        };
        n(e)
    };
    t.widget = function(e, i, s) {
        var l, o, n, r, h = {},
            a = e.split(".")[0];
        e = e.split(".")[1];
        l = a + "-" + e;
        if (!s) {
            s = i;
            i = t.Widget
        };
        t.expr[":"][l.toLowerCase()] = function(e) {
            return !!t.data(e, l)
        };
        t[a] = t[a] || {};
        o = t[a][e];
        n = t[a][e] = function(t, e) {
            if (!this._createWidget) {
                return new n(t, e)
            };
            if (arguments.length) {
                this._createWidget(t, e)
            }
        };
        t.extend(n, o, {
            version: s.version,
            _proto: t.extend({}, s),
            _childConstructors: []
        });
        r = new i();
        r.options = t.widget.extend({}, r.options);
        t.each(s, function(e, s) {
            if (!t.isFunction(s)) {
                h[e] = s;
                return
            };
            h[e] = (function() {
                var t = function() {
                        return i.prototype[e].apply(this, arguments)
                    },
                    n = function(t) {
                        return i.prototype[e].apply(this, t)
                    };
                return function() {
                    var i = this._super,
                        o = this._superApply,
                        e;
                    this._super = t;
                    this._superApply = n;
                    e = s.apply(this, arguments);
                    this._super = i;
                    this._superApply = o;
                    return e
                }
            })()
        });
        n.prototype = t.widget.extend(r, {
            widgetEventPrefix: o ? r.widgetEventPrefix : e
        }, h, {
            constructor: n,
            namespace: a,
            widgetName: e,
            widgetFullName: l
        });
        if (o) {
            t.each(o._childConstructors, function(e, i) {
                var s = i.prototype;
                t.widget(s.namespace + "." + s.widgetName, n, i._proto)
            });
            delete o._childConstructors
        } else {
            i._childConstructors.push(n)
        };
        t.widget.bridge(e, n)
    };
    t.widget.extend = function(s) {
        var r = i.call(arguments, 1),
            a = 0,
            l = r.length,
            n, o;
        for (; a < l; a++) {
            for (n in r[a]) {
                o = r[a][n];
                if (r[a].hasOwnProperty(n) && o !== e) {
                    if (t.isPlainObject(o)) {
                        s[n] = t.isPlainObject(s[n]) ? t.widget.extend({}, s[n], o) : t.widget.extend({}, o)
                    } else {
                        s[n] = o
                    }
                }
            }
        };
        return s
    };
    t.widget.bridge = function(s, n) {
        var o = n.prototype.widgetFullName || s;
        t.fn[s] = function(a) {
            var h = typeof a === "string",
                r = i.call(arguments, 1),
                l = this;
            a = !h && r.length ? t.widget.extend.apply(null, [a].concat(r)) : a;
            if (h) {
                this.each(function() {
                    var i, n = t.data(this, o);
                    if (!n) {
                        return t.error("cannot call methods on " + s + " prior to initialization; attempted to call method '" + a + "'")
                    };
                    if (!t.isFunction(n[a]) || a.charAt(0) === "_") {
                        return t.error("no such method '" + a + "' for " + s + " widget instance")
                    };
                    i = n[a].apply(n, r);
                    if (i !== n && i !== e) {
                        l = i && i.jquery ? l.pushStack(i.get()) : i;
                        return !1
                    }
                })
            } else {
                this.each(function() {
                    var e = t.data(this, o);
                    if (e) {
                        e.option(a || {})._init()
                    } else {
                        t.data(this, o, new n(a, this))
                    }
                })
            };
            return l
        }
    };
    t.Widget = function() {};
    t.Widget._childConstructors = [];
    t.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            disabled: !1,
            create: null
        },
        _createWidget: function(e, i) {
            i = t(i || this.defaultElement || this)[0];
            this.element = t(i);
            this.uuid = s++;
            this.eventNamespace = "." + this.widgetName + this.uuid;
            this.options = t.widget.extend({}, this.options, this._getCreateOptions(), e);
            this.bindings = t();
            this.hoverable = t();
            this.focusable = t();
            if (i !== this) {
                t.data(i, this.widgetFullName, this);
                this._on(!0, this.element, {
                    remove: function(t) {
                        if (t.target === i) {
                            this.destroy()
                        }
                    }
                });
                this.document = t(i.style ? i.ownerDocument : i.document || i);
                this.window = t(this.document[0].defaultView || this.document[0].parentWindow)
            };
            this._create();
            this._trigger("create", null, this._getCreateEventData());
            this._init()
        },
        _getCreateOptions: t.noop,
        _getCreateEventData: t.noop,
        _create: t.noop,
        _init: t.noop,
        destroy: function() {
            this._destroy();
            this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(t.camelCase(this.widgetFullName));
            this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled ui-state-disabled");
            this.bindings.unbind(this.eventNamespace);
            this.hoverable.removeClass("ui-state-hover");
            this.focusable.removeClass("ui-state-focus")
        },
        _destroy: t.noop,
        widget: function() {
            return this.element
        },
        option: function(i, s) {
            var r = i,
                n, o, a;
            if (arguments.length === 0) {
                return t.widget.extend({}, this.options)
            };
            if (typeof i === "string") {
                r = {};
                n = i.split(".");
                i = n.shift();
                if (n.length) {
                    o = r[i] = t.widget.extend({}, this.options[i]);
                    for (a = 0; a < n.length - 1; a++) {
                        o[n[a]] = o[n[a]] || {};
                        o = o[n[a]]
                    };
                    i = n.pop();
                    if (s === e) {
                        return o[i] === e ? null : o[i]
                    };
                    o[i] = s
                } else {
                    if (s === e) {
                        return this.options[i] === e ? null : this.options[i]
                    };
                    r[i] = s
                }
            };
            this._setOptions(r);
            return this
        },
        _setOptions: function(t) {
            var e;
            for (e in t) {
                this._setOption(e, t[e])
            };
            return this
        },
        _setOption: function(t, e) {
            this.options[t] = e;
            if (t === "disabled") {
                this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!e).attr("aria-disabled", e);
                this.hoverable.removeClass("ui-state-hover");
                this.focusable.removeClass("ui-state-focus")
            };
            return this
        },
        enable: function() {
            return this._setOption("disabled", !1)
        },
        disable: function() {
            return this._setOption("disabled", !0)
        },
        _on: function(e, i, s) {
            var o, n = this;
            if (typeof e !== "boolean") {
                s = i;
                i = e;
                e = !1
            };
            if (!s) {
                s = i;
                i = this.element;
                o = this.widget()
            } else {
                i = o = t(i);
                this.bindings = this.bindings.add(i)
            };
            t.each(s, function(s, a) {
                function r() {
                    if (!e && (n.options.disabled === !0 || t(this).hasClass("ui-state-disabled"))) {
                        return
                    };
                    return (typeof a === "string" ? n[a] : a).apply(n, arguments)
                };
                if (typeof a !== "string") {
                    r.guid = a.guid = a.guid || r.guid || t.guid++
                };
                var l = s.match(/^(\w+)\s*(.*)$/),
                    h = l[1] + n.eventNamespace,
                    u = l[2];
                if (u) {
                    o.delegate(u, h, r)
                } else {
                    i.bind(h, r)
                }
            })
        },
        _off: function(t, e) {
            e = (e || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace;
            t.unbind(e).undelegate(e)
        },
        _delay: function(t, e) {
            function s() {
                return (typeof t === "string" ? i[t] : t).apply(i, arguments)
            };
            var i = this;
            return setTimeout(s, e || 0)
        },
        _hoverable: function(e) {
            this.hoverable = this.hoverable.add(e);
            this._on(e, {
                mouseenter: function(e) {
                    t(e.currentTarget).addClass("ui-state-hover")
                },
                mouseleave: function(e) {
                    t(e.currentTarget).removeClass("ui-state-hover")
                }
            })
        },
        _focusable: function(e) {
            this.focusable = this.focusable.add(e);
            this._on(e, {
                focusin: function(e) {
                    t(e.currentTarget).addClass("ui-state-focus")
                },
                focusout: function(e) {
                    t(e.currentTarget).removeClass("ui-state-focus")
                }
            })
        },
        _trigger: function(e, i, s) {
            var n, o, a = this.options[e];
            s = s || {};
            i = t.Event(i);
            i.type = (e === this.widgetEventPrefix ? e : this.widgetEventPrefix + e).toLowerCase();
            i.target = this.element[0];
            o = i.originalEvent;
            if (o) {
                for (n in o) {
                    if (!(n in i)) {
                        i[n] = o[n]
                    }
                }
            };
            this.element.trigger(i, s);
            return !(t.isFunction(a) && a.apply(this.element[0], [i].concat(s)) === !1 || i.isDefaultPrevented())
        }
    };
    t.each({
        show: "fadeIn",
        hide: "fadeOut"
    }, function(e, i) {
        t.Widget.prototype["_" + e] = function(s, n, o) {
            if (typeof n === "string") {
                n = {
                    effect: n
                }
            };
            var r, a = !n ? e : n === !0 || typeof n === "number" ? i : n.effect || i;
            n = n || {};
            if (typeof n === "number") {
                n = {
                    duration: n
                }
            };
            r = !t.isEmptyObject(n);
            n.complete = o;
            if (n.delay) {
                s.delay(n.delay)
            };
            if (r && t.effects && t.effects.effect[a]) {
                s[e](n)
            } else if (a !== e && s[a]) {
                s[a](n.duration, n.easing, o)
            } else {
                s.queue(function(i) {
                    t(this)[e]();
                    if (o) {
                        o.call(s[0])
                    };
                    i()
                })
            }
        }
    })
})(jQuery);
(function(t, e) {
    var i = !1;
    t(document).mouseup(function() {
        i = !1
    });
    t.widget("ui.mouse", {
        version: "1.10.3",
        options: {
            cancel: "input,textarea,button,select,option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function() {
            var e = this;
            this.element.bind("mousedown." + this.widgetName, function(t) {
                return e._mouseDown(t)
            }).bind("click." + this.widgetName, function(i) {
                if (!0 === t.data(i.target, e.widgetName + ".preventClickEvent")) {
                    t.removeData(i.target, e.widgetName + ".preventClickEvent");
                    i.stopImmediatePropagation();
                    return !1
                }
            });
            this.started = !1
        },
        _mouseDestroy: function() {
            this.element.unbind("." + this.widgetName);
            if (this._mouseMoveDelegate) {
                t(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate)
            }
        },
        _mouseDown: function(e) {
            if (i) {
                return
            }(this._mouseStarted && this._mouseUp(e));
            this._mouseDownEvent = e;
            var s = this,
                n = (e.which === 1),
                o = (typeof this.options.cancel === "string" && e.target.nodeName ? t(e.target).closest(this.options.cancel).length : !1);
            if (!n || o || !this._mouseCapture(e)) {
                return !0
            };
            this.mouseDelayMet = !this.options.delay;
            if (!this.mouseDelayMet) {
                this._mouseDelayTimer = setTimeout(function() {
                    s.mouseDelayMet = !0
                }, this.options.delay)
            };
            if (this._mouseDistanceMet(e) && this._mouseDelayMet(e)) {
                this._mouseStarted = (this._mouseStart(e) !== !1);
                if (!this._mouseStarted) {
                    e.preventDefault();
                    return !0
                }
            };
            if (!0 === t.data(e.target, this.widgetName + ".preventClickEvent")) {
                t.removeData(e.target, this.widgetName + ".preventClickEvent")
            };
            this._mouseMoveDelegate = function(t) {
                return s._mouseMove(t)
            };
            this._mouseUpDelegate = function(t) {
                return s._mouseUp(t)
            };
            t(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate);
            e.preventDefault();
            i = !0;
            return !0
        },
        _mouseMove: function(e) {
            if (t.ui.ie && (!document.documentMode || document.documentMode < 9) && !e.button) {
                return this._mouseUp(e)
            };
            if (this._mouseStarted) {
                this._mouseDrag(e);
                return e.preventDefault()
            };
            if (this._mouseDistanceMet(e) && this._mouseDelayMet(e)) {
                this._mouseStarted = (this._mouseStart(this._mouseDownEvent, e) !== !1);
                (this._mouseStarted ? this._mouseDrag(e) : this._mouseUp(e))
            };
            return !this._mouseStarted
        },
        _mouseUp: function(e) {
            t(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
            if (this._mouseStarted) {
                this._mouseStarted = !1;
                if (e.target === this._mouseDownEvent.target) {
                    t.data(e.target, this.widgetName + ".preventClickEvent", !0)
                };
                this._mouseStop(e)
            };
            return !1
        },
        _mouseDistanceMet: function(t) {
            return (Math.max(Math.abs(this._mouseDownEvent.pageX - t.pageX), Math.abs(this._mouseDownEvent.pageY - t.pageY)) >= this.options.distance)
        },
        _mouseDelayMet: function() {
            return this.mouseDelayMet
        },
        _mouseStart: function() {},
        _mouseDrag: function() {},
        _mouseStop: function() {},
        _mouseCapture: function() {
            return !0
        }
    })
})(jQuery);
(function(t, e) {
    t.widget("ui.draggable", t.ui.mouse, {
        version: "1.10.3",
        widgetEventPrefix: "drag",
        options: {
            addClasses: !0,
            appendTo: "parent",
            axis: !1,
            connectToSortable: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            iframeFix: !1,
            opacity: !1,
            refreshPositions: !1,
            revert: !1,
            revertDuration: 500,
            scope: "default",
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: !1,
            snapMode: "both",
            snapTolerance: 20,
            stack: !1,
            zIndex: !1,
            drag: null,
            start: null,
            stop: null
        },
        _create: function() {
            if (this.options.helper === "original" && !(/^(?:r|a|f)/).test(this.element.css("position"))) {
                this.element[0].style.position = "relative"
            };
            if (this.options.addClasses) {
                this.element.addClass("ui-draggable")
            };
            if (this.options.disabled) {
                this.element.addClass("ui-draggable-disabled")
            };
            this._mouseInit()
        },
        _destroy: function() {
            this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");
            this._mouseDestroy()
        },
        _mouseCapture: function(e) {
            var i = this.options;
            if (this.helper || i.disabled || t(e.target).closest(".ui-resizable-handle").length > 0) {
                return !1
            };
            this.handle = this._getHandle(e);
            if (!this.handle) {
                return !1
            };
            t(i.iframeFix === !0 ? "iframe" : i.iframeFix).each(function() {
                t("<div class='ui-draggable-iframeFix' style='background: #fff;'></div>").css({
                    width: this.offsetWidth + "px",
                    height: this.offsetHeight + "px",
                    position: "absolute",
                    opacity: "0.001",
                    zIndex: 1000
                }).css(t(this).offset()).appendTo("body")
            });
            return !0
        },
        _mouseStart: function(e) {
            var i = this.options;
            this.helper = this._createHelper(e);
            this.helper.addClass("ui-draggable-dragging");
            this._cacheHelperProportions();
            if (t.ui.ddmanager) {
                t.ui.ddmanager.current = this
            };
            this._cacheMargins();
            this.cssPosition = this.helper.css("position");
            this.scrollParent = this.helper.scrollParent();
            this.offsetParent = this.helper.offsetParent();
            this.offsetParentCssPosition = this.offsetParent.css("position");
            this.offset = this.positionAbs = this.element.offset();
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            };
            this.offset.scroll = !1;
            t.extend(this.offset, {
                click: {
                    left: e.pageX - this.offset.left,
                    top: e.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            });
            this.originalPosition = this.position = this._generatePosition(e);
            this.originalPageX = e.pageX;
            this.originalPageY = e.pageY;
            (i.cursorAt && this._adjustOffsetFromHelper(i.cursorAt));
            this._setContainment();
            if (this._trigger("start", e) === !1) {
                this._clear();
                return !1
            };
            this._cacheHelperProportions();
            if (t.ui.ddmanager && !i.dropBehaviour) {
                t.ui.ddmanager.prepareOffsets(this, e)
            };
            this._mouseDrag(e, !0);
            if (t.ui.ddmanager) {
                t.ui.ddmanager.dragStart(this, e)
            };
            return !0
        },
        _mouseDrag: function(e, i) {
            if (this.offsetParentCssPosition === "fixed") {
                this.offset.parent = this._getParentOffset()
            };
            this.position = this._generatePosition(e);
            this.positionAbs = this._convertPositionTo("absolute");
            if (!i) {
                var s = this._uiHash();
                if (this._trigger("drag", e, s) === !1) {
                    this._mouseUp({});
                    return !1
                };
                this.position = s.position
            };
            if (!this.options.axis || this.options.axis !== "y") {
                this.helper[0].style.left = this.position.left + "px"
            };
            if (!this.options.axis || this.options.axis !== "x") {
                this.helper[0].style.top = this.position.top + "px"
            };
            if (t.ui.ddmanager) {
                t.ui.ddmanager.drag(this, e)
            };
            return !1
        },
        _mouseStop: function(e) {
            var s = this,
                i = !1;
            if (t.ui.ddmanager && !this.options.dropBehaviour) {
                i = t.ui.ddmanager.drop(this, e)
            };
            if (this.dropped) {
                i = this.dropped;
                this.dropped = !1
            };
            if (this.options.helper === "original" && !t.contains(this.element[0].ownerDocument, this.element[0])) {
                return !1
            };
            if ((this.options.revert === "invalid" && !i) || (this.options.revert === "valid" && i) || this.options.revert === !0 || (t.isFunction(this.options.revert) && this.options.revert.call(this.element, i))) {
                t(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
                    if (s._trigger("stop", e) !== !1) {
                        s._clear()
                    }
                })
            } else {
                if (this._trigger("stop", e) !== !1) {
                    this._clear()
                }
            };
            return !1
        },
        _mouseUp: function(e) {
            t("div.ui-draggable-iframeFix").each(function() {
                this.parentNode.removeChild(this)
            });
            if (t.ui.ddmanager) {
                t.ui.ddmanager.dragStop(this, e)
            };
            return t.ui.mouse.prototype._mouseUp.call(this, e)
        },
        cancel: function() {
            if (this.helper.is(".ui-draggable-dragging")) {
                this._mouseUp({})
            } else {
                this._clear()
            };
            return this
        },
        _getHandle: function(e) {
            return this.options.handle ? !!t(e.target).closest(this.element.find(this.options.handle)).length : !0
        },
        _createHelper: function(e) {
            var s = this.options,
                i = t.isFunction(s.helper) ? t(s.helper.apply(this.element[0], [e])) : (s.helper === "clone" ? this.element.clone().removeAttr("id") : this.element);
            if (!i.parents("body").length) {
                i.appendTo((s.appendTo === "parent" ? this.element[0].parentNode : s.appendTo))
            };
            if (i[0] !== this.element[0] && !(/(fixed|absolute)/).test(i.css("position"))) {
                i.css("position", "absolute")
            };
            return i
        },
        _adjustOffsetFromHelper: function(e) {
            if (typeof e === "string") {
                e = e.split(" ")
            };
            if (t.isArray(e)) {
                e = {
                    left: +e[0],
                    top: +e[1] || 0
                }
            };
            if ("left" in e) {
                this.offset.click.left = e.left + this.margins.left
            };
            if ("right" in e) {
                this.offset.click.left = this.helperProportions.width - e.right + this.margins.left
            };
            if ("top" in e) {
                this.offset.click.top = e.top + this.margins.top
            };
            if ("bottom" in e) {
                this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top
            }
        },
        _getParentOffset: function() {
            var e = this.offsetParent.offset();
            if (this.cssPosition === "absolute" && this.scrollParent[0] !== document && t.contains(this.scrollParent[0], this.offsetParent[0])) {
                e.left += this.scrollParent.scrollLeft();
                e.top += this.scrollParent.scrollTop()
            };
            if ((this.offsetParent[0] === document.body) || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === "html" && t.ui.ie)) {
                e = {
                    top: 0,
                    left: 0
                }
            };
            return {
                top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if (this.cssPosition === "relative") {
                var t = this.element.position();
                return {
                    top: t.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: t.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            } else {
                return {
                    top: 0,
                    left: 0
                }
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: (parseInt(this.element.css("marginLeft"), 10) || 0),
                top: (parseInt(this.element.css("marginTop"), 10) || 0),
                right: (parseInt(this.element.css("marginRight"), 10) || 0),
                bottom: (parseInt(this.element.css("marginBottom"), 10) || 0)
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var n, e, i, s = this.options;
            if (!s.containment) {
                this.containment = null;
                return
            };
            if (s.containment === "window") {
                this.containment = [t(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, t(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, t(window).scrollLeft() + t(window).width() - this.helperProportions.width - this.margins.left, t(window).scrollTop() + (t(window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
                return
            };
            if (s.containment === "document") {
                this.containment = [0, 0, t(document).width() - this.helperProportions.width - this.margins.left, (t(document).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
                return
            };
            if (s.containment.constructor === Array) {
                this.containment = s.containment;
                return
            };
            if (s.containment === "parent") {
                s.containment = this.helper[0].parentNode
            };
            e = t(s.containment);
            i = e[0];
            if (!i) {
                return
            };
            n = e.css("overflow") !== "hidden";
            this.containment = [(parseInt(e.css("borderLeftWidth"), 10) || 0) + (parseInt(e.css("paddingLeft"), 10) || 0), (parseInt(e.css("borderTopWidth"), 10) || 0) + (parseInt(e.css("paddingTop"), 10) || 0), (n ? Math.max(i.scrollWidth, i.offsetWidth) : i.offsetWidth) - (parseInt(e.css("borderRightWidth"), 10) || 0) - (parseInt(e.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (n ? Math.max(i.scrollHeight, i.offsetHeight) : i.offsetHeight) - (parseInt(e.css("borderBottomWidth"), 10) || 0) - (parseInt(e.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom];
            this.relative_container = e
        },
        _convertPositionTo: function(e, i) {
            if (!i) {
                i = this.position
            };
            var s = e === "absolute" ? 1 : -1,
                n = this.cssPosition === "absolute" && !(this.scrollParent[0] !== document && t.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent;
            if (!this.offset.scroll) {
                this.offset.scroll = {
                    top: n.scrollTop(),
                    left: n.scrollLeft()
                }
            };
            return {
                top: (i.top + this.offset.relative.top * s + this.offset.parent.top * s - ((this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : this.offset.scroll.top) * s)),
                left: (i.left + this.offset.relative.left * s + this.offset.parent.left * s - ((this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : this.offset.scroll.left) * s))
            }
        },
        _generatePosition: function(e) {
            var i, a, n, o, s = this.options,
                h = this.cssPosition === "absolute" && !(this.scrollParent[0] !== document && t.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                r = e.pageX,
                l = e.pageY;
            if (!this.offset.scroll) {
                this.offset.scroll = {
                    top: h.scrollTop(),
                    left: h.scrollLeft()
                }
            };
            if (this.originalPosition) {
                if (this.containment) {
                    if (this.relative_container) {
                        a = this.relative_container.offset();
                        i = [this.containment[0] + a.left, this.containment[1] + a.top, this.containment[2] + a.left, this.containment[3] + a.top]
                    } else {
                        i = this.containment
                    };
                    if (e.pageX - this.offset.click.left < i[0]) {
                        r = i[0] + this.offset.click.left
                    };
                    if (e.pageY - this.offset.click.top < i[1]) {
                        l = i[1] + this.offset.click.top
                    };
                    if (e.pageX - this.offset.click.left > i[2]) {
                        r = i[2] + this.offset.click.left
                    };
                    if (e.pageY - this.offset.click.top > i[3]) {
                        l = i[3] + this.offset.click.top
                    }
                };
                if (s.grid) {
                    n = s.grid[1] ? this.originalPageY + Math.round((l - this.originalPageY) / s.grid[1]) * s.grid[1] : this.originalPageY;
                    l = i ? ((n - this.offset.click.top >= i[1] || n - this.offset.click.top > i[3]) ? n : ((n - this.offset.click.top >= i[1]) ? n - s.grid[1] : n + s.grid[1])) : n;
                    o = s.grid[0] ? this.originalPageX + Math.round((r - this.originalPageX) / s.grid[0]) * s.grid[0] : this.originalPageX;
                    r = i ? ((o - this.offset.click.left >= i[0] || o - this.offset.click.left > i[2]) ? o : ((o - this.offset.click.left >= i[0]) ? o - s.grid[0] : o + s.grid[0])) : o
                }
            };
            return {
                top: (l - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : this.offset.scroll.top)),
                left: (r - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : this.offset.scroll.left))
            }
        },
        _clear: function() {
            this.helper.removeClass("ui-draggable-dragging");
            if (this.helper[0] !== this.element[0] && !this.cancelHelperRemoval) {
                this.helper.remove()
            };
            this.helper = null;
            this.cancelHelperRemoval = !1
        },
        _trigger: function(e, i, s) {
            s = s || this._uiHash();
            t.ui.plugin.call(this, e, [i, s]);
            if (e === "drag") {
                this.positionAbs = this._convertPositionTo("absolute")
            };
            return t.Widget.prototype._trigger.call(this, e, i, s)
        },
        plugins: {},
        _uiHash: function() {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            }
        }
    });
    t.ui.plugin.add("draggable", "connectToSortable", {
        start: function(e, i) {
            var s = t(this).data("ui-draggable"),
                n = s.options,
                o = t.extend({}, i, {
                    item: s.element
                });
            s.sortables = [];
            t(n.connectToSortable).each(function() {
                var i = t.data(this, "ui-sortable");
                if (i && !i.options.disabled) {
                    s.sortables.push({
                        instance: i,
                        shouldRevert: i.options.revert
                    });
                    i.refreshPositions();
                    i._trigger("activate", e, o)
                }
            })
        },
        stop: function(e, i) {
            var s = t(this).data("ui-draggable"),
                n = t.extend({}, i, {
                    item: s.element
                });
            t.each(s.sortables, function() {
                if (this.instance.isOver) {
                    this.instance.isOver = 0;
                    s.cancelHelperRemoval = !0;
                    this.instance.cancelHelperRemoval = !1;
                    if (this.shouldRevert) {
                        this.instance.options.revert = this.shouldRevert
                    };
                    this.instance._mouseStop(e);
                    this.instance.options.helper = this.instance.options._helper;
                    if (s.options.helper === "original") {
                        this.instance.currentItem.css({
                            top: "auto",
                            left: "auto"
                        })
                    }
                } else {
                    this.instance.cancelHelperRemoval = !1;
                    this.instance._trigger("deactivate", e, n)
                }
            })
        },
        drag: function(e, i) {
            var s = t(this).data("ui-draggable"),
                n = this;
            t.each(s.sortables, function() {
                var o = !1,
                    a = this;
                this.instance.positionAbs = s.positionAbs;
                this.instance.helperProportions = s.helperProportions;
                this.instance.offset.click = s.offset.click;
                if (this.instance._intersectsWith(this.instance.containerCache)) {
                    o = !0;
                    t.each(s.sortables, function() {
                        this.instance.positionAbs = s.positionAbs;
                        this.instance.helperProportions = s.helperProportions;
                        this.instance.offset.click = s.offset.click;
                        if (this !== a && this.instance._intersectsWith(this.instance.containerCache) && t.contains(a.instance.element[0], this.instance.element[0])) {
                            o = !1
                        };
                        return o
                    })
                };
                if (o) {
                    if (!this.instance.isOver) {
                        this.instance.isOver = 1;
                        this.instance.currentItem = t(n).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item", !0);
                        this.instance.options._helper = this.instance.options.helper;
                        this.instance.options.helper = function() {
                            return i.helper[0]
                        };
                        e.target = this.instance.currentItem[0];
                        this.instance._mouseCapture(e, !0);
                        this.instance._mouseStart(e, !0, !0);
                        this.instance.offset.click.top = s.offset.click.top;
                        this.instance.offset.click.left = s.offset.click.left;
                        this.instance.offset.parent.left -= s.offset.parent.left - this.instance.offset.parent.left;
                        this.instance.offset.parent.top -= s.offset.parent.top - this.instance.offset.parent.top;
                        s._trigger("toSortable", e);
                        s.dropped = this.instance.element;
                        s.currentItem = s.element;
                        this.instance.fromOutside = s
                    };
                    if (this.instance.currentItem) {
                        this.instance._mouseDrag(e)
                    }
                } else {
                    if (this.instance.isOver) {
                        this.instance.isOver = 0;
                        this.instance.cancelHelperRemoval = !0;
                        this.instance.options.revert = !1;
                        this.instance._trigger("out", e, this.instance._uiHash(this.instance));
                        this.instance._mouseStop(e, !0);
                        this.instance.options.helper = this.instance.options._helper;
                        this.instance.currentItem.remove();
                        if (this.instance.placeholder) {
                            this.instance.placeholder.remove()
                        };
                        s._trigger("fromSortable", e);
                        s.dropped = !1
                    }
                }
            })
        }
    });
    t.ui.plugin.add("draggable", "cursor", {
        start: function() {
            var e = t("body"),
                i = t(this).data("ui-draggable").options;
            if (e.css("cursor")) {
                i._cursor = e.css("cursor")
            };
            e.css("cursor", i.cursor)
        },
        stop: function() {
            var e = t(this).data("ui-draggable").options;
            if (e._cursor) {
                t("body").css("cursor", e._cursor)
            }
        }
    });
    t.ui.plugin.add("draggable", "opacity", {
        start: function(e, i) {
            var s = t(i.helper),
                n = t(this).data("ui-draggable").options;
            if (s.css("opacity")) {
                n._opacity = s.css("opacity")
            };
            s.css("opacity", n.opacity)
        },
        stop: function(e, i) {
            var s = t(this).data("ui-draggable").options;
            if (s._opacity) {
                t(i.helper).css("opacity", s._opacity)
            }
        }
    });
    t.ui.plugin.add("draggable", "scroll", {
        start: function() {
            var e = t(this).data("ui-draggable");
            if (e.scrollParent[0] !== document && e.scrollParent[0].tagName !== "HTML") {
                e.overflowOffset = e.scrollParent.offset()
            }
        },
        drag: function(e) {
            var s = t(this).data("ui-draggable"),
                i = s.options,
                n = !1;
            if (s.scrollParent[0] !== document && s.scrollParent[0].tagName !== "HTML") {
                if (!i.axis || i.axis !== "x") {
                    if ((s.overflowOffset.top + s.scrollParent[0].offsetHeight) - e.pageY < i.scrollSensitivity) {
                        s.scrollParent[0].scrollTop = n = s.scrollParent[0].scrollTop + i.scrollSpeed
                    } else if (e.pageY - s.overflowOffset.top < i.scrollSensitivity) {
                        s.scrollParent[0].scrollTop = n = s.scrollParent[0].scrollTop - i.scrollSpeed
                    }
                };
                if (!i.axis || i.axis !== "y") {
                    if ((s.overflowOffset.left + s.scrollParent[0].offsetWidth) - e.pageX < i.scrollSensitivity) {
                        s.scrollParent[0].scrollLeft = n = s.scrollParent[0].scrollLeft + i.scrollSpeed
                    } else if (e.pageX - s.overflowOffset.left < i.scrollSensitivity) {
                        s.scrollParent[0].scrollLeft = n = s.scrollParent[0].scrollLeft - i.scrollSpeed
                    }
                }
            } else {
                if (!i.axis || i.axis !== "x") {
                    if (e.pageY - t(document).scrollTop() < i.scrollSensitivity) {
                        n = t(document).scrollTop(t(document).scrollTop() - i.scrollSpeed)
                    } else if (t(window).height() - (e.pageY - t(document).scrollTop()) < i.scrollSensitivity) {
                        n = t(document).scrollTop(t(document).scrollTop() + i.scrollSpeed)
                    }
                };
                if (!i.axis || i.axis !== "y") {
                    if (e.pageX - t(document).scrollLeft() < i.scrollSensitivity) {
                        n = t(document).scrollLeft(t(document).scrollLeft() - i.scrollSpeed)
                    } else if (t(window).width() - (e.pageX - t(document).scrollLeft()) < i.scrollSensitivity) {
                        n = t(document).scrollLeft(t(document).scrollLeft() + i.scrollSpeed)
                    }
                }
            };
            if (n !== !1 && t.ui.ddmanager && !i.dropBehaviour) {
                t.ui.ddmanager.prepareOffsets(s, e)
            }
        }
    });
    t.ui.plugin.add("draggable", "snap", {
        start: function() {
            var e = t(this).data("ui-draggable"),
                i = e.options;
            e.snapElements = [];
            t(i.snap.constructor !== String ? (i.snap.items || ":data(ui-draggable)") : i.snap).each(function() {
                var i = t(this),
                    s = i.offset();
                if (this !== e.element[0]) {
                    e.snapElements.push({
                        item: this,
                        width: i.outerWidth(),
                        height: i.outerHeight(),
                        top: s.top,
                        left: s.left
                    })
                }
            })
        },
        drag: function(e, i) {
            var a, r, l, h, u, f, c, d, n, m, s = t(this).data("ui-draggable"),
                v = s.options,
                o = v.snapTolerance,
                p = i.offset.left,
                b = p + s.helperProportions.width,
                g = i.offset.top,
                y = g + s.helperProportions.height;
            for (n = s.snapElements.length - 1; n >= 0; n--) {
                u = s.snapElements[n].left;
                f = u + s.snapElements[n].width;
                c = s.snapElements[n].top;
                d = c + s.snapElements[n].height;
                if (b < u - o || p > f + o || y < c - o || g > d + o || !t.contains(s.snapElements[n].item.ownerDocument, s.snapElements[n].item)) {
                    if (s.snapElements[n].snapping) {
                        (s.options.snap.release && s.options.snap.release.call(s.element, e, t.extend(s._uiHash(), {
                            snapItem: s.snapElements[n].item
                        })))
                    };
                    s.snapElements[n].snapping = !1;
                    continue
                };
                if (v.snapMode !== "inner") {
                    a = Math.abs(c - y) <= o;
                    r = Math.abs(d - g) <= o;
                    l = Math.abs(u - b) <= o;
                    h = Math.abs(f - p) <= o;
                    if (a) {
                        i.position.top = s._convertPositionTo("relative", {
                            top: c - s.helperProportions.height,
                            left: 0
                        }).top - s.margins.top
                    };
                    if (r) {
                        i.position.top = s._convertPositionTo("relative", {
                            top: d,
                            left: 0
                        }).top - s.margins.top
                    };
                    if (l) {
                        i.position.left = s._convertPositionTo("relative", {
                            top: 0,
                            left: u - s.helperProportions.width
                        }).left - s.margins.left
                    };
                    if (h) {
                        i.position.left = s._convertPositionTo("relative", {
                            top: 0,
                            left: f
                        }).left - s.margins.left
                    }
                };
                m = (a || r || l || h);
                if (v.snapMode !== "outer") {
                    a = Math.abs(c - g) <= o;
                    r = Math.abs(d - y) <= o;
                    l = Math.abs(u - p) <= o;
                    h = Math.abs(f - b) <= o;
                    if (a) {
                        i.position.top = s._convertPositionTo("relative", {
                            top: c,
                            left: 0
                        }).top - s.margins.top
                    };
                    if (r) {
                        i.position.top = s._convertPositionTo("relative", {
                            top: d - s.helperProportions.height,
                            left: 0
                        }).top - s.margins.top
                    };
                    if (l) {
                        i.position.left = s._convertPositionTo("relative", {
                            top: 0,
                            left: u
                        }).left - s.margins.left
                    };
                    if (h) {
                        i.position.left = s._convertPositionTo("relative", {
                            top: 0,
                            left: f - s.helperProportions.width
                        }).left - s.margins.left
                    }
                };
                if (!s.snapElements[n].snapping && (a || r || l || h || m)) {
                    (s.options.snap.snap && s.options.snap.snap.call(s.element, e, t.extend(s._uiHash(), {
                        snapItem: s.snapElements[n].item
                    })))
                };
                s.snapElements[n].snapping = (a || r || l || h || m)
            }
        }
    });
    t.ui.plugin.add("draggable", "stack", {
        start: function() {
            var i, s = this.data("ui-draggable").options,
                e = t.makeArray(t(s.stack)).sort(function(e, i) {
                    return (parseInt(t(e).css("zIndex"), 10) || 0) - (parseInt(t(i).css("zIndex"), 10) || 0)
                });
            if (!e.length) {
                return
            };
            i = parseInt(t(e[0]).css("zIndex"), 10) || 0;
            t(e).each(function(e) {
                t(this).css("zIndex", i + e)
            });
            this.css("zIndex", (i + e.length))
        }
    });
    t.ui.plugin.add("draggable", "zIndex", {
        start: function(e, i) {
            var s = t(i.helper),
                n = t(this).data("ui-draggable").options;
            if (s.css("zIndex")) {
                n._zIndex = s.css("zIndex")
            };
            s.css("zIndex", n.zIndex)
        },
        stop: function(e, i) {
            var s = t(this).data("ui-draggable").options;
            if (s._zIndex) {
                t(i.helper).css("zIndex", s._zIndex)
            }
        }
    })
})(jQuery);
(function(t, e) {
    function i(t, e, i) {
        return (t > e) && (t < (e + i))
    };
    t.widget("ui.droppable", {
        version: "1.10.3",
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            activeClass: !1,
            addClasses: !0,
            greedy: !1,
            hoverClass: !1,
            scope: "default",
            tolerance: "intersect",
            activate: null,
            deactivate: null,
            drop: null,
            out: null,
            over: null
        },
        _create: function() {
            var e = this.options,
                i = e.accept;
            this.isover = !1;
            this.isout = !0;
            this.accept = t.isFunction(i) ? i : function(t) {
                return t.is(i)
            };
            this.proportions = {
                width: this.element[0].offsetWidth,
                height: this.element[0].offsetHeight
            };
            t.ui.ddmanager.droppables[e.scope] = t.ui.ddmanager.droppables[e.scope] || [];
            t.ui.ddmanager.droppables[e.scope].push(this);
            (e.addClasses && this.element.addClass("ui-droppable"))
        },
        _destroy: function() {
            var e = 0,
                i = t.ui.ddmanager.droppables[this.options.scope];
            for (; e < i.length; e++) {
                if (i[e] === this) {
                    i.splice(e, 1)
                }
            };
            this.element.removeClass("ui-droppable ui-droppable-disabled")
        },
        _setOption: function(e, i) {
            if (e === "accept") {
                this.accept = t.isFunction(i) ? i : function(t) {
                    return t.is(i)
                }
            };
            t.Widget.prototype._setOption.apply(this, arguments)
        },
        _activate: function(e) {
            var i = t.ui.ddmanager.current;
            if (this.options.activeClass) {
                this.element.addClass(this.options.activeClass)
            };
            if (i) {
                this._trigger("activate", e, this.ui(i))
            }
        },
        _deactivate: function(e) {
            var i = t.ui.ddmanager.current;
            if (this.options.activeClass) {
                this.element.removeClass(this.options.activeClass)
            };
            if (i) {
                this._trigger("deactivate", e, this.ui(i))
            }
        },
        _over: function(e) {
            var i = t.ui.ddmanager.current;
            if (!i || (i.currentItem || i.element)[0] === this.element[0]) {
                return
            };
            if (this.accept.call(this.element[0], (i.currentItem || i.element))) {
                if (this.options.hoverClass) {
                    this.element.addClass(this.options.hoverClass)
                };
                this._trigger("over", e, this.ui(i))
            }
        },
        _out: function(e) {
            var i = t.ui.ddmanager.current;
            if (!i || (i.currentItem || i.element)[0] === this.element[0]) {
                return
            };
            if (this.accept.call(this.element[0], (i.currentItem || i.element))) {
                if (this.options.hoverClass) {
                    this.element.removeClass(this.options.hoverClass)
                };
                this._trigger("out", e, this.ui(i))
            }
        },
        _drop: function(e, i) {
            var s = i || t.ui.ddmanager.current,
                n = !1;
            if (!s || (s.currentItem || s.element)[0] === this.element[0]) {
                return !1
            };
            this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function() {
                var e = t.data(this, "ui-droppable");
                if (e.options.greedy && !e.options.disabled && e.options.scope === s.options.scope && e.accept.call(e.element[0], (s.currentItem || s.element)) && t.ui.intersect(s, t.extend(e, {
                        offset: e.element.offset()
                    }), e.options.tolerance)) {
                    n = !0;
                    return !1
                }
            });
            if (n) {
                return !1
            };
            if (this.accept.call(this.element[0], (s.currentItem || s.element))) {
                if (this.options.activeClass) {
                    this.element.removeClass(this.options.activeClass)
                };
                if (this.options.hoverClass) {
                    this.element.removeClass(this.options.hoverClass)
                };
                this._trigger("drop", e, this.ui(s));
                return this.element
            };
            return !1
        },
        ui: function(t) {
            return {
                draggable: (t.currentItem || t.element),
                helper: t.helper,
                position: t.position,
                offset: t.positionAbs
            }
        }
    });
    t.ui.intersect = function(t, e, s) {
        if (!e.offset) {
            return !1
        };
        var f, d, a = (t.positionAbs || t.position.absolute).left,
            l = a + t.helperProportions.width,
            r = (t.positionAbs || t.position.absolute).top,
            h = r + t.helperProportions.height,
            n = e.offset.left,
            u = n + e.proportions.width,
            o = e.offset.top,
            c = o + e.proportions.height;
        switch (s) {
            case "fit":
                return (n <= a && l <= u && o <= r && h <= c);
            case "intersect":
                return (n < a + (t.helperProportions.width / 2) && l - (t.helperProportions.width / 2) < u && o < r + (t.helperProportions.height / 2) && h - (t.helperProportions.height / 2) < c);
            case "pointer":
                f = ((t.positionAbs || t.position.absolute).left + (t.clickOffset || t.offset.click).left);
                d = ((t.positionAbs || t.position.absolute).top + (t.clickOffset || t.offset.click).top);
                return i(d, o, e.proportions.height) && i(f, n, e.proportions.width);
            case "touch":
                return ((r >= o && r <= c) || (h >= o && h <= c) || (r < o && h > c)) && ((a >= n && a <= u) || (l >= n && l <= u) || (a < n && l > u));
            default:
                return !1
        }
    };
    t.ui.ddmanager = {
        current: null,
        droppables: {
            "default": []
        },
        prepareOffsets: function(e, i) {
            var s, o, n = t.ui.ddmanager.droppables[e.options.scope] || [],
                r = i ? i.type : null,
                a = (e.currentItem || e.element).find(":data(ui-droppable)").addBack();
            droppablesLoop: for (s = 0; s < n.length; s++) {
                if (n[s].options.disabled || (e && !n[s].accept.call(n[s].element[0], (e.currentItem || e.element)))) {
                    continue
                };
                for (o = 0; o < a.length; o++) {
                    if (a[o] === n[s].element[0]) {
                        n[s].proportions.height = 0;
                        continue;
                        droppablesLoop
                    }
                };
                n[s].visible = n[s].element.css("display") !== "none";
                if (!n[s].visible) {
                    continue
                };
                if (r === "mousedown") {
                    n[s]._activate.call(n[s], i)
                };
                n[s].offset = n[s].element.offset();
                n[s].proportions = {
                    width: n[s].element[0].offsetWidth,
                    height: n[s].element[0].offsetHeight
                }
            }
        },
        drop: function(e, i) {
            var s = !1;
            t.each((t.ui.ddmanager.droppables[e.options.scope] || []).slice(), function() {
                if (!this.options) {
                    return
                };
                if (!this.options.disabled && this.visible && t.ui.intersect(e, this, this.options.tolerance)) {
                    s = this._drop.call(this, i) || s
                };
                if (!this.options.disabled && this.visible && this.accept.call(this.element[0], (e.currentItem || e.element))) {
                    this.isout = !0;
                    this.isover = !1;
                    this._deactivate.call(this, i)
                }
            });
            return s
        },
        dragStart: function(e, i) {
            e.element.parentsUntil("body").bind("scroll.droppable", function() {
                if (!e.options.refreshPositions) {
                    t.ui.ddmanager.prepareOffsets(e, i)
                }
            })
        },
        drag: function(e, i) {
            if (e.options.refreshPositions) {
                t.ui.ddmanager.prepareOffsets(e, i)
            };
            t.each(t.ui.ddmanager.droppables[e.options.scope] || [], function() {
                if (this.options.disabled || this.greedyChild || !this.visible) {
                    return
                };
                var s, a, o, r = t.ui.intersect(e, this, this.options.tolerance),
                    n = !r && this.isover ? "isout" : (r && !this.isover ? "isover" : null);
                if (!n) {
                    return
                };
                if (this.options.greedy) {
                    a = this.options.scope;
                    o = this.element.parents(":data(ui-droppable)").filter(function() {
                        return t.data(this, "ui-droppable").options.scope === a
                    });
                    if (o.length) {
                        s = t.data(o[0], "ui-droppable");
                        s.greedyChild = (n === "isover")
                    }
                };
                if (s && n === "isover") {
                    s.isover = !1;
                    s.isout = !0;
                    s._out.call(s, i)
                };
                this[n] = !0;
                this[n === "isout" ? "isover" : "isout"] = !1;
                this[n === "isover" ? "_over" : "_out"].call(this, i);
                if (s && n === "isout") {
                    s.isout = !1;
                    s.isover = !0;
                    s._over.call(s, i)
                }
            })
        },
        dragStop: function(e, i) {
            e.element.parentsUntil("body").unbind("scroll.droppable");
            if (!e.options.refreshPositions) {
                t.ui.ddmanager.prepareOffsets(e, i)
            }
        }
    }
})(jQuery);
(function(t, e) {
    function s(t) {
        return parseInt(t, 10) || 0
    };

    function i(t) {
        return !isNaN(parseInt(t, 10))
    };
    t.widget("ui.resizable", t.ui.mouse, {
        version: "1.10.3",
        widgetEventPrefix: "resize",
        options: {
            alsoResize: !1,
            animate: !1,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: !1,
            autoHide: !1,
            containment: !1,
            ghost: !1,
            grid: !1,
            handles: "e,s,se",
            helper: !1,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            zIndex: 90,
            resize: null,
            start: null,
            stop: null
        },
        _create: function() {
            var a, o, s, i, r, n = this,
                e = this.options;
            this.element.addClass("ui-resizable");
            t.extend(this, {
                _aspectRatio: !!(e.aspectRatio),
                aspectRatio: e.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: e.helper || e.ghost || e.animate ? e.helper || "ui-resizable-helper" : null
            });
            if (this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) {
                this.element.wrap(t("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
                    position: this.element.css("position"),
                    width: this.element.outerWidth(),
                    height: this.element.outerHeight(),
                    top: this.element.css("top"),
                    left: this.element.css("left")
                }));
                this.element = this.element.parent().data("ui-resizable", this.element.data("ui-resizable"));
                this.elementIsWrapper = !0;
                this.element.css({
                    marginLeft: this.originalElement.css("marginLeft"),
                    marginTop: this.originalElement.css("marginTop"),
                    marginRight: this.originalElement.css("marginRight"),
                    marginBottom: this.originalElement.css("marginBottom")
                });
                this.originalElement.css({
                    marginLeft: 0,
                    marginTop: 0,
                    marginRight: 0,
                    marginBottom: 0
                });
                this.originalResizeStyle = this.originalElement.css("resize");
                this.originalElement.css("resize", "none");
                this._proportionallyResizeElements.push(this.originalElement.css({
                    position: "static",
                    zoom: 1,
                    display: "block"
                }));
                this.originalElement.css({
                    margin: this.originalElement.css("margin")
                });
                this._proportionallyResize()
            };
            this.handles = e.handles || (!t(".ui-resizable-handle", this.element).length ? "e,s,se" : {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw"
            });
            if (this.handles.constructor === String) {
                if (this.handles === "all") {
                    this.handles = "n,e,s,w,se,sw,ne,nw"
                };
                a = this.handles.split(",");
                this.handles = {};
                for (o = 0; o < a.length; o++) {
                    s = t.trim(a[o]);
                    r = "ui-resizable-" + s;
                    i = t("<div class='ui-resizable-handle " + r + "'></div>");
                    i.css({
                        zIndex: e.zIndex
                    });
                    if ("se" === s) {
                        i.addClass("ui-icon ui-icon-gripsmall-diagonal-se")
                    };
                    this.handles[s] = ".ui-resizable-" + s;
                    this.element.append(i)
                }
            };
            this._renderAxis = function(e) {
                var i, s, n, o;
                e = e || this.element;
                for (i in this.handles) {
                    if (this.handles[i].constructor === String) {
                        this.handles[i] = t(this.handles[i], this.element).show()
                    };
                    if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {
                        s = t(this.handles[i], this.element);
                        o = /sw|ne|nw|se|n|s/.test(i) ? s.outerHeight() : s.outerWidth();
                        n = ["padding", /ne|nw|n/.test(i) ? "Top" : /se|sw|s/.test(i) ? "Bottom" : /^e$/.test(i) ? "Right" : "Left"].join("");
                        e.css(n, o);
                        this._proportionallyResize()
                    };
                    if (!t(this.handles[i]).length) {
                        continue
                    }
                }
            };
            this._renderAxis(this.element);
            this._handles = t(".ui-resizable-handle", this.element).disableSelection();
            this._handles.mouseover(function() {
                if (!n.resizing) {
                    if (this.className) {
                        i = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)
                    };
                    n.axis = i && i[1] ? i[1] : "se"
                }
            });
            if (e.autoHide) {
                this._handles.hide();
                t(this.element).addClass("ui-resizable-autohide").mouseenter(function() {
                    if (e.disabled) {
                        return
                    };
                    t(this).removeClass("ui-resizable-autohide");
                    n._handles.show()
                }).mouseleave(function() {
                    if (e.disabled) {
                        return
                    };
                    if (!n.resizing) {
                        t(this).addClass("ui-resizable-autohide");
                        n._handles.hide()
                    }
                })
            };
            this._mouseInit()
        },
        _destroy: function() {
            this._mouseDestroy();
            var e, i = function(e) {
                t(e).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
            };
            if (this.elementIsWrapper) {
                i(this.element);
                e = this.element;
                this.originalElement.css({
                    position: e.css("position"),
                    width: e.outerWidth(),
                    height: e.outerHeight(),
                    top: e.css("top"),
                    left: e.css("left")
                }).insertAfter(e);
                e.remove()
            };
            this.originalElement.css("resize", this.originalResizeStyle);
            i(this.originalElement);
            return this
        },
        _mouseCapture: function(e) {
            var s, i, n = !1;
            for (s in this.handles) {
                i = t(this.handles[s])[0];
                if (i === e.target || t.contains(i, e.target)) {
                    n = !0
                }
            };
            return !this.options.disabled && n
        },
        _mouseStart: function(e) {
            var o, a, r, n = this.options,
                l = this.element.position(),
                i = this.element;
            this.resizing = !0;
            if ((/absolute/).test(i.css("position"))) {
                i.css({
                    position: "absolute",
                    top: i.css("top"),
                    left: i.css("left")
                })
            } else if (i.is(".ui-draggable")) {
                i.css({
                    position: "absolute",
                    top: l.top,
                    left: l.left
                })
            };
            this._renderProxy();
            o = s(this.helper.css("left"));
            a = s(this.helper.css("top"));
            if (n.containment) {
                o += t(n.containment).scrollLeft() || 0;
                a += t(n.containment).scrollTop() || 0
            };
            this.offset = this.helper.offset();
            this.position = {
                left: o,
                top: a
            };
            this.size = this._helper ? {
                width: i.outerWidth(),
                height: i.outerHeight()
            } : {
                width: i.width(),
                height: i.height()
            };
            this.originalSize = this._helper ? {
                width: i.outerWidth(),
                height: i.outerHeight()
            } : {
                width: i.width(),
                height: i.height()
            };
            this.originalPosition = {
                left: o,
                top: a
            };
            this.sizeDiff = {
                width: i.outerWidth() - i.width(),
                height: i.outerHeight() - i.height()
            };
            this.originalMousePosition = {
                left: e.pageX,
                top: e.pageY
            };
            this.aspectRatio = (typeof n.aspectRatio === "number") ? n.aspectRatio : ((this.originalSize.width / this.originalSize.height) || 1);
            r = t(".ui-resizable-" + this.axis).css("cursor");
            t("body").css("cursor", r === "auto" ? this.axis + "-resize" : r);
            i.addClass("ui-resizable-resizing");
            this._propagate("start", e);
            return !0
        },
        _mouseDrag: function(e) {
            var i, a = this.helper,
                s = {},
                n = this.originalMousePosition,
                r = this.axis,
                l = this.position.top,
                h = this.position.left,
                u = this.size.width,
                c = this.size.height,
                f = (e.pageX - n.left) || 0,
                d = (e.pageY - n.top) || 0,
                o = this._change[r];
            if (!o) {
                return !1
            };
            i = o.apply(this, [e, f, d]);
            this._updateVirtualBoundaries(e.shiftKey);
            if (this._aspectRatio || e.shiftKey) {
                i = this._updateRatio(i, e)
            };
            i = this._respectSize(i, e);
            this._updateCache(i);
            this._propagate("resize", e);
            if (this.position.top !== l) {
                s.top = this.position.top + "px"
            };
            if (this.position.left !== h) {
                s.left = this.position.left + "px"
            };
            if (this.size.width !== u) {
                s.width = this.size.width + "px"
            };
            if (this.size.height !== c) {
                s.height = this.size.height + "px"
            };
            a.css(s);
            if (!this._helper && this._proportionallyResizeElements.length) {
                this._proportionallyResize()
            };
            if (!t.isEmptyObject(s)) {
                this._trigger("resize", e, this.ui())
            };
            return !1
        },
        _mouseStop: function(e) {
            this.resizing = !1;
            var s, n, o, a, r, l, h, u = this.options,
                i = this;
            if (this._helper) {
                s = this._proportionallyResizeElements;
                n = s.length && (/textarea/i).test(s[0].nodeName);
                o = n && t.ui.hasScroll(s[0], "left") ? 0 : i.sizeDiff.height;
                a = n ? 0 : i.sizeDiff.width;
                r = {
                    width: (i.helper.width() - a),
                    height: (i.helper.height() - o)
                };
                l = (parseInt(i.element.css("left"), 10) + (i.position.left - i.originalPosition.left)) || null;
                h = (parseInt(i.element.css("top"), 10) + (i.position.top - i.originalPosition.top)) || null;
                if (!u.animate) {
                    this.element.css(t.extend(r, {
                        top: h,
                        left: l
                    }))
                };
                i.helper.height(i.size.height);
                i.helper.width(i.size.width);
                if (this._helper && !u.animate) {
                    this._proportionallyResize()
                }
            };
            t("body").css("cursor", "auto");
            this.element.removeClass("ui-resizable-resizing");
            this._propagate("stop", e);
            if (this._helper) {
                this.helper.remove()
            };
            return !1
        },
        _updateVirtualBoundaries: function(t) {
            var n, o, a, r, e, s = this.options;
            e = {
                minWidth: i(s.minWidth) ? s.minWidth : 0,
                maxWidth: i(s.maxWidth) ? s.maxWidth : Infinity,
                minHeight: i(s.minHeight) ? s.minHeight : 0,
                maxHeight: i(s.maxHeight) ? s.maxHeight : Infinity
            };
            if (this._aspectRatio || t) {
                n = e.minHeight * this.aspectRatio;
                a = e.minWidth / this.aspectRatio;
                o = e.maxHeight * this.aspectRatio;
                r = e.maxWidth / this.aspectRatio;
                if (n > e.minWidth) {
                    e.minWidth = n
                };
                if (a > e.minHeight) {
                    e.minHeight = a
                };
                if (o < e.maxWidth) {
                    e.maxWidth = o
                };
                if (r < e.maxHeight) {
                    e.maxHeight = r
                }
            };
            this._vBoundaries = e
        },
        _updateCache: function(t) {
            this.offset = this.helper.offset();
            if (i(t.left)) {
                this.position.left = t.left
            };
            if (i(t.top)) {
                this.position.top = t.top
            };
            if (i(t.height)) {
                this.size.height = t.height
            };
            if (i(t.width)) {
                this.size.width = t.width
            }
        },
        _updateRatio: function(t) {
            var e = this.position,
                s = this.size,
                n = this.axis;
            if (i(t.height)) {
                t.width = (t.height * this.aspectRatio)
            } else if (i(t.width)) {
                t.height = (t.width / this.aspectRatio)
            };
            if (n === "sw") {
                t.left = e.left + (s.width - t.width);
                t.top = null
            };
            if (n === "nw") {
                t.top = e.top + (s.height - t.height);
                t.left = e.left + (s.width - t.width)
            };
            return t
        },
        _respectSize: function(t) {
            var e = this._vBoundaries,
                s = this.axis,
                n = i(t.width) && e.maxWidth && (e.maxWidth < t.width),
                o = i(t.height) && e.maxHeight && (e.maxHeight < t.height),
                a = i(t.width) && e.minWidth && (e.minWidth > t.width),
                r = i(t.height) && e.minHeight && (e.minHeight > t.height),
                l = this.originalPosition.left + this.originalSize.width,
                h = this.position.top + this.size.height,
                u = /sw|nw|w/.test(s),
                c = /nw|ne|n/.test(s);
            if (a) {
                t.width = e.minWidth
            };
            if (r) {
                t.height = e.minHeight
            };
            if (n) {
                t.width = e.maxWidth
            };
            if (o) {
                t.height = e.maxHeight
            };
            if (a && u) {
                t.left = l - e.minWidth
            };
            if (n && u) {
                t.left = l - e.maxWidth
            };
            if (r && c) {
                t.top = h - e.minHeight
            };
            if (o && c) {
                t.top = h - e.maxHeight
            };
            if (!t.width && !t.height && !t.left && t.top) {
                t.top = null
            } else if (!t.width && !t.height && !t.top && t.left) {
                t.left = null
            };
            return t
        },
        _proportionallyResize: function() {
            if (!this._proportionallyResizeElements.length) {
                return
            };
            var i, e, s, n, t, o = this.helper || this.element;
            for (i = 0; i < this._proportionallyResizeElements.length; i++) {
                t = this._proportionallyResizeElements[i];
                if (!this.borderDif) {
                    this.borderDif = [];
                    s = [t.css("borderTopWidth"), t.css("borderRightWidth"), t.css("borderBottomWidth"), t.css("borderLeftWidth")];
                    n = [t.css("paddingTop"), t.css("paddingRight"), t.css("paddingBottom"), t.css("paddingLeft")];
                    for (e = 0; e < s.length; e++) {
                        this.borderDif[e] = (parseInt(s[e], 10) || 0) + (parseInt(n[e], 10) || 0)
                    }
                };
                t.css({
                    height: (o.height() - this.borderDif[0] - this.borderDif[2]) || 0,
                    width: (o.width() - this.borderDif[1] - this.borderDif[3]) || 0
                })
            }
        },
        _renderProxy: function() {
            var e = this.element,
                i = this.options;
            this.elementOffset = e.offset();
            if (this._helper) {
                this.helper = this.helper || t("<div style='overflow:hidden;'></div>");
                this.helper.addClass(this._helper).css({
                    width: this.element.outerWidth() - 1,
                    height: this.element.outerHeight() - 1,
                    position: "absolute",
                    left: this.elementOffset.left + "px",
                    top: this.elementOffset.top + "px",
                    zIndex: ++i.zIndex
                });
                this.helper.appendTo("body").disableSelection()
            } else {
                this.helper = this.element
            }
        },
        _change: {
            e: function(t, e) {
                return {
                    width: this.originalSize.width + e
                }
            },
            w: function(t, e) {
                var i = this.originalSize,
                    s = this.originalPosition;
                return {
                    left: s.left + e,
                    width: i.width - e
                }
            },
            n: function(t, e, i) {
                var s = this.originalSize,
                    n = this.originalPosition;
                return {
                    top: n.top + i,
                    height: s.height - i
                }
            },
            s: function(t, e, i) {
                return {
                    height: this.originalSize.height + i
                }
            },
            se: function(e, i, s) {
                return t.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [e, i, s]))
            },
            sw: function(e, i, s) {
                return t.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [e, i, s]))
            },
            ne: function(e, i, s) {
                return t.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [e, i, s]))
            },
            nw: function(e, i, s) {
                return t.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [e, i, s]))
            }
        },
        _propagate: function(e, i) {
            t.ui.plugin.call(this, e, [i, this.ui()]);
            (e !== "resize" && this._trigger(e, i, this.ui()))
        },
        plugins: {},
        ui: function() {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            }
        }
    });
    t.ui.plugin.add("resizable", "animate", {
        stop: function(e) {
            var i = t(this).data("ui-resizable"),
                n = i.options,
                s = i._proportionallyResizeElements,
                o = s.length && (/textarea/i).test(s[0].nodeName),
                l = o && t.ui.hasScroll(s[0], "left") ? 0 : i.sizeDiff.height,
                h = o ? 0 : i.sizeDiff.width,
                u = {
                    width: (i.size.width - h),
                    height: (i.size.height - l)
                },
                a = (parseInt(i.element.css("left"), 10) + (i.position.left - i.originalPosition.left)) || null,
                r = (parseInt(i.element.css("top"), 10) + (i.position.top - i.originalPosition.top)) || null;
            i.element.animate(t.extend(u, r && a ? {
                top: r,
                left: a
            } : {}), {
                duration: n.animateDuration,
                easing: n.animateEasing,
                step: function() {
                    var n = {
                        width: parseInt(i.element.css("width"), 10),
                        height: parseInt(i.element.css("height"), 10),
                        top: parseInt(i.element.css("top"), 10),
                        left: parseInt(i.element.css("left"), 10)
                    };
                    if (s && s.length) {
                        t(s[0]).css({
                            width: n.width,
                            height: n.height
                        })
                    };
                    i._updateCache(n);
                    i._propagate("resize", e)
                }
            })
        }
    });
    t.ui.plugin.add("resizable", "containment", {
        start: function() {
            var n, a, r, l, h, u, c, e = t(this).data("ui-resizable"),
                f = e.options,
                d = e.element,
                o = f.containment,
                i = (o instanceof t) ? o.get(0) : (/parent/.test(o)) ? d.parent().get(0) : o;
            if (!i) {
                return
            };
            e.containerElement = t(i);
            if (/document/.test(o) || o === document) {
                e.containerOffset = {
                    left: 0,
                    top: 0
                };
                e.containerPosition = {
                    left: 0,
                    top: 0
                };
                e.parentData = {
                    element: t(document),
                    left: 0,
                    top: 0,
                    width: t(document).width(),
                    height: t(document).height() || document.body.parentNode.scrollHeight
                }
            } else {
                n = t(i);
                a = [];
                t(["Top", "Right", "Left", "Bottom"]).each(function(t, e) {
                    a[t] = s(n.css("padding" + e))
                });
                e.containerOffset = n.offset();
                e.containerPosition = n.position();
                e.containerSize = {
                    height: (n.innerHeight() - a[3]),
                    width: (n.innerWidth() - a[1])
                };
                r = e.containerOffset;
                l = e.containerSize.height;
                h = e.containerSize.width;
                u = (t.ui.hasScroll(i, "left") ? i.scrollWidth : h);
                c = (t.ui.hasScroll(i) ? i.scrollHeight : l);
                e.parentData = {
                    element: i,
                    left: r.left,
                    top: r.top,
                    width: u,
                    height: c
                }
            }
        },
        resize: function(e) {
            var o, r, l, h, i = t(this).data("ui-resizable"),
                f = i.options,
                s = i.containerOffset,
                u = i.position,
                a = i._aspectRatio || e.shiftKey,
                n = {
                    top: 0,
                    left: 0
                },
                c = i.containerElement;
            if (c[0] !== document && (/static/).test(c.css("position"))) {
                n = s
            };
            if (u.left < (i._helper ? s.left : 0)) {
                i.size.width = i.size.width + (i._helper ? (i.position.left - s.left) : (i.position.left - n.left));
                if (a) {
                    i.size.height = i.size.width / i.aspectRatio
                };
                i.position.left = f.helper ? s.left : 0
            };
            if (u.top < (i._helper ? s.top : 0)) {
                i.size.height = i.size.height + (i._helper ? (i.position.top - s.top) : i.position.top);
                if (a) {
                    i.size.width = i.size.height * i.aspectRatio
                };
                i.position.top = i._helper ? s.top : 0
            };
            i.offset.left = i.parentData.left + i.position.left;
            i.offset.top = i.parentData.top + i.position.top;
            o = Math.abs((i._helper ? i.offset.left - n.left : (i.offset.left - n.left)) + i.sizeDiff.width);
            r = Math.abs((i._helper ? i.offset.top - n.top : (i.offset.top - s.top)) + i.sizeDiff.height);
            l = i.containerElement.get(0) === i.element.parent().get(0);
            h = /relative|absolute/.test(i.containerElement.css("position"));
            if (l && h) {
                o -= i.parentData.left
            };
            if (o + i.size.width >= i.parentData.width) {
                i.size.width = i.parentData.width - o;
                if (a) {
                    i.size.height = i.size.width / i.aspectRatio
                }
            };
            if (r + i.size.height >= i.parentData.height) {
                i.size.height = i.parentData.height - r;
                if (a) {
                    i.size.width = i.size.height * i.aspectRatio
                }
            }
        },
        stop: function() {
            var e = t(this).data("ui-resizable"),
                s = e.options,
                n = e.containerOffset,
                o = e.containerPosition,
                a = e.containerElement,
                i = t(e.helper),
                r = i.offset(),
                l = i.outerWidth() - e.sizeDiff.width,
                h = i.outerHeight() - e.sizeDiff.height;
            if (e._helper && !s.animate && (/relative/).test(a.css("position"))) {
                t(this).css({
                    left: r.left - o.left - n.left,
                    width: l,
                    height: h
                })
            };
            if (e._helper && !s.animate && (/static/).test(a.css("position"))) {
                t(this).css({
                    left: r.left - o.left - n.left,
                    width: l,
                    height: h
                })
            }
        }
    });
    t.ui.plugin.add("resizable", "alsoResize", {
        start: function() {
            var s = t(this).data("ui-resizable"),
                e = s.options,
                i = function(e) {
                    t(e).each(function() {
                        var e = t(this);
                        e.data("ui-resizable-alsoresize", {
                            width: parseInt(e.width(), 10),
                            height: parseInt(e.height(), 10),
                            left: parseInt(e.css("left"), 10),
                            top: parseInt(e.css("top"), 10)
                        })
                    })
                };
            if (typeof(e.alsoResize) === "object" && !e.alsoResize.parentNode) {
                if (e.alsoResize.length) {
                    e.alsoResize = e.alsoResize[0];
                    i(e.alsoResize)
                } else {
                    t.each(e.alsoResize, function(t) {
                        i(t)
                    })
                }
            } else {
                i(e.alsoResize)
            }
        },
        resize: function(e, i) {
            var s = t(this).data("ui-resizable"),
                n = s.options,
                o = s.originalSize,
                a = s.originalPosition,
                l = {
                    height: (s.size.height - o.height) || 0,
                    width: (s.size.width - o.width) || 0,
                    top: (s.position.top - a.top) || 0,
                    left: (s.position.left - a.left) || 0
                },
                r = function(e, s) {
                    t(e).each(function() {
                        var e = t(this),
                            o = t(this).data("ui-resizable-alsoresize"),
                            n = {},
                            a = s && s.length ? s : e.parents(i.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                        t.each(a, function(t, e) {
                            var i = (o[e] || 0) + (l[e] || 0);
                            if (i && i >= 0) {
                                n[e] = i || null
                            }
                        });
                        e.css(n)
                    })
                };
            if (typeof(n.alsoResize) === "object" && !n.alsoResize.nodeType) {
                t.each(n.alsoResize, function(t, e) {
                    r(t, e)
                })
            } else {
                r(n.alsoResize)
            }
        },
        stop: function() {
            t(this).removeData("resizable-alsoresize")
        }
    });
    t.ui.plugin.add("resizable", "ghost", {
        start: function() {
            var e = t(this).data("ui-resizable"),
                i = e.options,
                s = e.size;
            e.ghost = e.originalElement.clone();
            e.ghost.css({
                opacity: 0.25,
                display: "block",
                position: "relative",
                height: s.height,
                width: s.width,
                margin: 0,
                left: 0,
                top: 0
            }).addClass("ui-resizable-ghost").addClass(typeof i.ghost === "string" ? i.ghost : "");
            e.ghost.appendTo(e.helper)
        },
        resize: function() {
            var e = t(this).data("ui-resizable");
            if (e.ghost) {
                e.ghost.css({
                    position: "relative",
                    height: e.size.height,
                    width: e.size.width
                })
            }
        },
        stop: function() {
            var e = t(this).data("ui-resizable");
            if (e.ghost && e.helper) {
                e.helper.get(0).removeChild(e.ghost.get(0))
            }
        }
    });
    t.ui.plugin.add("resizable", "grid", {
        resize: function() {
            var e = t(this).data("ui-resizable"),
                i = e.options,
                d = e.size,
                o = e.originalSize,
                a = e.originalPosition,
                h = e.axis,
                u = typeof i.grid === "number" ? [i.grid, i.grid] : i.grid,
                r = (u[0] || 1),
                l = (u[1] || 1),
                c = Math.round((d.width - o.width) / r) * r,
                f = Math.round((d.height - o.height) / l) * l,
                s = o.width + c,
                n = o.height + f,
                p = i.maxWidth && (i.maxWidth < s),
                g = i.maxHeight && (i.maxHeight < n),
                m = i.minWidth && (i.minWidth > s),
                v = i.minHeight && (i.minHeight > n);
            i.grid = u;
            if (m) {
                s = s + r
            };
            if (v) {
                n = n + l
            };
            if (p) {
                s = s - r
            };
            if (g) {
                n = n - l
            };
            if (/^(se|s|e)$/.test(h)) {
                e.size.width = s;
                e.size.height = n
            } else if (/^(ne)$/.test(h)) {
                e.size.width = s;
                e.size.height = n;
                e.position.top = a.top - f
            } else if (/^(sw)$/.test(h)) {
                e.size.width = s;
                e.size.height = n;
                e.position.left = a.left - c
            } else {
                e.size.width = s;
                e.size.height = n;
                e.position.top = a.top - f;
                e.position.left = a.left - c
            }
        }
    })
})(jQuery);
(function(t, e) {
    t.widget("ui.selectable", t.ui.mouse, {
        version: "1.10.3",
        options: {
            appendTo: "body",
            autoRefresh: !0,
            distance: 0,
            filter: "*",
            tolerance: "touch",
            selected: null,
            selecting: null,
            start: null,
            stop: null,
            unselected: null,
            unselecting: null
        },
        _create: function() {
            var e, i = this;
            this.element.addClass("ui-selectable");
            this.dragged = !1;
            this.refresh = function() {
                e = t(i.options.filter, i.element[0]);
                e.addClass("ui-selectee");
                e.each(function() {
                    var e = t(this),
                        i = e.offset();
                    t.data(this, "selectable-item", {
                        element: this,
                        $element: e,
                        left: i.left,
                        top: i.top,
                        right: i.left + e.outerWidth(),
                        bottom: i.top + e.outerHeight(),
                        startselected: !1,
                        selected: e.hasClass("ui-selected"),
                        selecting: e.hasClass("ui-selecting"),
                        unselecting: e.hasClass("ui-unselecting")
                    })
                })
            };
            this.refresh();
            this.selectees = e.addClass("ui-selectee");
            this._mouseInit();
            this.helper = t("<div class='ui-selectable-helper'></div>")
        },
        _destroy: function() {
            this.selectees.removeClass("ui-selectee").removeData("selectable-item");
            this.element.removeClass("ui-selectable ui-selectable-disabled");
            this._mouseDestroy()
        },
        _mouseStart: function(e) {
            var i = this,
                s = this.options;
            this.opos = [e.pageX, e.pageY];
            if (this.options.disabled) {
                return
            };
            this.selectees = t(s.filter, this.element[0]);
            this._trigger("start", e);
            t(s.appendTo).append(this.helper);
            this.helper.css({
                "left": e.pageX,
                "top": e.pageY,
                "width": 0,
                "height": 0
            });
            if (s.autoRefresh) {
                this.refresh()
            };
            this.selectees.filter(".ui-selected").each(function() {
                var s = t.data(this, "selectable-item");
                s.startselected = !0;
                if (!e.metaKey && !e.ctrlKey) {
                    s.$element.removeClass("ui-selected");
                    s.selected = !1;
                    s.$element.addClass("ui-unselecting");
                    s.unselecting = !0;
                    i._trigger("unselecting", e, {
                        unselecting: s.element
                    })
                }
            });
            t(e.target).parents().addBack().each(function() {
                var n, s = t.data(this, "selectable-item");
                if (s) {
                    n = (!e.metaKey && !e.ctrlKey) || !s.$element.hasClass("ui-selected");
                    s.$element.removeClass(n ? "ui-unselecting" : "ui-selected").addClass(n ? "ui-selecting" : "ui-unselecting");
                    s.unselecting = !n;
                    s.selecting = n;
                    s.selected = n;
                    if (n) {
                        i._trigger("selecting", e, {
                            selecting: s.element
                        })
                    } else {
                        i._trigger("unselecting", e, {
                            unselecting: s.element
                        })
                    };
                    return !1
                }
            })
        },
        _mouseDrag: function(e) {
            this.dragged = !0;
            if (this.options.disabled) {
                return
            };
            var a, r = this,
                l = this.options,
                i = this.opos[0],
                s = this.opos[1],
                n = e.pageX,
                o = e.pageY;
            if (i > n) {
                a = n;
                n = i;
                i = a
            };
            if (s > o) {
                a = o;
                o = s;
                s = a
            };
            this.helper.css({
                left: i,
                top: s,
                width: n - i,
                height: o - s
            });
            this.selectees.each(function() {
                var a = t.data(this, "selectable-item"),
                    h = !1;
                if (!a || a.element === r.element[0]) {
                    return
                };
                if (l.tolerance === "touch") {
                    h = (!(a.left > n || a.right < i || a.top > o || a.bottom < s))
                } else if (l.tolerance === "fit") {
                    h = (a.left > i && a.right < n && a.top > s && a.bottom < o)
                };
                if (h) {
                    if (a.selected) {
                        a.$element.removeClass("ui-selected");
                        a.selected = !1
                    };
                    if (a.unselecting) {
                        a.$element.removeClass("ui-unselecting");
                        a.unselecting = !1
                    };
                    if (!a.selecting) {
                        a.$element.addClass("ui-selecting");
                        a.selecting = !0;
                        r._trigger("selecting", e, {
                            selecting: a.element
                        })
                    }
                } else {
                    if (a.selecting) {
                        if ((e.metaKey || e.ctrlKey) && a.startselected) {
                            a.$element.removeClass("ui-selecting");
                            a.selecting = !1;
                            a.$element.addClass("ui-selected");
                            a.selected = !0
                        } else {
                            a.$element.removeClass("ui-selecting");
                            a.selecting = !1;
                            if (a.startselected) {
                                a.$element.addClass("ui-unselecting");
                                a.unselecting = !0
                            };
                            r._trigger("unselecting", e, {
                                unselecting: a.element
                            })
                        }
                    };
                    if (a.selected) {
                        if (!e.metaKey && !e.ctrlKey && !a.startselected) {
                            a.$element.removeClass("ui-selected");
                            a.selected = !1;
                            a.$element.addClass("ui-unselecting");
                            a.unselecting = !0;
                            r._trigger("unselecting", e, {
                                unselecting: a.element
                            })
                        }
                    }
                }
            });
            return !1
        },
        _mouseStop: function(e) {
            var i = this;
            this.dragged = !1;
            t(".ui-unselecting", this.element[0]).each(function() {
                var s = t.data(this, "selectable-item");
                s.$element.removeClass("ui-unselecting");
                s.unselecting = !1;
                s.startselected = !1;
                i._trigger("unselected", e, {
                    unselected: s.element
                })
            });
            t(".ui-selecting", this.element[0]).each(function() {
                var s = t.data(this, "selectable-item");
                s.$element.removeClass("ui-selecting").addClass("ui-selected");
                s.selecting = !1;
                s.selected = !0;
                s.startselected = !0;
                i._trigger("selected", e, {
                    selected: s.element
                })
            });
            this._trigger("stop", e);
            this.helper.remove();
            return !1
        }
    })
})(jQuery);
(function(t, e) {
    function i(t, e, i) {
        return (t > e) && (t < (e + i))
    };

    function s(t) {
        return (/left|right/).test(t.css("float")) || (/inline|table-cell/).test(t.css("display"))
    };
    t.widget("ui.sortable", t.ui.mouse, {
        version: "1.10.3",
        widgetEventPrefix: "sort",
        ready: !1,
        options: {
            appendTo: "parent",
            axis: !1,
            connectWith: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            dropOnEmpty: !0,
            forcePlaceholderSize: !1,
            forceHelperSize: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            items: "> *",
            opacity: !1,
            placeholder: !1,
            revert: !1,
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            scope: "default",
            tolerance: "intersect",
            zIndex: 1000,
            activate: null,
            beforeStop: null,
            change: null,
            deactivate: null,
            out: null,
            over: null,
            receive: null,
            remove: null,
            sort: null,
            start: null,
            stop: null,
            update: null
        },
        _create: function() {
            var t = this.options;
            this.containerCache = {};
            this.element.addClass("ui-sortable");
            this.refresh();
            this.floating = this.items.length ? t.axis === "x" || s(this.items[0].item) : !1;
            this.offset = this.element.offset();
            this._mouseInit();
            this.ready = !0
        },
        _destroy: function() {
            this.element.removeClass("ui-sortable ui-sortable-disabled");
            this._mouseDestroy();
            for (var t = this.items.length - 1; t >= 0; t--) {
                this.items[t].item.removeData(this.widgetName + "-item")
            };
            return this
        },
        _setOption: function(e, i) {
            if (e === "disabled") {
                this.options[e] = i;
                this.widget().toggleClass("ui-sortable-disabled", !!i)
            } else {
                t.Widget.prototype._setOption.apply(this, arguments)
            }
        },
        _mouseCapture: function(e, i) {
            var s = null,
                o = !1,
                n = this;
            if (this.reverting) {
                return !1
            };
            if (this.options.disabled || this.options.type === "static") {
                return !1
            };
            this._refreshItems(e);
            t(e.target).parents().each(function() {
                if (t.data(this, n.widgetName + "-item") === n) {
                    s = t(this);
                    return !1
                }
            });
            if (t.data(e.target, n.widgetName + "-item") === n) {
                s = t(e.target)
            };
            if (!s) {
                return !1
            };
            if (this.options.handle && !i) {
                t(this.options.handle, s).find("*").addBack().each(function() {
                    if (this === e.target) {
                        o = !0
                    }
                });
                if (!o) {
                    return !1
                }
            };
            this.currentItem = s;
            this._removeCurrentsFromItems();
            return !0
        },
        _mouseStart: function(e, i, s) {
            var o, a, n = this.options;
            this.currentContainer = this;
            this.refreshPositions();
            this.helper = this._createHelper(e);
            this._cacheHelperProportions();
            this._cacheMargins();
            this.scrollParent = this.helper.scrollParent();
            this.offset = this.currentItem.offset();
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            };
            t.extend(this.offset, {
                click: {
                    left: e.pageX - this.offset.left,
                    top: e.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            });
            this.helper.css("position", "absolute");
            this.cssPosition = this.helper.css("position");
            this.originalPosition = this._generatePosition(e);
            this.originalPageX = e.pageX;
            this.originalPageY = e.pageY;
            (n.cursorAt && this._adjustOffsetFromHelper(n.cursorAt));
            this.domPosition = {
                prev: this.currentItem.prev()[0],
                parent: this.currentItem.parent()[0]
            };
            if (this.helper[0] !== this.currentItem[0]) {
                this.currentItem.hide()
            };
            this._createPlaceholder();
            if (n.containment) {
                this._setContainment()
            };
            if (n.cursor && n.cursor !== "auto") {
                a = this.document.find("body");
                this.storedCursor = a.css("cursor");
                a.css("cursor", n.cursor);
                this.storedStylesheet = t("<style>*{ cursor: " + n.cursor + " !important; }</style>").appendTo(a)
            };
            if (n.opacity) {
                if (this.helper.css("opacity")) {
                    this._storedOpacity = this.helper.css("opacity")
                };
                this.helper.css("opacity", n.opacity)
            };
            if (n.zIndex) {
                if (this.helper.css("zIndex")) {
                    this._storedZIndex = this.helper.css("zIndex")
                };
                this.helper.css("zIndex", n.zIndex)
            };
            if (this.scrollParent[0] !== document && this.scrollParent[0].tagName !== "HTML") {
                this.overflowOffset = this.scrollParent.offset()
            };
            this._trigger("start", e, this._uiHash());
            if (!this._preserveHelperProportions) {
                this._cacheHelperProportions()
            };
            if (!s) {
                for (o = this.containers.length - 1; o >= 0; o--) {
                    this.containers[o]._trigger("activate", e, this._uiHash(this))
                }
            };
            if (t.ui.ddmanager) {
                t.ui.ddmanager.current = this
            };
            if (t.ui.ddmanager && !n.dropBehaviour) {
                t.ui.ddmanager.prepareOffsets(this, e)
            };
            this.dragging = !0;
            this.helper.addClass("ui-sortable-helper");
            this._mouseDrag(e);
            return !0
        },
        _mouseDrag: function(e) {
            var a, n, o, r, i = this.options,
                s = !1;
            this.position = this._generatePosition(e);
            this.positionAbs = this._convertPositionTo("absolute");
            if (!this.lastPositionAbs) {
                this.lastPositionAbs = this.positionAbs
            };
            if (this.options.scroll) {
                if (this.scrollParent[0] !== document && this.scrollParent[0].tagName !== "HTML") {
                    if ((this.overflowOffset.top + this.scrollParent[0].offsetHeight) - e.pageY < i.scrollSensitivity) {
                        this.scrollParent[0].scrollTop = s = this.scrollParent[0].scrollTop + i.scrollSpeed
                    } else if (e.pageY - this.overflowOffset.top < i.scrollSensitivity) {
                        this.scrollParent[0].scrollTop = s = this.scrollParent[0].scrollTop - i.scrollSpeed
                    };
                    if ((this.overflowOffset.left + this.scrollParent[0].offsetWidth) - e.pageX < i.scrollSensitivity) {
                        this.scrollParent[0].scrollLeft = s = this.scrollParent[0].scrollLeft + i.scrollSpeed
                    } else if (e.pageX - this.overflowOffset.left < i.scrollSensitivity) {
                        this.scrollParent[0].scrollLeft = s = this.scrollParent[0].scrollLeft - i.scrollSpeed
                    }
                } else {
                    if (e.pageY - t(document).scrollTop() < i.scrollSensitivity) {
                        s = t(document).scrollTop(t(document).scrollTop() - i.scrollSpeed)
                    } else if (t(window).height() - (e.pageY - t(document).scrollTop()) < i.scrollSensitivity) {
                        s = t(document).scrollTop(t(document).scrollTop() + i.scrollSpeed)
                    };
                    if (e.pageX - t(document).scrollLeft() < i.scrollSensitivity) {
                        s = t(document).scrollLeft(t(document).scrollLeft() - i.scrollSpeed)
                    } else if (t(window).width() - (e.pageX - t(document).scrollLeft()) < i.scrollSensitivity) {
                        s = t(document).scrollLeft(t(document).scrollLeft() + i.scrollSpeed)
                    }
                };
                if (s !== !1 && t.ui.ddmanager && !i.dropBehaviour) {
                    t.ui.ddmanager.prepareOffsets(this, e)
                }
            };
            this.positionAbs = this._convertPositionTo("absolute");
            if (!this.options.axis || this.options.axis !== "y") {
                this.helper[0].style.left = this.position.left + "px"
            };
            if (!this.options.axis || this.options.axis !== "x") {
                this.helper[0].style.top = this.position.top + "px"
            };
            for (a = this.items.length - 1; a >= 0; a--) {
                n = this.items[a];
                o = n.item[0];
                r = this._intersectsWithPointer(n);
                if (!r) {
                    continue
                };
                if (n.instance !== this.currentContainer) {
                    continue
                };
                if (o !== this.currentItem[0] && this.placeholder[r === 1 ? "next" : "prev"]()[0] !== o && !t.contains(this.placeholder[0], o) && (this.options.type === "semi-dynamic" ? !t.contains(this.element[0], o) : !0)) {
                    this.direction = r === 1 ? "down" : "up";
                    if (this.options.tolerance === "pointer" || this._intersectsWithSides(n)) {
                        this._rearrange(e, n)
                    } else {
                        break
                    };
                    this._trigger("change", e, this._uiHash());
                    break
                }
            };
            this._contactContainers(e);
            if (t.ui.ddmanager) {
                t.ui.ddmanager.drag(this, e)
            };
            this._trigger("sort", e, this._uiHash());
            this.lastPositionAbs = this.positionAbs;
            return !1
        },
        _mouseStop: function(e, i) {
            if (!e) {
                return
            };
            if (t.ui.ddmanager && !this.options.dropBehaviour) {
                t.ui.ddmanager.drop(this, e)
            };
            if (this.options.revert) {
                var a = this,
                    o = this.placeholder.offset(),
                    s = this.options.axis,
                    n = {};
                if (!s || s === "x") {
                    n.left = o.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollLeft)
                };
                if (!s || s === "y") {
                    n.top = o.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollTop)
                };
                this.reverting = !0;
                t(this.helper).animate(n, parseInt(this.options.revert, 10) || 500, function() {
                    a._clear(e)
                })
            } else {
                this._clear(e, i)
            };
            return !1
        },
        cancel: function() {
            if (this.dragging) {
                this._mouseUp({
                    target: null
                });
                if (this.options.helper === "original") {
                    this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
                } else {
                    this.currentItem.show()
                };
                for (var e = this.containers.length - 1; e >= 0; e--) {
                    this.containers[e]._trigger("deactivate", null, this._uiHash(this));
                    if (this.containers[e].containerCache.over) {
                        this.containers[e]._trigger("out", null, this._uiHash(this));
                        this.containers[e].containerCache.over = 0
                    }
                }
            };
            if (this.placeholder) {
                if (this.placeholder[0].parentNode) {
                    this.placeholder[0].parentNode.removeChild(this.placeholder[0])
                };
                if (this.options.helper !== "original" && this.helper && this.helper[0].parentNode) {
                    this.helper.remove()
                };
                t.extend(this, {
                    helper: null,
                    dragging: !1,
                    reverting: !1,
                    _noFinalSort: null
                });
                if (this.domPosition.prev) {
                    t(this.domPosition.prev).after(this.currentItem)
                } else {
                    t(this.domPosition.parent).prepend(this.currentItem)
                }
            };
            return this
        },
        serialize: function(e) {
            var s = this._getItemsAsjQuery(e && e.connected),
                i = [];
            e = e || {};
            t(s).each(function() {
                var s = (t(e.item || this).attr(e.attribute || "id") || "").match(e.expression || (/(.+)[\-=_](.+)/));
                if (s) {
                    i.push((e.key || s[1] + "[]") + "=" + (e.key && e.expression ? s[1] : s[2]))
                }
            });
            if (!i.length && e.key) {
                i.push(e.key + "=")
            };
            return i.join("&")
        },
        toArray: function(e) {
            var s = this._getItemsAsjQuery(e && e.connected),
                i = [];
            e = e || {};
            s.each(function() {
                i.push(t(e.item || this).attr(e.attribute || "id") || "")
            });
            return i
        },
        _intersectsWith: function(t) {
            var e = this.positionAbs.left,
                h = e + this.helperProportions.width,
                i = this.positionAbs.top,
                u = i + this.helperProportions.height,
                s = t.left,
                o = s + t.width,
                n = t.top,
                a = n + t.height,
                r = this.offset.click.top,
                l = this.offset.click.left,
                c = (this.options.axis === "x") || ((i + r) > n && (i + r) < a),
                f = (this.options.axis === "y") || ((e + l) > s && (e + l) < o),
                d = c && f;
            if (this.options.tolerance === "pointer" || this.options.forcePointerForContainers || (this.options.tolerance !== "pointer" && this.helperProportions[this.floating ? "width" : "height"] > t[this.floating ? "width" : "height"])) {
                return d
            } else {
                return (s < e + (this.helperProportions.width / 2) && h - (this.helperProportions.width / 2) < o && n < i + (this.helperProportions.height / 2) && u - (this.helperProportions.height / 2) < a)
            }
        },
        _intersectsWithPointer: function(t) {
            var n = (this.options.axis === "x") || i(this.positionAbs.top + this.offset.click.top, t.top, t.height),
                o = (this.options.axis === "y") || i(this.positionAbs.left + this.offset.click.left, t.left, t.width),
                a = n && o,
                e = this._getDragVerticalDirection(),
                s = this._getDragHorizontalDirection();
            if (!a) {
                return !1
            };
            return this.floating ? (((s && s === "right") || e === "down") ? 2 : 1) : (e && (e === "down" ? 2 : 1))
        },
        _intersectsWithSides: function(t) {
            var n = i(this.positionAbs.top + this.offset.click.top, t.top + (t.height / 2), t.height),
                o = i(this.positionAbs.left + this.offset.click.left, t.left + (t.width / 2), t.width),
                e = this._getDragVerticalDirection(),
                s = this._getDragHorizontalDirection();
            if (this.floating && s) {
                return ((s === "right" && o) || (s === "left" && !o))
            } else {
                return e && ((e === "down" && n) || (e === "up" && !n))
            }
        },
        _getDragVerticalDirection: function() {
            var t = this.positionAbs.top - this.lastPositionAbs.top;
            return t !== 0 && (t > 0 ? "down" : "up")
        },
        _getDragHorizontalDirection: function() {
            var t = this.positionAbs.left - this.lastPositionAbs.left;
            return t !== 0 && (t > 0 ? "right" : "left")
        },
        refresh: function(t) {
            this._refreshItems(t);
            this.refreshPositions();
            return this
        },
        _connectWith: function() {
            var t = this.options;
            return t.connectWith.constructor === String ? [t.connectWith] : t.connectWith
        },
        _getItemsAsjQuery: function(e) {
            var s, n, a, i, l = [],
                o = [],
                r = this._connectWith();
            if (r && e) {
                for (s = r.length - 1; s >= 0; s--) {
                    a = t(r[s]);
                    for (n = a.length - 1; n >= 0; n--) {
                        i = t.data(a[n], this.widgetFullName);
                        if (i && i !== this && !i.options.disabled) {
                            o.push([t.isFunction(i.options.items) ? i.options.items.call(i.element) : t(i.options.items, i.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), i])
                        }
                    }
                }
            };
            o.push([t.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
                options: this.options,
                item: this.currentItem
            }) : t(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]);
            for (s = o.length - 1; s >= 0; s--) {
                o[s][0].each(function() {
                    l.push(this)
                })
            };
            return t(l)
        },
        _removeCurrentsFromItems: function() {
            var e = this.currentItem.find(":data(" + this.widgetName + "-item)");
            this.items = t.grep(this.items, function(t) {
                for (var i = 0; i < e.length; i++) {
                    if (e[i] === t.item[0]) {
                        return !1
                    }
                };
                return !0
            })
        },
        _refreshItems: function(e) {
            this.items = [];
            this.containers = [this];
            var s, n, a, i, r, l, h, c, f = this.items,
                o = [
                    [t.isFunction(this.options.items) ? this.options.items.call(this.element[0], e, {
                        item: this.currentItem
                    }) : t(this.options.items, this.element), this]
                ],
                u = this._connectWith();
            if (u && this.ready) {
                for (s = u.length - 1; s >= 0; s--) {
                    a = t(u[s]);
                    for (n = a.length - 1; n >= 0; n--) {
                        i = t.data(a[n], this.widgetFullName);
                        if (i && i !== this && !i.options.disabled) {
                            o.push([t.isFunction(i.options.items) ? i.options.items.call(i.element[0], e, {
                                item: this.currentItem
                            }) : t(i.options.items, i.element), i]);
                            this.containers.push(i)
                        }
                    }
                }
            };
            for (s = o.length - 1; s >= 0; s--) {
                r = o[s][1];
                l = o[s][0];
                for (n = 0, c = l.length; n < c; n++) {
                    h = t(l[n]);
                    h.data(this.widgetName + "-item", r);
                    f.push({
                        item: h,
                        instance: r,
                        width: 0,
                        height: 0,
                        left: 0,
                        top: 0
                    })
                }
            }
        },
        refreshPositions: function(e) {
            if (this.offsetParent && this.helper) {
                this.offset.parent = this._getParentOffset()
            };
            var i, s, o, n;
            for (i = this.items.length - 1; i >= 0; i--) {
                s = this.items[i];
                if (s.instance !== this.currentContainer && this.currentContainer && s.item[0] !== this.currentItem[0]) {
                    continue
                };
                o = this.options.toleranceElement ? t(this.options.toleranceElement, s.item) : s.item;
                if (!e) {
                    s.width = o.outerWidth();
                    s.height = o.outerHeight()
                };
                n = o.offset();
                s.left = n.left;
                s.top = n.top
            };
            if (this.options.custom && this.options.custom.refreshContainers) {
                this.options.custom.refreshContainers.call(this)
            } else {
                for (i = this.containers.length - 1; i >= 0; i--) {
                    n = this.containers[i].element.offset();
                    this.containers[i].containerCache.left = n.left;
                    this.containers[i].containerCache.top = n.top;
                    this.containers[i].containerCache.width = this.containers[i].element.outerWidth();
                    this.containers[i].containerCache.height = this.containers[i].element.outerHeight()
                }
            };
            return this
        },
        _createPlaceholder: function(e) {
            e = e || this;
            var s, i = e.options;
            if (!i.placeholder || i.placeholder.constructor === String) {
                s = i.placeholder;
                i.placeholder = {
                    element: function() {
                        var n = e.currentItem[0].nodeName.toLowerCase(),
                            i = t("<" + n + ">", e.document[0]).addClass(s || e.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper");
                        if (n === "tr") {
                            e.currentItem.children().each(function() {
                                t("<td>&#160;</td>", e.document[0]).attr("colspan", t(this).attr("colspan") || 1).appendTo(i)
                            })
                        } else if (n === "img") {
                            i.attr("src", e.currentItem.attr("src"))
                        };
                        if (!s) {
                            i.css("visibility", "hidden")
                        };
                        return i
                    },
                    update: function(t, n) {
                        if (s && !i.forcePlaceholderSize) {
                            return
                        };
                        if (!n.height()) {
                            n.height(e.currentItem.innerHeight() - parseInt(e.currentItem.css("paddingTop") || 0, 10) - parseInt(e.currentItem.css("paddingBottom") || 0, 10))
                        };
                        if (!n.width()) {
                            n.width(e.currentItem.innerWidth() - parseInt(e.currentItem.css("paddingLeft") || 0, 10) - parseInt(e.currentItem.css("paddingRight") || 0, 10))
                        }
                    }
                }
            };
            e.placeholder = t(i.placeholder.element.call(e.element, e.currentItem));
            e.currentItem.after(e.placeholder);
            i.placeholder.update(e, e.placeholder)
        },
        _contactContainers: function(e) {
            var n, o, d, l, c, p, h, r, g, f, u = null,
                a = null;
            for (n = this.containers.length - 1; n >= 0; n--) {
                if (t.contains(this.currentItem[0], this.containers[n].element[0])) {
                    continue
                };
                if (this._intersectsWith(this.containers[n].containerCache)) {
                    if (u && t.contains(this.containers[n].element[0], u.element[0])) {
                        continue
                    };
                    u = this.containers[n];
                    a = n
                } else {
                    if (this.containers[n].containerCache.over) {
                        this.containers[n]._trigger("out", e, this._uiHash(this));
                        this.containers[n].containerCache.over = 0
                    }
                }
            };
            if (!u) {
                return
            };
            if (this.containers.length === 1) {
                if (!this.containers[a].containerCache.over) {
                    this.containers[a]._trigger("over", e, this._uiHash(this));
                    this.containers[a].containerCache.over = 1
                }
            } else {
                d = 10000;
                l = null;
                f = u.floating || s(this.currentItem);
                c = f ? "left" : "top";
                p = f ? "width" : "height";
                h = this.positionAbs[c] + this.offset.click[c];
                for (o = this.items.length - 1; o >= 0; o--) {
                    if (!t.contains(this.containers[a].element[0], this.items[o].item[0])) {
                        continue
                    };
                    if (this.items[o].item[0] === this.currentItem[0]) {
                        continue
                    };
                    if (f && !i(this.positionAbs.top + this.offset.click.top, this.items[o].top, this.items[o].height)) {
                        continue
                    };
                    r = this.items[o].item.offset()[c];
                    g = !1;
                    if (Math.abs(r - h) > Math.abs(r + this.items[o][p] - h)) {
                        g = !0;
                        r += this.items[o][p]
                    };
                    if (Math.abs(r - h) < d) {
                        d = Math.abs(r - h);
                        l = this.items[o];
                        this.direction = g ? "up" : "down"
                    }
                };
                if (!l && !this.options.dropOnEmpty) {
                    return
                };
                if (this.currentContainer === this.containers[a]) {
                    return
                };
                l ? this._rearrange(e, l, null, !0) : this._rearrange(e, null, this.containers[a].element, !0);
                this._trigger("change", e, this._uiHash());
                this.containers[a]._trigger("change", e, this._uiHash(this));
                this.currentContainer = this.containers[a];
                this.options.placeholder.update(this.currentContainer, this.placeholder);
                this.containers[a]._trigger("over", e, this._uiHash(this));
                this.containers[a].containerCache.over = 1
            }
        },
        _createHelper: function(e) {
            var s = this.options,
                i = t.isFunction(s.helper) ? t(s.helper.apply(this.element[0], [e, this.currentItem])) : (s.helper === "clone" ? this.currentItem.clone() : this.currentItem);
            if (!i.parents("body").length) {
                t(s.appendTo !== "parent" ? s.appendTo : this.currentItem[0].parentNode)[0].appendChild(i[0])
            };
            if (i[0] === this.currentItem[0]) {
                this._storedCSS = {
                    width: this.currentItem[0].style.width,
                    height: this.currentItem[0].style.height,
                    position: this.currentItem.css("position"),
                    top: this.currentItem.css("top"),
                    left: this.currentItem.css("left")
                }
            };
            if (!i[0].style.width || s.forceHelperSize) {
                i.width(this.currentItem.width())
            };
            if (!i[0].style.height || s.forceHelperSize) {
                i.height(this.currentItem.height())
            };
            return i
        },
        _adjustOffsetFromHelper: function(e) {
            if (typeof e === "string") {
                e = e.split(" ")
            };
            if (t.isArray(e)) {
                e = {
                    left: +e[0],
                    top: +e[1] || 0
                }
            };
            if ("left" in e) {
                this.offset.click.left = e.left + this.margins.left
            };
            if ("right" in e) {
                this.offset.click.left = this.helperProportions.width - e.right + this.margins.left
            };
            if ("top" in e) {
                this.offset.click.top = e.top + this.margins.top
            };
            if ("bottom" in e) {
                this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top
            }
        },
        _getParentOffset: function() {
            this.offsetParent = this.helper.offsetParent();
            var e = this.offsetParent.offset();
            if (this.cssPosition === "absolute" && this.scrollParent[0] !== document && t.contains(this.scrollParent[0], this.offsetParent[0])) {
                e.left += this.scrollParent.scrollLeft();
                e.top += this.scrollParent.scrollTop()
            };
            if (this.offsetParent[0] === document.body || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === "html" && t.ui.ie)) {
                e = {
                    top: 0,
                    left: 0
                }
            };
            return {
                top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if (this.cssPosition === "relative") {
                var t = this.currentItem.position();
                return {
                    top: t.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: t.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            } else {
                return {
                    top: 0,
                    left: 0
                }
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: (parseInt(this.currentItem.css("marginLeft"), 10) || 0),
                top: (parseInt(this.currentItem.css("marginTop"), 10) || 0)
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var e, s, n, i = this.options;
            if (i.containment === "parent") {
                i.containment = this.helper[0].parentNode
            };
            if (i.containment === "document" || i.containment === "window") {
                this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, t(i.containment === "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (t(i.containment === "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]
            };
            if (!(/^(document|window|parent)$/).test(i.containment)) {
                e = t(i.containment)[0];
                s = t(i.containment).offset();
                n = (t(e).css("overflow") !== "hidden");
                this.containment = [s.left + (parseInt(t(e).css("borderLeftWidth"), 10) || 0) + (parseInt(t(e).css("paddingLeft"), 10) || 0) - this.margins.left, s.top + (parseInt(t(e).css("borderTopWidth"), 10) || 0) + (parseInt(t(e).css("paddingTop"), 10) || 0) - this.margins.top, s.left + (n ? Math.max(e.scrollWidth, e.offsetWidth) : e.offsetWidth) - (parseInt(t(e).css("borderLeftWidth"), 10) || 0) - (parseInt(t(e).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, s.top + (n ? Math.max(e.scrollHeight, e.offsetHeight) : e.offsetHeight) - (parseInt(t(e).css("borderTopWidth"), 10) || 0) - (parseInt(t(e).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]
            }
        },
        _convertPositionTo: function(e, i) {
            if (!i) {
                i = this.position
            };
            var s = e === "absolute" ? 1 : -1,
                n = this.cssPosition === "absolute" && !(this.scrollParent[0] !== document && t.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                o = (/(html|body)/i).test(n[0].tagName);
            return {
                top: (i.top + this.offset.relative.top * s + this.offset.parent.top * s - ((this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : (o ? 0 : n.scrollTop())) * s)),
                left: (i.left + this.offset.relative.left * s + this.offset.parent.left * s - ((this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : o ? 0 : n.scrollLeft()) * s))
            }
        },
        _generatePosition: function(e) {
            var s, n, i = this.options,
                o = e.pageX,
                a = e.pageY,
                r = this.cssPosition === "absolute" && !(this.scrollParent[0] !== document && t.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                l = (/(html|body)/i).test(r[0].tagName);
            if (this.cssPosition === "relative" && !(this.scrollParent[0] !== document && this.scrollParent[0] !== this.offsetParent[0])) {
                this.offset.relative = this._getRelativeOffset()
            };
            if (this.originalPosition) {
                if (this.containment) {
                    if (e.pageX - this.offset.click.left < this.containment[0]) {
                        o = this.containment[0] + this.offset.click.left
                    };
                    if (e.pageY - this.offset.click.top < this.containment[1]) {
                        a = this.containment[1] + this.offset.click.top
                    };
                    if (e.pageX - this.offset.click.left > this.containment[2]) {
                        o = this.containment[2] + this.offset.click.left
                    };
                    if (e.pageY - this.offset.click.top > this.containment[3]) {
                        a = this.containment[3] + this.offset.click.top
                    }
                };
                if (i.grid) {
                    s = this.originalPageY + Math.round((a - this.originalPageY) / i.grid[1]) * i.grid[1];
                    a = this.containment ? ((s - this.offset.click.top >= this.containment[1] && s - this.offset.click.top <= this.containment[3]) ? s : ((s - this.offset.click.top >= this.containment[1]) ? s - i.grid[1] : s + i.grid[1])) : s;
                    n = this.originalPageX + Math.round((o - this.originalPageX) / i.grid[0]) * i.grid[0];
                    o = this.containment ? ((n - this.offset.click.left >= this.containment[0] && n - this.offset.click.left <= this.containment[2]) ? n : ((n - this.offset.click.left >= this.containment[0]) ? n - i.grid[0] : n + i.grid[0])) : n
                }
            };
            return {
                top: (a - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ((this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : (l ? 0 : r.scrollTop())))),
                left: (o - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ((this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : l ? 0 : r.scrollLeft())))
            }
        },
        _rearrange: function(t, e, i, s) {
            i ? i[0].appendChild(this.placeholder[0]) : e.item[0].parentNode.insertBefore(this.placeholder[0], (this.direction === "down" ? e.item[0] : e.item[0].nextSibling));
            this.counter = this.counter ? ++this.counter : 1;
            var n = this.counter;
            this._delay(function() {
                if (n === this.counter) {
                    this.refreshPositions(!s)
                }
            })
        },
        _clear: function(t, e) {
            this.reverting = !1;
            var i, s = [];
            if (!this._noFinalSort && this.currentItem.parent().length) {
                this.placeholder.before(this.currentItem)
            };
            this._noFinalSort = null;
            if (this.helper[0] === this.currentItem[0]) {
                for (i in this._storedCSS) {
                    if (this._storedCSS[i] === "auto" || this._storedCSS[i] === "static") {
                        this._storedCSS[i] = ""
                    }
                };
                this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
            } else {
                this.currentItem.show()
            };
            if (this.fromOutside && !e) {
                s.push(function(t) {
                    this._trigger("receive", t, this._uiHash(this.fromOutside))
                })
            };
            if ((this.fromOutside || this.domPosition.prev !== this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent !== this.currentItem.parent()[0]) && !e) {
                s.push(function(t) {
                    this._trigger("update", t, this._uiHash())
                })
            };
            if (this !== this.currentContainer) {
                if (!e) {
                    s.push(function(t) {
                        this._trigger("remove", t, this._uiHash())
                    });
                    s.push((function(t) {
                        return function(e) {
                            t._trigger("receive", e, this._uiHash(this))
                        }
                    }).call(this, this.currentContainer));
                    s.push((function(t) {
                        return function(e) {
                            t._trigger("update", e, this._uiHash(this))
                        }
                    }).call(this, this.currentContainer))
                }
            };
            for (i = this.containers.length - 1; i >= 0; i--) {
                if (!e) {
                    s.push((function(t) {
                        return function(e) {
                            t._trigger("deactivate", e, this._uiHash(this))
                        }
                    }).call(this, this.containers[i]))
                };
                if (this.containers[i].containerCache.over) {
                    s.push((function(t) {
                        return function(e) {
                            t._trigger("out", e, this._uiHash(this))
                        }
                    }).call(this, this.containers[i]));
                    this.containers[i].containerCache.over = 0
                }
            };
            if (this.storedCursor) {
                this.document.find("body").css("cursor", this.storedCursor);
                this.storedStylesheet.remove()
            };
            if (this._storedOpacity) {
                this.helper.css("opacity", this._storedOpacity)
            };
            if (this._storedZIndex) {
                this.helper.css("zIndex", this._storedZIndex === "auto" ? "" : this._storedZIndex)
            };
            this.dragging = !1;
            if (this.cancelHelperRemoval) {
                if (!e) {
                    this._trigger("beforeStop", t, this._uiHash());
                    for (i = 0; i < s.length; i++) {
                        s[i].call(this, t)
                    };
                    this._trigger("stop", t, this._uiHash())
                };
                this.fromOutside = !1;
                return !1
            };
            if (!e) {
                this._trigger("beforeStop", t, this._uiHash())
            };
            this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
            if (this.helper[0] !== this.currentItem[0]) {
                this.helper.remove()
            };
            this.helper = null;
            if (!e) {
                for (i = 0; i < s.length; i++) {
                    s[i].call(this, t)
                };
                this._trigger("stop", t, this._uiHash())
            };
            this.fromOutside = !1;
            return !0
        },
        _trigger: function() {
            if (t.Widget.prototype._trigger.apply(this, arguments) === !1) {
                this.cancel()
            }
        },
        _uiHash: function(e) {
            var i = e || this;
            return {
                helper: i.helper,
                placeholder: i.placeholder || t([]),
                position: i.position,
                originalPosition: i.originalPosition,
                offset: i.positionAbs,
                item: i.currentItem,
                sender: e ? e.element : null
            }
        }
    })
})(jQuery);
(function(t, e) {
    var i = "ui-effects-";
    t.effects = {
        effect: {}
    };
    /*!
     * jQuery Color Animations v2.1.2
     * https://github.com/jquery/jquery-color
     *
     * Copyright 2013 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     *
     * Date: Wed Jan 16 08:47:09 2013 -0600
     */
    (function(t, e) {
        var f = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",
            d = /^([\-+])=\s*(\d+\.?\d*)/,
            p = [{
                re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                parse: function(t) {
                    return [t[1], t[2], t[3], t[4]]
                }
            }, {
                re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                parse: function(t) {
                    return [t[1] * 2.55, t[2] * 2.55, t[3] * 2.55, t[4]]
                }
            }, {
                re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
                parse: function(t) {
                    return [parseInt(t[1], 16), parseInt(t[2], 16), parseInt(t[3], 16)]
                }
            }, {
                re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
                parse: function(t) {
                    return [parseInt(t[1] + t[1], 16), parseInt(t[2] + t[2], 16), parseInt(t[3] + t[3], 16)]
                }
            }, {
                re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                space: "hsla",
                parse: function(t) {
                    return [t[1], t[2] / 100, t[3] / 100, t[4]]
                }
            }],
            i = t.Color = function(e, i, s, n) {
                return new t.Color.fn.parse(e, i, s, n)
            },
            n = {
                rgba: {
                    props: {
                        red: {
                            idx: 0,
                            type: "byte"
                        },
                        green: {
                            idx: 1,
                            type: "byte"
                        },
                        blue: {
                            idx: 2,
                            type: "byte"
                        }
                    }
                },
                hsla: {
                    props: {
                        hue: {
                            idx: 0,
                            type: "degrees"
                        },
                        saturation: {
                            idx: 1,
                            type: "percent"
                        },
                        lightness: {
                            idx: 2,
                            type: "percent"
                        }
                    }
                }
            },
            l = {
                "byte": {
                    floor: !0,
                    max: 255
                },
                "percent": {
                    max: 1
                },
                "degrees": {
                    mod: 360,
                    floor: !0
                }
            },
            h = i.support = {},
            u = t("<p>")[0],
            o, s = t.each;
        u.style.cssText = "background-color:rgba(1,1,1,.5)";
        h.rgba = u.style.backgroundColor.indexOf("rgba") > -1;
        s(n, function(t, e) {
            e.cache = "_" + t;
            e.props.alpha = {
                idx: 3,
                type: "percent",
                def: 1
            }
        });

        function a(t, e, i) {
            var s = l[e.type] || {};
            if (t == null) {
                return (i || !e.def) ? null : e.def
            };
            t = s.floor ? ~~t : parseFloat(t);
            if (isNaN(t)) {
                return e.def
            };
            if (s.mod) {
                return (t + s.mod) % s.mod
            };
            return 0 > t ? 0 : s.max < t ? s.max : t
        };

        function c(e) {
            var a = i(),
                r = a._rgba = [];
            e = e.toLowerCase();
            s(p, function(t, i) {
                var s, l = i.re.exec(e),
                    h = l && i.parse(l),
                    o = i.space || "rgba";
                if (h) {
                    s = a[o](h);
                    a[n[o].cache] = s[n[o].cache];
                    r = a._rgba = s._rgba;
                    return !1
                }
            });
            if (r.length) {
                if (r.join() === "0,0,0,0") {
                    t.extend(r, o.transparent)
                };
                return a
            };
            return o[e]
        };
        i.fn = t.extend(i.prototype, {
            parse: function(r, l, h, u) {
                if (r === e) {
                    this._rgba = [null, null, null, null];
                    return this
                };
                if (r.jquery || r.nodeType) {
                    r = t(r).css(l);
                    l = e
                };
                var f = this,
                    d = t.type(r),
                    p = this._rgba = [];
                if (l !== e) {
                    r = [r, l, h, u];
                    d = "array"
                };
                if (d === "string") {
                    return this.parse(c(r) || o._default)
                };
                if (d === "array") {
                    s(n.rgba.props, function(t, e) {
                        p[e.idx] = a(r[e.idx], e)
                    });
                    return this
                };
                if (d === "object") {
                    if (r instanceof i) {
                        s(n, function(t, e) {
                            if (r[e.cache]) {
                                f[e.cache] = r[e.cache].slice()
                            }
                        })
                    } else {
                        s(n, function(e, i) {
                            var n = i.cache;
                            s(i.props, function(t, e) {
                                if (!f[n] && i.to) {
                                    if (t === "alpha" || r[t] == null) {
                                        return
                                    };
                                    f[n] = i.to(f._rgba)
                                };
                                f[n][e.idx] = a(r[t], e, !0)
                            });
                            if (f[n] && t.inArray(null, f[n].slice(0, 3)) < 0) {
                                f[n][3] = 1;
                                if (i.from) {
                                    f._rgba = i.from(f[n])
                                }
                            }
                        })
                    };
                    return this
                }
            },
            is: function(t) {
                var a = i(t),
                    e = !0,
                    o = this;
                s(n, function(t, i) {
                    var r, n = a[i.cache];
                    if (n) {
                        r = o[i.cache] || i.to && i.to(o._rgba) || [];
                        s(i.props, function(t, i) {
                            if (n[i.idx] != null) {
                                e = (n[i.idx] === r[i.idx]);
                                return e
                            }
                        })
                    };
                    return e
                });
                return e
            },
            _space: function() {
                var t = [],
                    e = this;
                s(n, function(i, s) {
                    if (e[s.cache]) {
                        t.push(i)
                    }
                });
                return t.pop()
            },
            transition: function(t, e) {
                var o = i(t),
                    u = o._space(),
                    r = n[u],
                    c = this.alpha() === 0 ? i("transparent") : this,
                    f = c[r.cache] || r.to(c._rgba),
                    h = f.slice();
                o = o[r.cache];
                s(r.props, function(t, i) {
                    var u = i.idx,
                        s = f[u],
                        n = o[u],
                        r = l[i.type] || {};
                    if (n === null) {
                        return
                    };
                    if (s === null) {
                        h[u] = n
                    } else {
                        if (r.mod) {
                            if (n - s > r.mod / 2) {
                                s += r.mod
                            } else if (s - n > r.mod / 2) {
                                s -= r.mod
                            }
                        };
                        h[u] = a((n - s) * e + s, i)
                    }
                });
                return this[u](h)
            },
            blend: function(e) {
                if (this._rgba[3] === 1) {
                    return this
                };
                var s = this._rgba.slice(),
                    n = s.pop(),
                    o = i(e)._rgba;
                return i(t.map(s, function(t, e) {
                    return (1 - n) * o[e] + n * t
                }))
            },
            toRgbaString: function() {
                var i = "rgba(",
                    e = t.map(this._rgba, function(t, e) {
                        return t == null ? (e > 2 ? 1 : 0) : t
                    });
                if (e[3] === 1) {
                    e.pop();
                    i = "rgb("
                };
                return i + e.join() + ")"
            },
            toHslaString: function() {
                var i = "hsla(",
                    e = t.map(this.hsla(), function(t, e) {
                        if (t == null) {
                            t = e > 2 ? 1 : 0
                        };
                        if (e && e < 3) {
                            t = Math.round(t * 100) + "%"
                        };
                        return t
                    });
                if (e[3] === 1) {
                    e.pop();
                    i = "hsl("
                };
                return i + e.join() + ")"
            },
            toHexString: function(e) {
                var i = this._rgba.slice(),
                    s = i.pop();
                if (e) {
                    i.push(~~(s * 255))
                };
                return "#" + t.map(i, function(t) {
                    t = (t || 0).toString(16);
                    return t.length === 1 ? "0" + t : t
                }).join("")
            },
            toString: function() {
                return this._rgba[3] === 0 ? "transparent" : this.toRgbaString()
            }
        });
        i.fn.parse.prototype = i.fn;

        function r(t, e, i) {
            i = (i + 1) % 1;
            if (i * 6 < 1) {
                return t + (e - t) * i * 6
            };
            if (i * 2 < 1) {
                return e
            };
            if (i * 3 < 2) {
                return t + (e - t) * ((2 / 3) - i) * 6
            };
            return t
        };
        n.hsla.to = function(t) {
            if (t[0] == null || t[1] == null || t[2] == null) {
                return [null, null, null, t[3]]
            };
            var i = t[0] / 255,
                s = t[1] / 255,
                a = t[2] / 255,
                u = t[3],
                n = Math.max(i, s, a),
                l = Math.min(i, s, a),
                e = n - l,
                h = n + l,
                c = h * 0.5,
                o, r;
            if (l === n) {
                o = 0
            } else if (i === n) {
                o = (60 * (s - a) / e) + 360
            } else if (s === n) {
                o = (60 * (a - i) / e) + 120
            } else {
                o = (60 * (i - s) / e) + 240
            };
            if (e === 0) {
                r = 0
            } else if (c <= 0.5) {
                r = e / h
            } else {
                r = e / (2 - h)
            };
            return [Math.round(o) % 360, r, c, u == null ? 1 : u]
        };
        n.hsla.from = function(t) {
            if (t[0] == null || t[1] == null || t[2] == null) {
                return [null, null, null, t[3]]
            };
            var s = t[0] / 360,
                n = t[1],
                e = t[2],
                a = t[3],
                i = e <= 0.5 ? e * (1 + n) : e + n - e * n,
                o = 2 * e - i;
            return [Math.round(r(o, i, s + (1 / 3)) * 255), Math.round(r(o, i, s) * 255), Math.round(r(o, i, s - (1 / 3)) * 255), a]
        };
        s(n, function(n, o) {
            var l = o.props,
                r = o.cache,
                h = o.to,
                u = o.from;
            i.fn[n] = function(n) {
                if (h && !this[r]) {
                    this[r] = h(this._rgba)
                };
                if (n === e) {
                    return this[r].slice()
                };
                var c, f = t.type(n),
                    d = (f === "array" || f === "object") ? n : arguments,
                    o = this[r].slice();
                s(l, function(t, e) {
                    var i = d[f === "object" ? t : e.idx];
                    if (i == null) {
                        i = o[e.idx]
                    };
                    o[e.idx] = a(i, e)
                });
                if (u) {
                    c = i(u(o));
                    c[r] = o;
                    return c
                } else {
                    return i(o)
                }
            };
            s(l, function(e, s) {
                if (i.fn[e]) {
                    return
                };
                i.fn[e] = function(i) {
                    var o = t.type(i),
                        h = (e === "alpha" ? (this._hsla ? "hsla" : "rgba") : n),
                        r = this[h](),
                        l = r[s.idx],
                        a;
                    if (o === "undefined") {
                        return l
                    };
                    if (o === "function") {
                        i = i.call(this, l);
                        o = t.type(i)
                    };
                    if (i == null && s.empty) {
                        return this
                    };
                    if (o === "string") {
                        a = d.exec(i);
                        if (a) {
                            i = l + parseFloat(a[2]) * (a[1] === "+" ? 1 : -1)
                        }
                    };
                    r[s.idx] = i;
                    return this[h](r)
                }
            })
        });
        i.hook = function(e) {
            var n = e.split(" ");
            s(n, function(e, s) {
                t.cssHooks[s] = {
                    set: function(e, n) {
                        var l, a, r = "";
                        if (n !== "transparent" && (t.type(n) !== "string" || (l = c(n)))) {
                            n = i(l || n);
                            if (!h.rgba && n._rgba[3] !== 1) {
                                a = s === "backgroundColor" ? e.parentNode : e;
                                while ((r === "" || r === "transparent") && a && a.style) {
                                    try {
                                        r = t.css(a, "backgroundColor");
                                        a = a.parentNode
                                    } catch (o) {}
                                };
                                n = n.blend(r && r !== "transparent" ? r : "_default")
                            };
                            n = n.toRgbaString()
                        };
                        try {
                            e.style[s] = n
                        } catch (o) {}
                    }
                };
                t.fx.step[s] = function(e) {
                    if (!e.colorInit) {
                        e.start = i(e.elem, s);
                        e.end = i(e.end);
                        e.colorInit = !0
                    };
                    t.cssHooks[s].set(e.elem, e.start.transition(e.end, e.pos))
                }
            })
        };
        i.hook(f);
        t.cssHooks.borderColor = {
            expand: function(t) {
                var e = {};
                s(["Top", "Right", "Bottom", "Left"], function(i, s) {
                    e["border" + s + "Color"] = t
                });
                return e
            }
        };
        o = t.Color.names = {
            aqua: "#00ffff",
            black: "#000000",
            blue: "#0000ff",
            fuchsia: "#ff00ff",
            gray: "#808080",
            green: "#008000",
            lime: "#00ff00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            purple: "#800080",
            red: "#ff0000",
            silver: "#c0c0c0",
            teal: "#008080",
            white: "#ffffff",
            yellow: "#ffff00",
            transparent: [null, null, null, 0],
            _default: "#ffffff"
        }
    })(jQuery);
    (function() {
        var s = ["add", "remove", "toggle"],
            n = {
                border: 1,
                borderBottom: 1,
                borderColor: 1,
                borderLeft: 1,
                borderRight: 1,
                borderTop: 1,
                borderWidth: 1,
                margin: 1,
                padding: 1
            };
        t.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function(e, i) {
            t.fx.step[i] = function(t) {
                if (t.end !== "none" && !t.setAttr || t.pos === 1 && !t.setAttr) {
                    jQuery.style(t.elem, i, t.end);
                    t.setAttr = !0
                }
            }
        });

        function i(e) {
            var s, n, i = e.ownerDocument.defaultView ? e.ownerDocument.defaultView.getComputedStyle(e, null) : e.currentStyle,
                o = {};
            if (i && i.length && i[0] && i[i[0]]) {
                n = i.length;
                while (n--) {
                    s = i[n];
                    if (typeof i[s] === "string") {
                        o[t.camelCase(s)] = i[s]
                    }
                }
            } else {
                for (s in i) {
                    if (typeof i[s] === "string") {
                        o[s] = i[s]
                    }
                }
            };
            return o
        };

        function o(e, i) {
            var a = {},
                s, o;
            for (s in i) {
                o = i[s];
                if (e[s] !== o) {
                    if (!n[s]) {
                        if (t.fx.step[s] || !isNaN(parseFloat(o))) {
                            a[s] = o
                        }
                    }
                }
            };
            return a
        };
        if (!t.fn.addBack) {
            t.fn.addBack = function(t) {
                return this.add(t == null ? this.prevObject : this.prevObject.filter(t))
            }
        };
        t.effects.animateClass = function(e, n, a, r) {
            var l = t.speed(n, a, r);
            return this.queue(function() {
                var a = t(this),
                    h = a.attr("class") || "",
                    r, n = l.children ? a.find("*").addBack() : a;
                n = n.map(function() {
                    var e = t(this);
                    return {
                        el: e,
                        start: i(this)
                    }
                });
                r = function() {
                    t.each(s, function(t, i) {
                        if (e[i]) {
                            a[i + "Class"](e[i])
                        }
                    })
                };
                r();
                n = n.map(function() {
                    this.end = i(this.el[0]);
                    this.diff = o(this.start, this.end);
                    return this
                });
                a.attr("class", h);
                n = n.map(function() {
                    var i = this,
                        e = t.Deferred(),
                        s = t.extend({}, l, {
                            queue: !1,
                            complete: function() {
                                e.resolve(i)
                            }
                        });
                    this.el.animate(this.diff, s);
                    return e.promise()
                });
                t.when.apply(t, n.get()).done(function() {
                    r();
                    t.each(arguments, function() {
                        var e = this.el;
                        t.each(this.diff, function(t) {
                            e.css(t, "")
                        })
                    });
                    l.complete.call(a[0])
                })
            })
        };
        t.fn.extend({
            addClass: (function(e) {
                return function(i, s, n, o) {
                    return s ? t.effects.animateClass.call(this, {
                        add: i
                    }, s, n, o) : e.apply(this, arguments)
                }
            })(t.fn.addClass),
            removeClass: (function(e) {
                return function(i, s, n, o) {
                    return arguments.length > 1 ? t.effects.animateClass.call(this, {
                        remove: i
                    }, s, n, o) : e.apply(this, arguments)
                }
            })(t.fn.removeClass),
            toggleClass: (function(i) {
                return function(s, n, o, a, r) {
                    if (typeof n === "boolean" || n === e) {
                        if (!o) {
                            return i.apply(this, arguments)
                        } else {
                            return t.effects.animateClass.call(this, (n ? {
                                add: s
                            } : {
                                remove: s
                            }), o, a, r)
                        }
                    } else {
                        return t.effects.animateClass.call(this, {
                            toggle: s
                        }, n, o, a)
                    }
                }
            })(t.fn.toggleClass),
            switchClass: function(e, i, s, n, o) {
                return t.effects.animateClass.call(this, {
                    add: i,
                    remove: e
                }, s, n, o)
            }
        })
    })();
    (function() {
        t.extend(t.effects, {
            version: "1.10.3",
            save: function(t, e) {
                for (var s = 0; s < e.length; s++) {
                    if (e[s] !== null) {
                        t.data(i + e[s], t[0].style[e[s]])
                    }
                }
            },
            restore: function(t, s) {
                var o, n;
                for (n = 0; n < s.length; n++) {
                    if (s[n] !== null) {
                        o = t.data(i + s[n]);
                        if (o === e) {
                            o = ""
                        };
                        t.css(s[n], o)
                    }
                }
            },
            setMode: function(t, e) {
                if (e === "toggle") {
                    e = t.is(":hidden") ? "show" : "hide"
                };
                return e
            },
            getBaseline: function(t, e) {
                var i, s;
                switch (t[0]) {
                    case "top":
                        i = 0;
                        break;
                    case "middle":
                        i = 0.5;
                        break;
                    case "bottom":
                        i = 1;
                        break;
                    default:
                        i = t[0] / e.height
                };
                switch (t[1]) {
                    case "left":
                        s = 0;
                        break;
                    case "center":
                        s = 0.5;
                        break;
                    case "right":
                        s = 1;
                        break;
                    default:
                        s = t[1] / e.width
                };
                return {
                    x: s,
                    y: i
                }
            },
            createWrapper: function(e) {
                if (e.parent().is(".ui-effects-wrapper")) {
                    return e.parent()
                };
                var s = {
                        width: e.outerWidth(!0),
                        height: e.outerHeight(!0),
                        "float": e.css("float")
                    },
                    o = t("<div></div>").addClass("ui-effects-wrapper").css({
                        fontSize: "100%",
                        background: "transparent",
                        border: "none",
                        margin: 0,
                        padding: 0
                    }),
                    a = {
                        width: e.width(),
                        height: e.height()
                    },
                    n = document.activeElement;
                try {
                    n.id
                } catch (i) {
                    n = document.body
                };
                e.wrap(o);
                if (e[0] === n || t.contains(e[0], n)) {
                    t(n).focus()
                };
                o = e.parent();
                if (e.css("position") === "static") {
                    o.css({
                        position: "relative"
                    });
                    e.css({
                        position: "relative"
                    })
                } else {
                    t.extend(s, {
                        position: e.css("position"),
                        zIndex: e.css("z-index")
                    });
                    t.each(["top", "left", "bottom", "right"], function(t, i) {
                        s[i] = e.css(i);
                        if (isNaN(parseInt(s[i], 10))) {
                            s[i] = "auto"
                        }
                    });
                    e.css({
                        position: "relative",
                        top: 0,
                        left: 0,
                        right: "auto",
                        bottom: "auto"
                    })
                };
                e.css(a);
                return o.css(s).show()
            },
            removeWrapper: function(e) {
                var i = document.activeElement;
                if (e.parent().is(".ui-effects-wrapper")) {
                    e.parent().replaceWith(e);
                    if (e[0] === i || t.contains(e[0], i)) {
                        t(i).focus()
                    }
                };
                return e
            },
            setTransition: function(e, i, s, n) {
                n = n || {};
                t.each(i, function(t, i) {
                    var o = e.cssUnit(i);
                    if (o[0] > 0) {
                        n[i] = o[0] * s + o[1]
                    }
                });
                return n
            }
        });

        function s(e, i, s, n) {
            if (t.isPlainObject(e)) {
                i = e;
                e = e.effect
            };
            e = {
                effect: e
            };
            if (i == null) {
                i = {}
            };
            if (t.isFunction(i)) {
                n = i;
                s = null;
                i = {}
            };
            if (typeof i === "number" || t.fx.speeds[i]) {
                n = s;
                s = i;
                i = {}
            };
            if (t.isFunction(s)) {
                n = s;
                s = null
            };
            if (i) {
                t.extend(e, i)
            };
            s = s || i.duration;
            e.duration = t.fx.off ? 0 : typeof s === "number" ? s : s in t.fx.speeds ? t.fx.speeds[s] : t.fx.speeds._default;
            e.complete = n || i.complete;
            return e
        };

        function n(e) {
            if (!e || typeof e === "number" || t.fx.speeds[e]) {
                return !0
            };
            if (typeof e === "string" && !t.effects.effect[e]) {
                return !0
            };
            if (t.isFunction(e)) {
                return !0
            };
            if (typeof e === "object" && !e.effect) {
                return !0
            };
            return !1
        };
        t.fn.extend({
            effect: function() {
                var e = s.apply(this, arguments),
                    i = e.mode,
                    n = e.queue,
                    o = t.effects.effect[e.effect];
                if (t.fx.off || !o) {
                    if (i) {
                        return this[i](e.duration, e.complete)
                    } else {
                        return this.each(function() {
                            if (e.complete) {
                                e.complete.call(this)
                            }
                        })
                    }
                };

                function a(i) {
                    var s = t(this),
                        a = e.complete,
                        n = e.mode;

                    function r() {
                        if (t.isFunction(a)) {
                            a.call(s[0])
                        };
                        if (t.isFunction(i)) {
                            i()
                        }
                    };
                    if (s.is(":hidden") ? n === "hide" : n === "show") {
                        s[n]();
                        r()
                    } else {
                        o.call(s[0], e, r)
                    }
                };
                return n === !1 ? this.each(a) : this.queue(n || "fx", a)
            },
            show: (function(t) {
                return function(e) {
                    if (n(e)) {
                        return t.apply(this, arguments)
                    } else {
                        var i = s.apply(this, arguments);
                        i.mode = "show";
                        return this.effect.call(this, i)
                    }
                }
            })(t.fn.show),
            hide: (function(t) {
                return function(e) {
                    if (n(e)) {
                        return t.apply(this, arguments)
                    } else {
                        var i = s.apply(this, arguments);
                        i.mode = "hide";
                        return this.effect.call(this, i)
                    }
                }
            })(t.fn.hide),
            toggle: (function(t) {
                return function(e) {
                    if (n(e) || typeof e === "boolean") {
                        return t.apply(this, arguments)
                    } else {
                        var i = s.apply(this, arguments);
                        i.mode = "toggle";
                        return this.effect.call(this, i)
                    }
                }
            })(t.fn.toggle),
            cssUnit: function(e) {
                var i = this.css(e),
                    s = [];
                t.each(["em", "px", "%", "pt"], function(t, e) {
                    if (i.indexOf(e) > 0) {
                        s = [parseFloat(i), e]
                    }
                });
                return s
            }
        })
    })();
    (function() {
        var e = {};
        t.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function(t, i) {
            e[i] = function(e) {
                return Math.pow(e, t + 2)
            }
        });
        t.extend(e, {
            Sine: function(t) {
                return 1 - Math.cos(t * Math.PI / 2)
            },
            Circ: function(t) {
                return 1 - Math.sqrt(1 - t * t)
            },
            Elastic: function(t) {
                return t === 0 || t === 1 ? t : -Math.pow(2, 8 * (t - 1)) * Math.sin(((t - 1) * 80 - 7.5) * Math.PI / 15)
            },
            Back: function(t) {
                return t * t * (3 * t - 2)
            },
            Bounce: function(t) {
                var e, i = 4;
                while (t < ((e = Math.pow(2, --i)) - 1) / 11) {};
                return 1 / Math.pow(4, 3 - i) - 7.5625 * Math.pow((e * 3 - 2) / 22 - t, 2)
            }
        });
        t.each(e, function(e, i) {
            t.easing["easeIn" + e] = i;
            t.easing["easeOut" + e] = function(t) {
                return 1 - i(1 - t)
            };
            t.easing["easeInOut" + e] = function(t) {
                return t < 0.5 ? i(t * 2) / 2 : 1 - i(t * -2 + 2) / 2
            }
        })
    })()
})(jQuery);
(function(t, e) {
    var n = 0,
        i = {},
        s = {};
    i.height = i.paddingTop = i.paddingBottom = i.borderTopWidth = i.borderBottomWidth = "hide";
    s.height = s.paddingTop = s.paddingBottom = s.borderTopWidth = s.borderBottomWidth = "show";
    t.widget("ui.accordion", {
        version: "1.10.3",
        options: {
            active: 0,
            animate: {},
            collapsible: !1,
            event: "click",
            header: "> li > :first-child,> :not(li):even",
            heightStyle: "auto",
            icons: {
                activeHeader: "ui-icon-triangle-1-s",
                header: "ui-icon-triangle-1-e"
            },
            activate: null,
            beforeActivate: null
        },
        _create: function() {
            var e = this.options;
            this.prevShow = this.prevHide = t();
            this.element.addClass("ui-accordion ui-widget ui-helper-reset").attr("role", "tablist");
            if (!e.collapsible && (e.active === !1 || e.active == null)) {
                e.active = 0
            };
            this._processPanels();
            if (e.active < 0) {
                e.active += this.headers.length
            };
            this._refresh()
        },
        _getCreateEventData: function() {
            return {
                header: this.active,
                panel: !this.active.length ? t() : this.active.next(),
                content: !this.active.length ? t() : this.active.next()
            }
        },
        _createIcons: function() {
            var e = this.options.icons;
            if (e) {
                t("<span>").addClass("ui-accordion-header-icon ui-icon " + e.header).prependTo(this.headers);
                this.active.children(".ui-accordion-header-icon").removeClass(e.header).addClass(e.activeHeader);
                this.headers.addClass("ui-accordion-icons")
            }
        },
        _destroyIcons: function() {
            this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()
        },
        _destroy: function() {
            var t;
            this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role");
            this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").each(function() {
                if (/^ui-accordion/.test(this.id)) {
                    this.removeAttribute("id")
                }
            });
            this._destroyIcons();
            t = this.headers.next().css("display", "").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").each(function() {
                if (/^ui-accordion/.test(this.id)) {
                    this.removeAttribute("id")
                }
            });
            if (this.options.heightStyle !== "content") {
                t.css("height", "")
            }
        },
        _setOption: function(t, e) {
            if (t === "active") {
                this._activate(e);
                return
            };
            if (t === "event") {
                if (this.options.event) {
                    this._off(this.headers, this.options.event)
                };
                this._setupEvents(e)
            };
            this._super(t, e);
            if (t === "collapsible" && !e && this.options.active === !1) {
                this._activate(0)
            };
            if (t === "icons") {
                this._destroyIcons();
                if (e) {
                    this._createIcons()
                }
            };
            if (t === "disabled") {
                this.headers.add(this.headers.next()).toggleClass("ui-state-disabled", !!e)
            }
        },
        _keydown: function(e) {
            if (e.altKey || e.ctrlKey) {
                return
            };
            var i = t.ui.keyCode,
                n = this.headers.length,
                o = this.headers.index(e.target),
                s = !1;
            switch (e.keyCode) {
                case i.RIGHT:
                case i.DOWN:
                    s = this.headers[(o + 1) % n];
                    break;
                case i.LEFT:
                case i.UP:
                    s = this.headers[(o - 1 + n) % n];
                    break;
                case i.SPACE:
                case i.ENTER:
                    this._eventHandler(e);
                    break;
                case i.HOME:
                    s = this.headers[0];
                    break;
                case i.END:
                    s = this.headers[n - 1];
                    break
            };
            if (s) {
                t(e.target).attr("tabIndex", -1);
                t(s).attr("tabIndex", 0);
                s.focus();
                e.preventDefault()
            }
        },
        _panelKeyDown: function(e) {
            if (e.keyCode === t.ui.keyCode.UP && e.ctrlKey) {
                t(e.currentTarget).prev().focus()
            }
        },
        refresh: function() {
            var e = this.options;
            this._processPanels();
            if ((e.active === !1 && e.collapsible === !0) || !this.headers.length) {
                e.active = !1;
                this.active = t()
            } else if (e.active === !1) {
                this._activate(0)
            } else if (this.active.length && !t.contains(this.element[0], this.active[0])) {
                if (this.headers.length === this.headers.find(".ui-state-disabled").length) {
                    e.active = !1;
                    this.active = t()
                } else {
                    this._activate(Math.max(0, e.active - 1))
                }
            } else {
                e.active = this.headers.index(this.active)
            };
            this._destroyIcons();
            this._refresh()
        },
        _processPanels: function() {
            this.headers = this.element.find(this.options.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all");
            this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").filter(":not(.ui-accordion-content-active)").hide()
        },
        _refresh: function() {
            var e, i = this.options,
                s = i.heightStyle,
                a = this.element.parent(),
                o = this.accordionId = "ui-accordion-" + (this.element.attr("id") || ++n);
            this.active = this._findActive(i.active).addClass("ui-accordion-header-active ui-state-active ui-corner-top").removeClass("ui-corner-all");
            this.active.next().addClass("ui-accordion-content-active").show();
            this.headers.attr("role", "tab").each(function(e) {
                var i = t(this),
                    s = i.attr("id"),
                    a = i.next(),
                    n = a.attr("id");
                if (!s) {
                    s = o + "-header-" + e;
                    i.attr("id", s)
                };
                if (!n) {
                    n = o + "-panel-" + e;
                    a.attr("id", n)
                };
                i.attr("aria-controls", n);
                a.attr("aria-labelledby", s)
            }).next().attr("role", "tabpanel");
            this.headers.not(this.active).attr({
                "aria-selected": "false",
                tabIndex: -1
            }).next().attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            }).hide();
            if (!this.active.length) {
                this.headers.eq(0).attr("tabIndex", 0)
            } else {
                this.active.attr({
                    "aria-selected": "true",
                    tabIndex: 0
                }).next().attr({
                    "aria-expanded": "true",
                    "aria-hidden": "false"
                })
            };
            this._createIcons();
            this._setupEvents(i.event);
            if (s === "fill") {
                e = a.height();
                this.element.siblings(":visible").each(function() {
                    var i = t(this),
                        s = i.css("position");
                    if (s === "absolute" || s === "fixed") {
                        return
                    };
                    e -= i.outerHeight(!0)
                });
                this.headers.each(function() {
                    e -= t(this).outerHeight(!0)
                });
                this.headers.next().each(function() {
                    t(this).height(Math.max(0, e - t(this).innerHeight() + t(this).height()))
                }).css("overflow", "auto")
            } else if (s === "auto") {
                e = 0;
                this.headers.next().each(function() {
                    e = Math.max(e, t(this).css("height", "").height())
                }).height(e)
            }
        },
        _activate: function(e) {
            var i = this._findActive(e)[0];
            if (i === this.active[0]) {
                return
            };
            i = i || this.active[0];
            this._eventHandler({
                target: i,
                currentTarget: i,
                preventDefault: t.noop
            })
        },
        _findActive: function(e) {
            return typeof e === "number" ? this.headers.eq(e) : t()
        },
        _setupEvents: function(e) {
            var i = {
                keydown: "_keydown"
            };
            if (e) {
                t.each(e.split(" "), function(t, e) {
                    i[e] = "_eventHandler"
                })
            };
            this._off(this.headers.add(this.headers.next()));
            this._on(this.headers, i);
            this._on(this.headers.next(), {
                keydown: "_panelKeyDown"
            });
            this._hoverable(this.headers);
            this._focusable(this.headers)
        },
        _eventHandler: function(e) {
            var i = this.options,
                n = this.active,
                s = t(e.currentTarget),
                o = s[0] === n[0],
                a = o && i.collapsible,
                l = a ? t() : s.next(),
                h = n.next(),
                r = {
                    oldHeader: n,
                    oldPanel: h,
                    newHeader: a ? t() : s,
                    newPanel: l
                };
            e.preventDefault();
            if ((o && !i.collapsible) || (this._trigger("beforeActivate", e, r) === !1)) {
                return
            };
            i.active = a ? !1 : this.headers.index(s);
            this.active = o ? t() : s;
            this._toggle(r);
            n.removeClass("ui-accordion-header-active ui-state-active");
            if (i.icons) {
                n.children(".ui-accordion-header-icon").removeClass(i.icons.activeHeader).addClass(i.icons.header)
            };
            if (!o) {
                s.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top");
                if (i.icons) {
                    s.children(".ui-accordion-header-icon").removeClass(i.icons.header).addClass(i.icons.activeHeader)
                };
                s.next().addClass("ui-accordion-content-active")
            }
        },
        _toggle: function(e) {
            var s = e.newPanel,
                i = this.prevShow.length ? this.prevShow : e.oldPanel;
            this.prevShow.add(this.prevHide).stop(!0, !0);
            this.prevShow = s;
            this.prevHide = i;
            if (this.options.animate) {
                this._animate(s, i, e)
            } else {
                i.hide();
                s.show();
                this._toggleComplete(e)
            };
            i.attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            });
            i.prev().attr("aria-selected", "false");
            if (s.length && i.length) {
                i.prev().attr("tabIndex", -1)
            } else if (s.length) {
                this.headers.filter(function() {
                    return t(this).attr("tabIndex") === 0
                }).attr("tabIndex", -1)
            };
            s.attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            }).prev().attr({
                "aria-selected": "true",
                tabIndex: 0
            })
        },
        _animate: function(t, e, n) {
            var c, o, a, f = this,
                h = 0,
                d = t.length && (!e.length || (t.index() < e.index())),
                l = this.options.animate || {},
                r = d && l.down || l,
                u = function() {
                    f._toggleComplete(n)
                };
            if (typeof r === "number") {
                a = r
            };
            if (typeof r === "string") {
                o = r
            };
            o = o || r.easing || l.easing;
            a = a || r.duration || l.duration;
            if (!e.length) {
                return t.animate(s, a, o, u)
            };
            if (!t.length) {
                return e.animate(i, a, o, u)
            };
            c = t.show().outerHeight();
            e.animate(i, {
                duration: a,
                easing: o,
                step: function(t, e) {
                    e.now = Math.round(t)
                }
            });
            t.hide().animate(s, {
                duration: a,
                easing: o,
                complete: u,
                step: function(t, i) {
                    i.now = Math.round(t);
                    if (i.prop !== "height") {
                        h += i.now
                    } else if (f.options.heightStyle !== "content") {
                        i.now = Math.round(c - e.outerHeight() - h);
                        h = 0
                    }
                }
            })
        },
        _toggleComplete: function(t) {
            var e = t.oldPanel;
            e.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all");
            if (e.length) {
                e.parent()[0].className = e.parent()[0].className
            };
            this._trigger("activate", null, t)
        }
    })
})(jQuery);
(function(t, e) {
    var i = 0;
    t.widget("ui.autocomplete", {
        version: "1.10.3",
        defaultElement: "<input>",
        options: {
            appendTo: null,
            autoFocus: !1,
            delay: 300,
            minLength: 1,
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            source: null,
            change: null,
            close: null,
            focus: null,
            open: null,
            response: null,
            search: null,
            select: null
        },
        pending: 0,
        _create: function() {
            var e, i, s, n = this.element[0].nodeName.toLowerCase(),
                o = n === "textarea",
                a = n === "input";
            this.isMultiLine = o ? !0 : a ? !1 : this.element.prop("isContentEditable");
            this.valueMethod = this.element[o || a ? "val" : "text"];
            this.isNewMenu = !0;
            this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off");
            this._on(this.element, {
                keydown: function(n) {
                    if (this.element.prop("readOnly")) {
                        e = !0;
                        s = !0;
                        i = !0;
                        return
                    };
                    e = !1;
                    s = !1;
                    i = !1;
                    var o = t.ui.keyCode;
                    switch (n.keyCode) {
                        case o.PAGE_UP:
                            e = !0;
                            this._move("previousPage", n);
                            break;
                        case o.PAGE_DOWN:
                            e = !0;
                            this._move("nextPage", n);
                            break;
                        case o.UP:
                            e = !0;
                            this._keyEvent("previous", n);
                            break;
                        case o.DOWN:
                            e = !0;
                            this._keyEvent("next", n);
                            break;
                        case o.ENTER:
                        case o.NUMPAD_ENTER:
                            if (this.menu.active) {
                                e = !0;
                                n.preventDefault();
                                this.menu.select(n)
                            };
                            break;
                        case o.TAB:
                            if (this.menu.active) {
                                this.menu.select(n)
                            };
                            break;
                        case o.ESCAPE:
                            if (this.menu.element.is(":visible")) {
                                this._value(this.term);
                                this.close(n);
                                n.preventDefault()
                            };
                            break;
                        default:
                            i = !0;
                            this._searchTimeout(n);
                            break
                    }
                },
                keypress: function(s) {
                    if (e) {
                        e = !1;
                        if (!this.isMultiLine || this.menu.element.is(":visible")) {
                            s.preventDefault()
                        };
                        return
                    };
                    if (i) {
                        return
                    };
                    var n = t.ui.keyCode;
                    switch (s.keyCode) {
                        case n.PAGE_UP:
                            this._move("previousPage", s);
                            break;
                        case n.PAGE_DOWN:
                            this._move("nextPage", s);
                            break;
                        case n.UP:
                            this._keyEvent("previous", s);
                            break;
                        case n.DOWN:
                            this._keyEvent("next", s);
                            break
                    }
                },
                input: function(t) {
                    if (s) {
                        s = !1;
                        t.preventDefault();
                        return
                    };
                    this._searchTimeout(t)
                },
                focus: function() {
                    this.selectedItem = null;
                    this.previous = this._value()
                },
                blur: function(t) {
                    if (this.cancelBlur) {
                        delete this.cancelBlur;
                        return
                    };
                    clearTimeout(this.searching);
                    this.close(t);
                    this._change(t)
                }
            });
            this._initSource();
            this.menu = t("<ul>").addClass("ui-autocomplete ui-front").appendTo(this._appendTo()).menu({
                role: null
            }).hide().data("ui-menu");
            this._on(this.menu.element, {
                mousedown: function(e) {
                    e.preventDefault();
                    this.cancelBlur = !0;
                    this._delay(function() {
                        delete this.cancelBlur
                    });
                    var i = this.menu.element[0];
                    if (!t(e.target).closest(".ui-menu-item").length) {
                        this._delay(function() {
                            var e = this;
                            this.document.one("mousedown", function(s) {
                                if (s.target !== e.element[0] && s.target !== i && !t.contains(i, s.target)) {
                                    e.close()
                                }
                            })
                        })
                    }
                },
                menufocus: function(e, i) {
                    if (this.isNewMenu) {
                        this.isNewMenu = !1;
                        if (e.originalEvent && /^mouse/.test(e.originalEvent.type)) {
                            this.menu.blur();
                            this.document.one("mousemove", function() {
                                t(e.target).trigger(e.originalEvent)
                            });
                            return
                        }
                    };
                    var s = i.item.data("ui-autocomplete-item");
                    if (!1 !== this._trigger("focus", e, {
                            item: s
                        })) {
                        if (e.originalEvent && /^key/.test(e.originalEvent.type)) {
                            this._value(s.value)
                        }
                    } else {
                        this.liveRegion.text(s.value)
                    }
                },
                menuselect: function(t, e) {
                    var i = e.item.data("ui-autocomplete-item"),
                        s = this.previous;
                    if (this.element[0] !== this.document[0].activeElement) {
                        this.element.focus();
                        this.previous = s;
                        this._delay(function() {
                            this.previous = s;
                            this.selectedItem = i
                        })
                    };
                    if (!1 !== this._trigger("select", t, {
                            item: i
                        })) {
                        this._value(i.value)
                    };
                    this.term = this._value();
                    this.close(t);
                    this.selectedItem = i
                }
            });
            this.liveRegion = t("<span>", {
                role: "status",
                "aria-live": "polite"
            }).addClass("ui-helper-hidden-accessible").insertBefore(this.element);
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _destroy: function() {
            clearTimeout(this.searching);
            this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete");
            this.menu.element.remove();
            this.liveRegion.remove()
        },
        _setOption: function(t, e) {
            this._super(t, e);
            if (t === "source") {
                this._initSource()
            };
            if (t === "appendTo") {
                this.menu.element.appendTo(this._appendTo())
            };
            if (t === "disabled" && e && this.xhr) {
                this.xhr.abort()
            }
        },
        _appendTo: function() {
            var e = this.options.appendTo;
            if (e) {
                e = e.jquery || e.nodeType ? t(e) : this.document.find(e).eq(0)
            };
            if (!e) {
                e = this.element.closest(".ui-front")
            };
            if (!e.length) {
                e = this.document[0].body
            };
            return e
        },
        _initSource: function() {
            var i, s, e = this;
            if (t.isArray(this.options.source)) {
                i = this.options.source;
                this.source = function(e, s) {
                    s(t.ui.autocomplete.filter(i, e.term))
                }
            } else if (typeof this.options.source === "string") {
                s = this.options.source;
                this.source = function(i, n) {
                    if (e.xhr) {
                        e.xhr.abort()
                    };
                    e.xhr = t.ajax({
                        url: s,
                        data: i,
                        dataType: "json",
                        success: function(t) {
                            n(t)
                        },
                        error: function() {
                            n([])
                        }
                    })
                }
            } else {
                this.source = this.options.source
            }
        },
        _searchTimeout: function(t) {
            clearTimeout(this.searching);
            this.searching = this._delay(function() {
                if (this.term !== this._value()) {
                    this.selectedItem = null;
                    this.search(null, t)
                }
            }, this.options.delay)
        },
        search: function(t, e) {
            t = t != null ? t : this._value();
            this.term = this._value();
            if (t.length < this.options.minLength) {
                return this.close(e)
            };
            if (this._trigger("search", e) === !1) {
                return
            };
            return this._search(t)
        },
        _search: function(t) {
            this.pending++;
            this.element.addClass("ui-autocomplete-loading");
            this.cancelSearch = !1;
            this.source({
                term: t
            }, this._response())
        },
        _response: function() {
            var t = this,
                e = ++i;
            return function(s) {
                if (e === i) {
                    t.__response(s)
                };
                t.pending--;
                if (!t.pending) {
                    t.element.removeClass("ui-autocomplete-loading")
                }
            }
        },
        __response: function(t) {
            if (t) {
                t = this._normalize(t)
            };
            this._trigger("response", null, {
                content: t
            });
            if (!this.options.disabled && t && t.length && !this.cancelSearch) {
                this._suggest(t);
                this._trigger("open")
            } else {
                this._close()
            }
        },
        close: function(t) {
            this.cancelSearch = !0;
            this._close(t)
        },
        _close: function(t) {
            if (this.menu.element.is(":visible")) {
                this.menu.element.hide();
                this.menu.blur();
                this.isNewMenu = !0;
                this._trigger("close", t)
            }
        },
        _change: function(t) {
            if (this.previous !== this._value()) {
                this._trigger("change", t, {
                    item: this.selectedItem
                })
            }
        },
        _normalize: function(e) {
            if (e.length && e[0].label && e[0].value) {
                return e
            };
            return t.map(e, function(e) {
                if (typeof e === "string") {
                    return {
                        label: e,
                        value: e
                    }
                };
                return t.extend({
                    label: e.label || e.value,
                    value: e.value || e.label
                }, e)
            })
        },
        _suggest: function(e) {
            var i = this.menu.element.empty();
            this._renderMenu(i, e);
            this.isNewMenu = !0;
            this.menu.refresh();
            i.show();
            this._resizeMenu();
            i.position(t.extend({
                of: this.element
            }, this.options.position));
            if (this.options.autoFocus) {
                this.menu.next()
            }
        },
        _resizeMenu: function() {
            var t = this.menu.element;
            t.outerWidth(Math.max(t.width("").outerWidth() + 1, this.element.outerWidth()))
        },
        _renderMenu: function(e, i) {
            var s = this;
            t.each(i, function(t, i) {
                s._renderItemData(e, i)
            })
        },
        _renderItemData: function(t, e) {
            return this._renderItem(t, e).data("ui-autocomplete-item", e)
        },
        _renderItem: function(e, i) {
            return t("<li>").append(t("<a>").text(i.label)).appendTo(e)
        },
        _move: function(t, e) {
            if (!this.menu.element.is(":visible")) {
                this.search(null, e);
                return
            };
            if (this.menu.isFirstItem() && /^previous/.test(t) || this.menu.isLastItem() && /^next/.test(t)) {
                this._value(this.term);
                this.menu.blur();
                return
            };
            this.menu[t](e)
        },
        widget: function() {
            return this.menu.element
        },
        _value: function() {
            return this.valueMethod.apply(this.element, arguments)
        },
        _keyEvent: function(t, e) {
            if (!this.isMultiLine || this.menu.element.is(":visible")) {
                this._move(t, e);
                e.preventDefault()
            }
        }
    });
    t.extend(t.ui.autocomplete, {
        escapeRegex: function(t) {
            return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
        },
        filter: function(e, i) {
            var s = new RegExp(t.ui.autocomplete.escapeRegex(i), "i");
            return t.grep(e, function(t) {
                return s.test(t.label || t.value || t)
            })
        }
    });
    t.widget("ui.autocomplete", t.ui.autocomplete, {
        options: {
            messages: {
                noResults: "No search results.",
                results: function(t) {
                    return t + (t > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate."
                }
            }
        },
        __response: function(t) {
            var e;
            this._superApply(arguments);
            if (this.options.disabled || this.cancelSearch) {
                return
            };
            if (t && t.length) {
                e = this.options.messages.results(t.length)
            } else {
                e = this.options.messages.noResults
            };
            this.liveRegion.text(e)
        }
    })
}(jQuery));
(function(t, e) {
    var s, n, o, i, a = "ui-button ui-widget ui-state-default ui-corner-all",
        h = "ui-state-hover ui-state-active ",
        r = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",
        u = function() {
            var e = t(this);
            setTimeout(function() {
                e.find(":ui-button").button("refresh")
            }, 1)
        },
        l = function(e) {
            var i = e.name,
                n = e.form,
                s = t([]);
            if (i) {
                i = i.replace(/'/g, "\\'");
                if (n) {
                    s = t(n).find("[name='" + i + "']")
                } else {
                    s = t("[name='" + i + "']", e.ownerDocument).filter(function() {
                        return !this.form
                    })
                }
            };
            return s
        };
    t.widget("ui.button", {
        version: "1.10.3",
        defaultElement: "<button>",
        options: {
            disabled: null,
            text: !0,
            label: null,
            icons: {
                primary: null,
                secondary: null
            }
        },
        _create: function() {
            this.element.closest("form").unbind("reset" + this.eventNamespace).bind("reset" + this.eventNamespace, u);
            if (typeof this.options.disabled !== "boolean") {
                this.options.disabled = !!this.element.prop("disabled")
            } else {
                this.element.prop("disabled", this.options.disabled)
            };
            this._determineButtonType();
            this.hasTitle = !!this.buttonElement.attr("title");
            var r = this,
                e = this.options,
                h = this.type === "checkbox" || this.type === "radio",
                f = !h ? "ui-state-active" : "",
                c = "ui-state-focus";
            if (e.label === null) {
                e.label = (this.type === "input" ? this.buttonElement.val() : this.buttonElement.html())
            };
            this._hoverable(this.buttonElement);
            this.buttonElement.addClass(a).attr("role", "button").bind("mouseenter" + this.eventNamespace, function() {
                if (e.disabled) {
                    return
                };
                if (this === s) {
                    t(this).addClass("ui-state-active")
                }
            }).bind("mouseleave" + this.eventNamespace, function() {
                if (e.disabled) {
                    return
                };
                t(this).removeClass(f)
            }).bind("click" + this.eventNamespace, function(t) {
                if (e.disabled) {
                    t.preventDefault();
                    t.stopImmediatePropagation()
                }
            });
            this.element.bind("focus" + this.eventNamespace, function() {
                r.buttonElement.addClass(c)
            }).bind("blur" + this.eventNamespace, function() {
                r.buttonElement.removeClass(c)
            });
            if (h) {
                this.element.bind("change" + this.eventNamespace, function() {
                    if (i) {
                        return
                    };
                    r.refresh()
                });
                this.buttonElement.bind("mousedown" + this.eventNamespace, function(t) {
                    if (e.disabled) {
                        return
                    };
                    i = !1;
                    n = t.pageX;
                    o = t.pageY
                }).bind("mouseup" + this.eventNamespace, function(t) {
                    if (e.disabled) {
                        return
                    };
                    if (n !== t.pageX || o !== t.pageY) {
                        i = !0
                    }
                })
            };
            if (this.type === "checkbox") {
                this.buttonElement.bind("click" + this.eventNamespace, function() {
                    if (e.disabled || i) {
                        return !1
                    }
                })
            } else if (this.type === "radio") {
                this.buttonElement.bind("click" + this.eventNamespace, function() {
                    if (e.disabled || i) {
                        return !1
                    };
                    t(this).addClass("ui-state-active");
                    r.buttonElement.attr("aria-pressed", "true");
                    var s = r.element[0];
                    l(s).not(s).map(function() {
                        return t(this).button("widget")[0]
                    }).removeClass("ui-state-active").attr("aria-pressed", "false")
                })
            } else {
                this.buttonElement.bind("mousedown" + this.eventNamespace, function() {
                    if (e.disabled) {
                        return !1
                    };
                    t(this).addClass("ui-state-active");
                    s = this;
                    r.document.one("mouseup", function() {
                        s = null
                    })
                }).bind("mouseup" + this.eventNamespace, function() {
                    if (e.disabled) {
                        return !1
                    };
                    t(this).removeClass("ui-state-active")
                }).bind("keydown" + this.eventNamespace, function(i) {
                    if (e.disabled) {
                        return !1
                    };
                    if (i.keyCode === t.ui.keyCode.SPACE || i.keyCode === t.ui.keyCode.ENTER) {
                        t(this).addClass("ui-state-active")
                    }
                }).bind("keyup" + this.eventNamespace + " blur" + this.eventNamespace, function() {
                    t(this).removeClass("ui-state-active")
                });
                if (this.buttonElement.is("a")) {
                    this.buttonElement.keyup(function(e) {
                        if (e.keyCode === t.ui.keyCode.SPACE) {
                            t(this).click()
                        }
                    })
                }
            };
            this._setOption("disabled", e.disabled);
            this._resetButton()
        },
        _determineButtonType: function() {
            var t, e, i;
            if (this.element.is("[type=checkbox]")) {
                this.type = "checkbox"
            } else if (this.element.is("[type=radio]")) {
                this.type = "radio"
            } else if (this.element.is("input")) {
                this.type = "input"
            } else {
                this.type = "button"
            };
            if (this.type === "checkbox" || this.type === "radio") {
                t = this.element.parents().last();
                e = "label[for='" + this.element.attr("id") + "']";
                this.buttonElement = t.find(e);
                if (!this.buttonElement.length) {
                    t = t.length ? t.siblings() : this.element.siblings();
                    this.buttonElement = t.filter(e);
                    if (!this.buttonElement.length) {
                        this.buttonElement = t.find(e)
                    }
                };
                this.element.addClass("ui-helper-hidden-accessible");
                i = this.element.is(":checked");
                if (i) {
                    this.buttonElement.addClass("ui-state-active")
                };
                this.buttonElement.prop("aria-pressed", i)
            } else {
                this.buttonElement = this.element
            }
        },
        widget: function() {
            return this.buttonElement
        },
        _destroy: function() {
            this.element.removeClass("ui-helper-hidden-accessible");
            this.buttonElement.removeClass(a + " " + h + " " + r).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html());
            if (!this.hasTitle) {
                this.buttonElement.removeAttr("title")
            }
        },
        _setOption: function(t, e) {
            this._super(t, e);
            if (t === "disabled") {
                if (e) {
                    this.element.prop("disabled", !0)
                } else {
                    this.element.prop("disabled", !1)
                };
                return
            };
            this._resetButton()
        },
        refresh: function() {
            var e = this.element.is("input, button") ? this.element.is(":disabled") : this.element.hasClass("ui-button-disabled");
            if (e !== this.options.disabled) {
                this._setOption("disabled", e)
            };
            if (this.type === "radio") {
                l(this.element[0]).each(function() {
                    if (t(this).is(":checked")) {
                        t(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true")
                    } else {
                        t(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false")
                    }
                })
            } else if (this.type === "checkbox") {
                if (this.element.is(":checked")) {
                    this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true")
                } else {
                    this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false")
                }
            }
        },
        _resetButton: function() {
            if (this.type === "input") {
                if (this.options.label) {
                    this.element.val(this.options.label)
                };
                return
            };
            var i = this.buttonElement.removeClass(r),
                o = t("<span></span>", this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(i.empty()).text(),
                e = this.options.icons,
                n = e.primary && e.secondary,
                s = [];
            if (e.primary || e.secondary) {
                if (this.options.text) {
                    s.push("ui-button-text-icon" + (n ? "s" : (e.primary ? "-primary" : "-secondary")))
                };
                if (e.primary) {
                    i.prepend("<span class='ui-button-icon-primary ui-icon " + e.primary + "'></span>")
                };
                if (e.secondary) {
                    i.append("<span class='ui-button-icon-secondary ui-icon " + e.secondary + "'></span>")
                };
                if (!this.options.text) {
                    s.push(n ? "ui-button-icons-only" : "ui-button-icon-only");
                    if (!this.hasTitle) {
                        i.attr("title", t.trim(o))
                    }
                }
            } else {
                s.push("ui-button-text-only")
            };
            i.addClass(s.join(" "))
        }
    });
    t.widget("ui.buttonset", {
        version: "1.10.3",
        options: {
            items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"
        },
        _create: function() {
            this.element.addClass("ui-buttonset")
        },
        _init: function() {
            this.refresh()
        },
        _setOption: function(t, e) {
            if (t === "disabled") {
                this.buttons.button("option", t, e)
            };
            this._super(t, e)
        },
        refresh: function() {
            var e = this.element.css("direction") === "rtl";
            this.buttons = this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function() {
                return t(this).button("widget")[0]
            }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(e ? "ui-corner-right" : "ui-corner-left").end().filter(":last").addClass(e ? "ui-corner-left" : "ui-corner-right").end().end()
        },
        _destroy: function() {
            this.element.removeClass("ui-buttonset");
            this.buttons.map(function() {
                return t(this).button("widget")[0]
            }).removeClass("ui-corner-left ui-corner-right").end().button("destroy")
        }
    })
}(jQuery));
(function(t, e) {
    t.extend(t.ui, {
        datepicker: {
            version: "1.10.3"
        }
    });
    var i = "datepicker",
        n;

    function o() {
        this._curInst = null;
        this._keyEvent = !1;
        this._disabledInputs = [];
        this._datepickerShowing = !1;
        this._inDialog = !1;
        this._mainDivId = "ui-datepicker-div";
        this._inlineClass = "ui-datepicker-inline";
        this._appendClass = "ui-datepicker-append";
        this._triggerClass = "ui-datepicker-trigger";
        this._dialogClass = "ui-datepicker-dialog";
        this._disableClass = "ui-datepicker-disabled";
        this._unselectableClass = "ui-datepicker-unselectable";
        this._currentClass = "ui-datepicker-current-day";
        this._dayOverClass = "ui-datepicker-days-cell-over";
        this.regional = [];
        this.regional[""] = {
            closeText: "Done",
            prevText: "Prev",
            nextText: "Next",
            currentText: "Today",
            monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            weekHeader: "Wk",
            dateFormat: "mm/dd/yy",
            firstDay: 0,
            isRTL: !1,
            showMonthAfterYear: !1,
            yearSuffix: ""
        };
        this._defaults = {
            showOn: "focus",
            showAnim: "fadeIn",
            showOptions: {},
            defaultDate: null,
            appendText: "",
            buttonText: "...",
            buttonImage: "",
            buttonImageOnly: !1,
            hideIfNoPrevNext: !1,
            navigationAsDateFormat: !1,
            gotoCurrent: !1,
            changeMonth: !1,
            changeYear: !1,
            yearRange: "c-10:c+10",
            showOtherMonths: !1,
            selectOtherMonths: !1,
            showWeek: !1,
            calculateWeek: this.iso8601Week,
            shortYearCutoff: "+10",
            minDate: null,
            maxDate: null,
            duration: "fast",
            beforeShowDay: null,
            beforeShow: null,
            onSelect: null,
            onChangeMonthYear: null,
            onClose: null,
            numberOfMonths: 1,
            showCurrentAtPos: 0,
            stepMonths: 1,
            stepBigMonths: 12,
            altField: "",
            altFormat: "",
            constrainInput: !0,
            showButtonPanel: !1,
            autoSize: !1,
            disabled: !1
        };
        t.extend(this._defaults, this.regional[""]);
        this.dpDiv = a(t("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))
    };
    t.extend(o.prototype, {
        markerClassName: "hasDatepicker",
        maxRows: 4,
        _widgetDatepicker: function() {
            return this.dpDiv
        },
        setDefaults: function(t) {
            s(this._defaults, t || {});
            return this
        },
        _attachDatepicker: function(e, i) {
            var s, o, n;
            s = e.nodeName.toLowerCase();
            o = (s === "div" || s === "span");
            if (!e.id) {
                this.uuid += 1;
                e.id = "dp" + this.uuid
            };
            n = this._newInst(t(e), o);
            n.settings = t.extend({}, i || {});
            if (s === "input") {
                this._connectDatepicker(e, n)
            } else if (o) {
                this._inlineDatepicker(e, n)
            }
        },
        _newInst: function(e, i) {
            var s = e[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1");
            return {
                id: s,
                input: e,
                selectedDay: 0,
                selectedMonth: 0,
                selectedYear: 0,
                drawMonth: 0,
                drawYear: 0,
                inline: i,
                dpDiv: (!i ? this.dpDiv : a(t("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")))
            }
        },
        _connectDatepicker: function(e, s) {
            var n = t(e);
            s.append = t([]);
            s.trigger = t([]);
            if (n.hasClass(this.markerClassName)) {
                return
            };
            this._attachments(n, s);
            n.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp);
            this._autoSize(s);
            t.data(e, i, s);
            if (s.settings.disabled) {
                this._disableDatepicker(e)
            }
        },
        _attachments: function(e, i) {
            var n, s, o, a = this._get(i, "appendText"),
                r = this._get(i, "isRTL");
            if (i.append) {
                i.append.remove()
            };
            if (a) {
                i.append = t("<span class='" + this._appendClass + "'>" + a + "</span>");
                e[r ? "before" : "after"](i.append)
            };
            e.unbind("focus", this._showDatepicker);
            if (i.trigger) {
                i.trigger.remove()
            };
            n = this._get(i, "showOn");
            if (n === "focus" || n === "both") {
                e.focus(this._showDatepicker)
            };
            if (n === "button" || n === "both") {
                s = this._get(i, "buttonText");
                o = this._get(i, "buttonImage");
                i.trigger = t(this._get(i, "buttonImageOnly") ? t("<img/>").addClass(this._triggerClass).attr({
                    src: o,
                    alt: s,
                    title: s
                }) : t("<button type='button'></button>").addClass(this._triggerClass).html(!o ? s : t("<img/>").attr({
                    src: o,
                    alt: s,
                    title: s
                })));
                e[r ? "before" : "after"](i.trigger);
                i.trigger.click(function() {
                    if (t.datepicker._datepickerShowing && t.datepicker._lastInput === e[0]) {
                        t.datepicker._hideDatepicker()
                    } else if (t.datepicker._datepickerShowing && t.datepicker._lastInput !== e[0]) {
                        t.datepicker._hideDatepicker();
                        t.datepicker._showDatepicker(e[0])
                    } else {
                        t.datepicker._showDatepicker(e[0])
                    };
                    return !1
                })
            }
        },
        _autoSize: function(t) {
            if (this._get(t, "autoSize") && !t.inline) {
                var s, n, o, e, i = new Date(2009, 12 - 1, 20),
                    a = this._get(t, "dateFormat");
                if (a.match(/[DM]/)) {
                    s = function(t) {
                        n = 0;
                        o = 0;
                        for (e = 0; e < t.length; e++) {
                            if (t[e].length > n) {
                                n = t[e].length;
                                o = e
                            }
                        };
                        return o
                    };
                    i.setMonth(s(this._get(t, (a.match(/MM/) ? "monthNames" : "monthNamesShort"))));
                    i.setDate(s(this._get(t, (a.match(/DD/) ? "dayNames" : "dayNamesShort"))) + 20 - i.getDay())
                };
                t.input.attr("size", this._formatDate(t, i).length)
            }
        },
        _inlineDatepicker: function(e, s) {
            var n = t(e);
            if (n.hasClass(this.markerClassName)) {
                return
            };
            n.addClass(this.markerClassName).append(s.dpDiv);
            t.data(e, i, s);
            this._setDate(s, this._getDefaultDate(s), !0);
            this._updateDatepicker(s);
            this._updateAlternate(s);
            if (s.settings.disabled) {
                this._disableDatepicker(e)
            };
            s.dpDiv.css("display", "block")
        },
        _dialogDatepicker: function(e, n, o, a, r) {
            var h, u, c, f, d, l = this._dialogInst;
            if (!l) {
                this.uuid += 1;
                h = "dp" + this.uuid;
                this._dialogInput = t("<input type='text' id='" + h + "' style='position: absolute; top: -100px; width: 0px;'/>");
                this._dialogInput.keydown(this._doKeyDown);
                t("body").append(this._dialogInput);
                l = this._dialogInst = this._newInst(this._dialogInput, !1);
                l.settings = {};
                t.data(this._dialogInput[0], i, l)
            };
            s(l.settings, a || {});
            n = (n && n.constructor === Date ? this._formatDate(l, n) : n);
            this._dialogInput.val(n);
            this._pos = (r ? (r.length ? r : [r.pageX, r.pageY]) : null);
            if (!this._pos) {
                u = document.documentElement.clientWidth;
                c = document.documentElement.clientHeight;
                f = document.documentElement.scrollLeft || document.body.scrollLeft;
                d = document.documentElement.scrollTop || document.body.scrollTop;
                this._pos = [(u / 2) - 100 + f, (c / 2) - 150 + d]
            };
            this._dialogInput.css("left", (this._pos[0] + 20) + "px").css("top", this._pos[1] + "px");
            l.settings.onSelect = o;
            this._inDialog = !0;
            this.dpDiv.addClass(this._dialogClass);
            this._showDatepicker(this._dialogInput[0]);
            if (t.blockUI) {
                t.blockUI(this.dpDiv)
            };
            t.data(this._dialogInput[0], i, l);
            return this
        },
        _destroyDatepicker: function(e) {
            var s, n = t(e),
                o = t.data(e, i);
            if (!n.hasClass(this.markerClassName)) {
                return
            };
            s = e.nodeName.toLowerCase();
            t.removeData(e, i);
            if (s === "input") {
                o.append.remove();
                o.trigger.remove();
                n.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)
            } else if (s === "div" || s === "span") {
                n.removeClass(this.markerClassName).empty()
            }
        },
        _enableDatepicker: function(e) {
            var s, n, o = t(e),
                a = t.data(e, i);
            if (!o.hasClass(this.markerClassName)) {
                return
            };
            s = e.nodeName.toLowerCase();
            if (s === "input") {
                e.disabled = !1;
                a.trigger.filter("button").each(function() {
                    this.disabled = !1
                }).end().filter("img").css({
                    opacity: "1.0",
                    cursor: ""
                })
            } else if (s === "div" || s === "span") {
                n = o.children("." + this._inlineClass);
                n.children().removeClass("ui-state-disabled");
                n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !1)
            };
            this._disabledInputs = t.map(this._disabledInputs, function(t) {
                return (t === e ? null : t)
            })
        },
        _disableDatepicker: function(e) {
            var s, n, o = t(e),
                a = t.data(e, i);
            if (!o.hasClass(this.markerClassName)) {
                return
            };
            s = e.nodeName.toLowerCase();
            if (s === "input") {
                e.disabled = !0;
                a.trigger.filter("button").each(function() {
                    this.disabled = !0
                }).end().filter("img").css({
                    opacity: "0.5",
                    cursor: "default"
                })
            } else if (s === "div" || s === "span") {
                n = o.children("." + this._inlineClass);
                n.children().addClass("ui-state-disabled");
                n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !0)
            };
            this._disabledInputs = t.map(this._disabledInputs, function(t) {
                return (t === e ? null : t)
            });
            this._disabledInputs[this._disabledInputs.length] = e
        },
        _isDisabledDatepicker: function(t) {
            if (!t) {
                return !1
            };
            for (var e = 0; e < this._disabledInputs.length; e++) {
                if (this._disabledInputs[e] === t) {
                    return !0
                }
            };
            return !1
        },
        _getInst: function(e) {
            try {
                return t.data(e, i)
            } catch (s) {
                throw "Missing instance data for this datepicker"
            }
        },
        _optionDatepicker: function(i, n, o) {
            var r, u, l, h, a = this._getInst(i);
            if (arguments.length === 2 && typeof n === "string") {
                return (n === "defaults" ? t.extend({}, t.datepicker._defaults) : (a ? (n === "all" ? t.extend({}, a.settings) : this._get(a, n)) : null))
            };
            r = n || {};
            if (typeof n === "string") {
                r = {};
                r[n] = o
            };
            if (a) {
                if (this._curInst === a) {
                    this._hideDatepicker()
                };
                u = this._getDateDatepicker(i, !0);
                l = this._getMinMaxDate(a, "min");
                h = this._getMinMaxDate(a, "max");
                s(a.settings, r);
                if (l !== null && r.dateFormat !== e && r.minDate === e) {
                    a.settings.minDate = this._formatDate(a, l)
                };
                if (h !== null && r.dateFormat !== e && r.maxDate === e) {
                    a.settings.maxDate = this._formatDate(a, h)
                };
                if ("disabled" in r) {
                    if (r.disabled) {
                        this._disableDatepicker(i)
                    } else {
                        this._enableDatepicker(i)
                    }
                };
                this._attachments(t(i), a);
                this._autoSize(a);
                this._setDate(a, u);
                this._updateAlternate(a);
                this._updateDatepicker(a)
            }
        },
        _changeDatepicker: function(t, e, i) {
            this._optionDatepicker(t, e, i)
        },
        _refreshDatepicker: function(t) {
            var e = this._getInst(t);
            if (e) {
                this._updateDatepicker(e)
            }
        },
        _setDateDatepicker: function(t, e) {
            var i = this._getInst(t);
            if (i) {
                this._setDate(i, e);
                this._updateDatepicker(i);
                this._updateAlternate(i)
            }
        },
        _getDateDatepicker: function(t, e) {
            var i = this._getInst(t);
            if (i && !i.inline) {
                this._setDateFromField(i, e)
            };
            return (i ? this._getDate(i) : null)
        },
        _doKeyDown: function(e) {
            var n, a, o, i = t.datepicker._getInst(e.target),
                s = !0,
                r = i.dpDiv.is(".ui-datepicker-rtl");
            i._keyEvent = !0;
            if (t.datepicker._datepickerShowing) {
                switch (e.keyCode) {
                    case 9:
                        t.datepicker._hideDatepicker();
                        s = !1;
                        break;
                    case 13:
                        o = t("td." + t.datepicker._dayOverClass + ":not(." + t.datepicker._currentClass + ")", i.dpDiv);
                        if (o[0]) {
                            t.datepicker._selectDay(e.target, i.selectedMonth, i.selectedYear, o[0])
                        };
                        n = t.datepicker._get(i, "onSelect");
                        if (n) {
                            a = t.datepicker._formatDate(i);
                            n.apply((i.input ? i.input[0] : null), [a, i])
                        } else {
                            t.datepicker._hideDatepicker()
                        };
                        return !1;
                    case 27:
                        t.datepicker._hideDatepicker();
                        break;
                    case 33:
                        t.datepicker._adjustDate(e.target, (e.ctrlKey ? -t.datepicker._get(i, "stepBigMonths") : -t.datepicker._get(i, "stepMonths")), "M");
                        break;
                    case 34:
                        t.datepicker._adjustDate(e.target, (e.ctrlKey ? +t.datepicker._get(i, "stepBigMonths") : +t.datepicker._get(i, "stepMonths")), "M");
                        break;
                    case 35:
                        if (e.ctrlKey || e.metaKey) {
                            t.datepicker._clearDate(e.target)
                        };
                        s = e.ctrlKey || e.metaKey;
                        break;
                    case 36:
                        if (e.ctrlKey || e.metaKey) {
                            t.datepicker._gotoToday(e.target)
                        };
                        s = e.ctrlKey || e.metaKey;
                        break;
                    case 37:
                        if (e.ctrlKey || e.metaKey) {
                            t.datepicker._adjustDate(e.target, (r ? +1 : -1), "D")
                        };
                        s = e.ctrlKey || e.metaKey;
                        if (e.originalEvent.altKey) {
                            t.datepicker._adjustDate(e.target, (e.ctrlKey ? -t.datepicker._get(i, "stepBigMonths") : -t.datepicker._get(i, "stepMonths")), "M")
                        };
                        break;
                    case 38:
                        if (e.ctrlKey || e.metaKey) {
                            t.datepicker._adjustDate(e.target, -7, "D")
                        };
                        s = e.ctrlKey || e.metaKey;
                        break;
                    case 39:
                        if (e.ctrlKey || e.metaKey) {
                            t.datepicker._adjustDate(e.target, (r ? -1 : +1), "D")
                        };
                        s = e.ctrlKey || e.metaKey;
                        if (e.originalEvent.altKey) {
                            t.datepicker._adjustDate(e.target, (e.ctrlKey ? +t.datepicker._get(i, "stepBigMonths") : +t.datepicker._get(i, "stepMonths")), "M")
                        };
                        break;
                    case 40:
                        if (e.ctrlKey || e.metaKey) {
                            t.datepicker._adjustDate(e.target, +7, "D")
                        };
                        s = e.ctrlKey || e.metaKey;
                        break;
                    default:
                        s = !1
                }
            } else if (e.keyCode === 36 && e.ctrlKey) {
                t.datepicker._showDatepicker(this)
            } else {
                s = !1
            };
            if (s) {
                e.preventDefault();
                e.stopPropagation()
            }
        },
        _doKeyPress: function(e) {
            var i, s, n = t.datepicker._getInst(e.target);
            if (t.datepicker._get(n, "constrainInput")) {
                i = t.datepicker._possibleChars(t.datepicker._get(n, "dateFormat"));
                s = String.fromCharCode(e.charCode == null ? e.keyCode : e.charCode);
                return e.ctrlKey || e.metaKey || (s < " " || !i || i.indexOf(s) > -1)
            }
        },
        _doKeyUp: function(e) {
            var n, i = t.datepicker._getInst(e.target);
            if (i.input.val() !== i.lastVal) {
                try {
                    n = t.datepicker.parseDate(t.datepicker._get(i, "dateFormat"), (i.input ? i.input.val() : null), t.datepicker._getFormatConfig(i));
                    if (n) {
                        t.datepicker._setDateFromField(i);
                        t.datepicker._updateAlternate(i);
                        t.datepicker._updateDatepicker(i)
                    }
                } catch (s) {}
            };
            return !0
        },
        _showDatepicker: function(e) {
            e = e.target || e;
            if (e.nodeName.toLowerCase() !== "input") {
                e = t("input", e.parentNode)[0]
            };
            if (t.datepicker._isDisabledDatepicker(e) || t.datepicker._lastInput === e) {
                return
            };
            var i, r, l, n, o, a, h;
            i = t.datepicker._getInst(e);
            if (t.datepicker._curInst && t.datepicker._curInst !== i) {
                t.datepicker._curInst.dpDiv.stop(!0, !0);
                if (i && t.datepicker._datepickerShowing) {
                    t.datepicker._hideDatepicker(t.datepicker._curInst.input[0])
                }
            };
            r = t.datepicker._get(i, "beforeShow");
            l = r ? r.apply(e, [e, i]) : {};
            if (l === !1) {
                return
            };
            s(i.settings, l);
            i.lastVal = null;
            t.datepicker._lastInput = e;
            t.datepicker._setDateFromField(i);
            if (t.datepicker._inDialog) {
                e.value = ""
            };
            if (!t.datepicker._pos) {
                t.datepicker._pos = t.datepicker._findPos(e);
                t.datepicker._pos[1] += e.offsetHeight
            };
            n = !1;
            t(e).parents().each(function() {
                n |= t(this).css("position") === "fixed";
                return !n
            });
            o = {
                left: t.datepicker._pos[0],
                top: t.datepicker._pos[1]
            };
            t.datepicker._pos = null;
            i.dpDiv.empty();
            i.dpDiv.css({
                position: "absolute",
                display: "block",
                top: "-1000px"
            });
            t.datepicker._updateDatepicker(i);
            o = t.datepicker._checkOffset(i, o, n);
            i.dpDiv.css({
                position: (t.datepicker._inDialog && t.blockUI ? "static" : (n ? "fixed" : "absolute")),
                display: "none",
                left: o.left + "px",
                top: o.top + "px"
            });
            if (!i.inline) {
                a = t.datepicker._get(i, "showAnim");
                h = t.datepicker._get(i, "duration");
                i.dpDiv.zIndex(t(e).zIndex() + 1);
                t.datepicker._datepickerShowing = !0;
                if (t.effects && t.effects.effect[a]) {
                    i.dpDiv.show(a, t.datepicker._get(i, "showOptions"), h)
                } else {
                    i.dpDiv[a || "show"](a ? h : null)
                };
                if (t.datepicker._shouldFocusInput(i)) {
                    i.input.focus()
                };
                t.datepicker._curInst = i
            }
        },
        _updateDatepicker: function(e) {
            this.maxRows = 4;
            n = e;
            e.dpDiv.empty().append(this._generateHTML(e));
            this._attachHandlers(e);
            e.dpDiv.find("." + this._dayOverClass + " a").mouseover();
            var i, s = this._getNumberOfMonths(e),
                o = s[1],
                a = 17;
            e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");
            if (o > 1) {
                e.dpDiv.addClass("ui-datepicker-multi-" + o).css("width", (a * o) + "em")
            };
            e.dpDiv[(s[0] !== 1 || s[1] !== 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi");
            e.dpDiv[(this._get(e, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl");
            if (e === t.datepicker._curInst && t.datepicker._datepickerShowing && t.datepicker._shouldFocusInput(e)) {
                e.input.focus()
            };
            if (e.yearshtml) {
                i = e.yearshtml;
                setTimeout(function() {
                    if (i === e.yearshtml && e.yearshtml) {
                        e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml)
                    };
                    i = e.yearshtml = null
                }, 0)
            }
        },
        _shouldFocusInput: function(t) {
            return t.input && t.input.is(":visible") && !t.input.is(":disabled") && !t.input.is(":focus")
        },
        _checkOffset: function(e, i, s) {
            var n = e.dpDiv.outerWidth(),
                o = e.dpDiv.outerHeight(),
                h = e.input ? e.input.outerWidth() : 0,
                r = e.input ? e.input.outerHeight() : 0,
                a = document.documentElement.clientWidth + (s ? 0 : t(document).scrollLeft()),
                l = document.documentElement.clientHeight + (s ? 0 : t(document).scrollTop());
            i.left -= (this._get(e, "isRTL") ? (n - h) : 0);
            i.left -= (s && i.left === e.input.offset().left) ? t(document).scrollLeft() : 0;
            i.top -= (s && i.top === (e.input.offset().top + r)) ? t(document).scrollTop() : 0;
            i.left -= Math.min(i.left, (i.left + n > a && a > n) ? Math.abs(i.left + n - a) : 0);
            i.top -= Math.min(i.top, (i.top + o > l && l > o) ? Math.abs(o + r) : 0);
            return i
        },
        _findPos: function(e) {
            var i, s = this._getInst(e),
                n = this._get(s, "isRTL");
            while (e && (e.type === "hidden" || e.nodeType !== 1 || t.expr.filters.hidden(e))) {
                e = e[n ? "previousSibling" : "nextSibling"]
            };
            i = t(e).offset();
            return [i.left, i.top]
        },
        _hideDatepicker: function(e) {
            var n, a, o, r, s = this._curInst;
            if (!s || (e && s !== t.data(e, i))) {
                return
            };
            if (this._datepickerShowing) {
                n = this._get(s, "showAnim");
                a = this._get(s, "duration");
                o = function() {
                    t.datepicker._tidyDialog(s)
                };
                if (t.effects && (t.effects.effect[n] || t.effects[n])) {
                    s.dpDiv.hide(n, t.datepicker._get(s, "showOptions"), a, o)
                } else {
                    s.dpDiv[(n === "slideDown" ? "slideUp" : (n === "fadeIn" ? "fadeOut" : "hide"))]((n ? a : null), o)
                };
                if (!n) {
                    o()
                };
                this._datepickerShowing = !1;
                r = this._get(s, "onClose");
                if (r) {
                    r.apply((s.input ? s.input[0] : null), [(s.input ? s.input.val() : ""), s])
                };
                this._lastInput = null;
                if (this._inDialog) {
                    this._dialogInput.css({
                        position: "absolute",
                        left: "0",
                        top: "-100px"
                    });
                    if (t.blockUI) {
                        t.unblockUI();
                        t("body").append(this.dpDiv)
                    }
                };
                this._inDialog = !1
            }
        },
        _tidyDialog: function(t) {
            t.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")
        },
        _checkExternalClick: function(e) {
            if (!t.datepicker._curInst) {
                return
            };
            var i = t(e.target),
                s = t.datepicker._getInst(i[0]);
            if (((i[0].id !== t.datepicker._mainDivId && i.parents("#" + t.datepicker._mainDivId).length === 0 && !i.hasClass(t.datepicker.markerClassName) && !i.closest("." + t.datepicker._triggerClass).length && t.datepicker._datepickerShowing && !(t.datepicker._inDialog && t.blockUI))) || (i.hasClass(t.datepicker.markerClassName) && t.datepicker._curInst !== s)) {
                t.datepicker._hideDatepicker()
            }
        },
        _adjustDate: function(e, i, s) {
            var o = t(e),
                n = this._getInst(o[0]);
            if (this._isDisabledDatepicker(o[0])) {
                return
            };
            this._adjustInstDate(n, i + (s === "M" ? this._get(n, "showCurrentAtPos") : 0), s);
            this._updateDatepicker(n)
        },
        _gotoToday: function(e) {
            var s, n = t(e),
                i = this._getInst(n[0]);
            if (this._get(i, "gotoCurrent") && i.currentDay) {
                i.selectedDay = i.currentDay;
                i.drawMonth = i.selectedMonth = i.currentMonth;
                i.drawYear = i.selectedYear = i.currentYear
            } else {
                s = new Date();
                i.selectedDay = s.getDate();
                i.drawMonth = i.selectedMonth = s.getMonth();
                i.drawYear = i.selectedYear = s.getFullYear()
            };
            this._notifyChange(i);
            this._adjustDate(n)
        },
        _selectMonthYear: function(e, i, s) {
            var o = t(e),
                n = this._getInst(o[0]);
            n["selected" + (s === "M" ? "Month" : "Year")] = n["draw" + (s === "M" ? "Month" : "Year")] = parseInt(i.options[i.selectedIndex].value, 10);
            this._notifyChange(n);
            this._adjustDate(o)
        },
        _selectDay: function(e, i, s, n) {
            var o, a = t(e);
            if (t(n).hasClass(this._unselectableClass) || this._isDisabledDatepicker(a[0])) {
                return
            };
            o = this._getInst(a[0]);
            o.selectedDay = o.currentDay = t("a", n).html();
            o.selectedMonth = o.currentMonth = i;
            o.selectedYear = o.currentYear = s;
            this._selectDate(e, this._formatDate(o, o.currentDay, o.currentMonth, o.currentYear))
        },
        _clearDate: function(e) {
            var i = t(e);
            this._selectDate(i, "")
        },
        _selectDate: function(e, i) {
            var n, o = t(e),
                s = this._getInst(o[0]);
            i = (i != null ? i : this._formatDate(s));
            if (s.input) {
                s.input.val(i)
            };
            this._updateAlternate(s);
            n = this._get(s, "onSelect");
            if (n) {
                n.apply((s.input ? s.input[0] : null), [i, s])
            } else if (s.input) {
                s.input.trigger("change")
            };
            if (s.inline) {
                this._updateDatepicker(s)
            } else {
                this._hideDatepicker();
                this._lastInput = s.input[0];
                if (typeof(s.input[0]) !== "object") {
                    s.input.focus()
                };
                this._lastInput = null
            }
        },
        _updateAlternate: function(e) {
            var i, s, n, o = this._get(e, "altField");
            if (o) {
                i = this._get(e, "altFormat") || this._get(e, "dateFormat");
                s = this._getDate(e);
                n = this.formatDate(i, s, this._getFormatConfig(e));
                t(o).each(function() {
                    t(this).val(n)
                })
            }
        },
        noWeekends: function(t) {
            var e = t.getDay();
            return [(e > 0 && e < 6), ""]
        },
        iso8601Week: function(t) {
            var i, e = new Date(t.getTime());
            e.setDate(e.getDate() + 4 - (e.getDay() || 7));
            i = e.getTime();
            e.setMonth(0);
            e.setDate(1);
            return Math.floor(Math.round((i - e) / 86400000) / 7) + 1
        },
        parseDate: function(e, i, s) {
            if (e == null || i == null) {
                throw "Invalid arguments"
            };
            i = (typeof i === "object" ? i.toString() : i + "");
            if (i === "") {
                return null
            };
            var r, f, d, o = 0,
                p = (s ? s.shortYearCutoff : null) || this._defaults.shortYearCutoff,
                y = (typeof p !== "string" ? p : new Date().getFullYear() % 100 + parseInt(p, 10)),
                w = (s ? s.dayNamesShort : null) || this._defaults.dayNamesShort,
                k = (s ? s.dayNames : null) || this._defaults.dayNames,
                x = (s ? s.monthNamesShort : null) || this._defaults.monthNamesShort,
                D = (s ? s.monthNames : null) || this._defaults.monthNames,
                a = -1,
                l = -1,
                h = -1,
                g = -1,
                m = !1,
                n, c = function(t) {
                    var i = (r + 1 < e.length && e.charAt(r + 1) === t);
                    if (i) {
                        r++
                    };
                    return i
                },
                u = function(t) {
                    var s = c(t),
                        n = (t === "@" ? 14 : (t === "!" ? 20 : (t === "y" && s ? 4 : (t === "o" ? 3 : 2)))),
                        a = new RegExp("^\\d{1," + n + "}"),
                        e = i.substring(o).match(a);
                    if (!e) {
                        throw "Missing number at position " + o
                    };
                    o += e[0].length;
                    return parseInt(e[0], 10)
                },
                b = function(e, s, n) {
                    var a = -1,
                        r = t.map(c(e) ? n : s, function(t, e) {
                            return [
                                [e, t]
                            ]
                        }).sort(function(t, e) {
                            return -(t[1].length - e[1].length)
                        });
                    t.each(r, function(t, e) {
                        var s = e[1];
                        if (i.substr(o, s.length).toLowerCase() === s.toLowerCase()) {
                            a = e[0];
                            o += s.length;
                            return !1
                        }
                    });
                    if (a !== -1) {
                        return a + 1
                    } else {
                        throw "Unknown name at position " + o
                    }
                },
                v = function() {
                    if (i.charAt(o) !== e.charAt(r)) {
                        throw "Unexpected literal at position " + o
                    };
                    o++
                };
            for (r = 0; r < e.length; r++) {
                if (m) {
                    if (e.charAt(r) === "'" && !c("'")) {
                        m = !1
                    } else {
                        v()
                    }
                } else {
                    switch (e.charAt(r)) {
                        case "d":
                            h = u("d");
                            break;
                        case "D":
                            b("D", w, k);
                            break;
                        case "o":
                            g = u("o");
                            break;
                        case "m":
                            l = u("m");
                            break;
                        case "M":
                            l = b("M", x, D);
                            break;
                        case "y":
                            a = u("y");
                            break;
                        case "@":
                            n = new Date(u("@"));
                            a = n.getFullYear();
                            l = n.getMonth() + 1;
                            h = n.getDate();
                            break;
                        case "!":
                            n = new Date((u("!") - this._ticksTo1970) / 10000);
                            a = n.getFullYear();
                            l = n.getMonth() + 1;
                            h = n.getDate();
                            break;
                        case "'":
                            if (c("'")) {
                                v()
                            } else {
                                m = !0
                            };
                            break;
                        default:
                            v()
                    }
                }
            };
            if (o < i.length) {
                d = i.substr(o);
                if (!/^\s+/.test(d)) {
                    throw "Extra/unparsed characters found in date: " + d
                }
            };
            if (a === -1) {
                a = new Date().getFullYear()
            } else if (a < 100) {
                a += new Date().getFullYear() - new Date().getFullYear() % 100 + (a <= y ? 0 : -100)
            };
            if (g > -1) {
                l = 1;
                h = g;
                do {
                    f = this._getDaysInMonth(a, l - 1);
                    if (h <= f) {
                        break
                    };
                    l++;
                    h -= f
                }
                while (!0);
            };
            n = this._daylightSavingAdjust(new Date(a, l - 1, h));
            if (n.getFullYear() !== a || n.getMonth() + 1 !== l || n.getDate() !== h) {
                throw "Invalid date"
            };
            return n
        },
        ATOM: "yy-mm-dd",
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y",
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd",
        _ticksTo1970: (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000),
        formatDate: function(t, e, i) {
            if (!e) {
                return ""
            };
            var n, h = (i ? i.dayNamesShort : null) || this._defaults.dayNamesShort,
                u = (i ? i.dayNames : null) || this._defaults.dayNames,
                c = (i ? i.monthNamesShort : null) || this._defaults.monthNamesShort,
                f = (i ? i.monthNames : null) || this._defaults.monthNames,
                o = function(e) {
                    var i = (n + 1 < t.length && t.charAt(n + 1) === e);
                    if (i) {
                        n++
                    };
                    return i
                },
                a = function(t, e, i) {
                    var s = "" + e;
                    if (o(t)) {
                        while (s.length < i) {
                            s = "0" + s
                        }
                    };
                    return s
                },
                l = function(t, e, i, s) {
                    return (o(t) ? s[e] : i[e])
                },
                s = "",
                r = !1;
            if (e) {
                for (n = 0; n < t.length; n++) {
                    if (r) {
                        if (t.charAt(n) === "'" && !o("'")) {
                            r = !1
                        } else {
                            s += t.charAt(n)
                        }
                    } else {
                        switch (t.charAt(n)) {
                            case "d":
                                s += a("d", e.getDate(), 2);
                                break;
                            case "D":
                                s += l("D", e.getDay(), h, u);
                                break;
                            case "o":
                                s += a("o", Math.round((new Date(e.getFullYear(), e.getMonth(), e.getDate()).getTime() - new Date(e.getFullYear(), 0, 0).getTime()) / 86400000), 3);
                                break;
                            case "m":
                                s += a("m", e.getMonth() + 1, 2);
                                break;
                            case "M":
                                s += l("M", e.getMonth(), c, f);
                                break;
                            case "y":
                                s += (o("y") ? e.getFullYear() : (e.getYear() % 100 < 10 ? "0" : "") + e.getYear() % 100);
                                break;
                            case "@":
                                s += e.getTime();
                                break;
                            case "!":
                                s += e.getTime() * 10000 + this._ticksTo1970;
                                break;
                            case "'":
                                if (o("'")) {
                                    s += "'"
                                } else {
                                    r = !0
                                };
                                break;
                            default:
                                s += t.charAt(n)
                        }
                    }
                }
            };
            return s
        },
        _possibleChars: function(t) {
            var e, i = "",
                s = !1,
                n = function(i) {
                    var s = (e + 1 < t.length && t.charAt(e + 1) === i);
                    if (s) {
                        e++
                    };
                    return s
                };
            for (e = 0; e < t.length; e++) {
                if (s) {
                    if (t.charAt(e) === "'" && !n("'")) {
                        s = !1
                    } else {
                        i += t.charAt(e)
                    }
                } else {
                    switch (t.charAt(e)) {
                        case "d":
                        case "m":
                        case "y":
                        case "@":
                            i += "0123456789";
                            break;
                        case "D":
                        case "M":
                            return null;
                        case "'":
                            if (n("'")) {
                                i += "'"
                            } else {
                                s = !0
                            };
                            break;
                        default:
                            i += t.charAt(e)
                    }
                }
            };
            return i
        },
        _get: function(t, i) {
            return t.settings[i] !== e ? t.settings[i] : this._defaults[i]
        },
        _setDateFromField: function(t, e) {
            if (t.input.val() === t.lastVal) {
                return
            };
            var a = this._get(t, "dateFormat"),
                n = t.lastVal = t.input ? t.input.val() : null,
                o = this._getDefaultDate(t),
                i = o,
                r = this._getFormatConfig(t);
            try {
                i = this.parseDate(a, n, r) || o
            } catch (s) {
                n = (e ? "" : n)
            };
            t.selectedDay = i.getDate();
            t.drawMonth = t.selectedMonth = i.getMonth();
            t.drawYear = t.selectedYear = i.getFullYear();
            t.currentDay = (n ? i.getDate() : 0);
            t.currentMonth = (n ? i.getMonth() : 0);
            t.currentYear = (n ? i.getFullYear() : 0);
            this._adjustInstDate(t)
        },
        _getDefaultDate: function(t) {
            return this._restrictMinMax(t, this._determineDate(t, this._get(t, "defaultDate"), new Date()))
        },
        _determineDate: function(e, i, s) {
            var o = function(t) {
                    var e = new Date();
                    e.setDate(e.getDate() + t);
                    return e
                },
                a = function(i) {
                    try {
                        return t.datepicker.parseDate(t.datepicker._get(e, "dateFormat"), i, t.datepicker._getFormatConfig(e))
                    } catch (o) {};
                    var l = (i.toLowerCase().match(/^c/) ? t.datepicker._getDate(e) : null) || new Date(),
                        a = l.getFullYear(),
                        r = l.getMonth(),
                        s = l.getDate(),
                        h = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
                        n = h.exec(i);
                    while (n) {
                        switch (n[2] || "d") {
                            case "d":
                            case "D":
                                s += parseInt(n[1], 10);
                                break;
                            case "w":
                            case "W":
                                s += parseInt(n[1], 10) * 7;
                                break;
                            case "m":
                            case "M":
                                r += parseInt(n[1], 10);
                                s = Math.min(s, t.datepicker._getDaysInMonth(a, r));
                                break;
                            case "y":
                            case "Y":
                                a += parseInt(n[1], 10);
                                s = Math.min(s, t.datepicker._getDaysInMonth(a, r));
                                break
                        };
                        n = h.exec(i)
                    };
                    return new Date(a, r, s)
                },
                n = (i == null || i === "" ? s : (typeof i === "string" ? a(i) : (typeof i === "number" ? (isNaN(i) ? s : o(i)) : new Date(i.getTime()))));
            n = (n && n.toString() === "Invalid Date" ? s : n);
            if (n) {
                n.setHours(0);
                n.setMinutes(0);
                n.setSeconds(0);
                n.setMilliseconds(0)
            };
            return this._daylightSavingAdjust(n)
        },
        _daylightSavingAdjust: function(t) {
            if (!t) {
                return null
            };
            t.setHours(t.getHours() > 12 ? t.getHours() + 2 : 0);
            return t
        },
        _setDate: function(t, e, i) {
            var n = !e,
                o = t.selectedMonth,
                a = t.selectedYear,
                s = this._restrictMinMax(t, this._determineDate(t, e, new Date()));
            t.selectedDay = t.currentDay = s.getDate();
            t.drawMonth = t.selectedMonth = t.currentMonth = s.getMonth();
            t.drawYear = t.selectedYear = t.currentYear = s.getFullYear();
            if ((o !== t.selectedMonth || a !== t.selectedYear) && !i) {
                this._notifyChange(t)
            };
            this._adjustInstDate(t);
            if (t.input) {
                t.input.val(n ? "" : this._formatDate(t))
            }
        },
        _getDate: function(t) {
            var e = (!t.currentYear || (t.input && t.input.val() === "") ? null : this._daylightSavingAdjust(new Date(t.currentYear, t.currentMonth, t.currentDay)));
            return e
        },
        _attachHandlers: function(e) {
            var s = this._get(e, "stepMonths"),
                i = "#" + e.id.replace(/\\\\/g, "\\");
            e.dpDiv.find("[data-handler]").map(function() {
                var e = {
                    prev: function() {
                        t.datepicker._adjustDate(i, -s, "M")
                    },
                    next: function() {
                        t.datepicker._adjustDate(i, +s, "M")
                    },
                    hide: function() {
                        t.datepicker._hideDatepicker()
                    },
                    today: function() {
                        t.datepicker._gotoToday(i)
                    },
                    selectDay: function() {
                        t.datepicker._selectDay(i, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this);
                        return !1
                    },
                    selectMonth: function() {
                        t.datepicker._selectMonthYear(i, this, "M");
                        return !1
                    },
                    selectYear: function() {
                        t.datepicker._selectMonthYear(i, this, "Y");
                        return !1
                    }
                };
                t(this).bind(this.getAttribute("data-event"), e[this.getAttribute("data-handler")])
            })
        },
        _generateHTML: function(t) {
            var v, l, C, h, I, b, P, T, q, u, M, V, Q, X, G, S, w, J, z, k, o, p, A, g, H, c, n, W, E, N, O, x, F, i, R, L, y, f, D, j = new Date(),
                Y = this._daylightSavingAdjust(new Date(j.getFullYear(), j.getMonth(), j.getDate())),
                a = this._get(t, "isRTL"),
                et = this._get(t, "showButtonPanel"),
                Z = this._get(t, "hideIfNoPrevNext"),
                B = this._get(t, "navigationAsDateFormat"),
                r = this._getNumberOfMonths(t),
                it = this._get(t, "showCurrentAtPos"),
                tt = this._get(t, "stepMonths"),
                K = (r[0] !== 1 || r[1] !== 1),
                U = this._daylightSavingAdjust((!t.currentDay ? new Date(9999, 9, 9) : new Date(t.currentYear, t.currentMonth, t.currentDay))),
                m = this._getMinMaxDate(t, "min"),
                d = this._getMinMaxDate(t, "max"),
                e = t.drawMonth - it,
                s = t.drawYear;
            if (e < 0) {
                e += 12;
                s--
            };
            if (d) {
                v = this._daylightSavingAdjust(new Date(d.getFullYear(), d.getMonth() - (r[0] * r[1]) + 1, d.getDate()));
                v = (m && v < m ? m : v);
                while (this._daylightSavingAdjust(new Date(s, e, 1)) > v) {
                    e--;
                    if (e < 0) {
                        e = 11;
                        s--
                    }
                }
            };
            t.drawMonth = e;
            t.drawYear = s;
            l = this._get(t, "prevText");
            l = (!B ? l : this.formatDate(l, this._daylightSavingAdjust(new Date(s, e - tt, 1)), this._getFormatConfig(t)));
            C = (this._canAdjustMonth(t, -1, s, e) ? "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='" + l + "'><span class='ui-icon ui-icon-circle-triangle-" + (a ? "e" : "w") + "'>" + l + "</span></a>" : (Z ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" + l + "'><span class='ui-icon ui-icon-circle-triangle-" + (a ? "e" : "w") + "'>" + l + "</span></a>"));
            h = this._get(t, "nextText");
            h = (!B ? h : this.formatDate(h, this._daylightSavingAdjust(new Date(s, e + tt, 1)), this._getFormatConfig(t)));
            I = (this._canAdjustMonth(t, +1, s, e) ? "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='" + h + "'><span class='ui-icon ui-icon-circle-triangle-" + (a ? "w" : "e") + "'>" + h + "</span></a>" : (Z ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" + h + "'><span class='ui-icon ui-icon-circle-triangle-" + (a ? "w" : "e") + "'>" + h + "</span></a>"));
            b = this._get(t, "currentText");
            P = (this._get(t, "gotoCurrent") && t.currentDay ? U : Y);
            b = (!B ? b : this.formatDate(b, P, this._getFormatConfig(t)));
            T = (!t.inline ? "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" + this._get(t, "closeText") + "</button>" : "");
            q = (et) ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + (a ? T : "") + (this._isInRange(t, P) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>" + b + "</button>" : "") + (a ? "" : T) + "</div>" : "";
            u = parseInt(this._get(t, "firstDay"), 10);
            u = (isNaN(u) ? 0 : u);
            M = this._get(t, "showWeek");
            V = this._get(t, "dayNames");
            Q = this._get(t, "dayNamesMin");
            X = this._get(t, "monthNames");
            G = this._get(t, "monthNamesShort");
            S = this._get(t, "beforeShowDay");
            w = this._get(t, "showOtherMonths");
            J = this._get(t, "selectOtherMonths");
            z = this._getDefaultDate(t);
            k = "";
            o;
            for (p = 0; p < r[0]; p++) {
                A = "";
                this.maxRows = 4;
                for (g = 0; g < r[1]; g++) {
                    H = this._daylightSavingAdjust(new Date(s, e, t.selectedDay));
                    c = " ui-corner-all";
                    n = "";
                    if (K) {
                        n += "<div class='ui-datepicker-group";
                        if (r[1] > 1) {
                            switch (g) {
                                case 0:
                                    n += " ui-datepicker-group-first";
                                    c = " ui-corner-" + (a ? "right" : "left");
                                    break;
                                case r[1] - 1:
                                    n += " ui-datepicker-group-last";
                                    c = " ui-corner-" + (a ? "left" : "right");
                                    break;
                                default:
                                    n += " ui-datepicker-group-middle";
                                    c = "";
                                    break
                            }
                        };
                        n += "'>"
                    };
                    n += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + c + "'>" + (/all|left/.test(c) && p === 0 ? (a ? I : C) : "") + (/all|right/.test(c) && p === 0 ? (a ? C : I) : "") + this._generateMonthYearHeader(t, e, s, m, d, p > 0 || g > 0, X, G) + "</div><table class='ui-datepicker-calendar'><thead><tr>";
                    W = (M ? "<th class='ui-datepicker-week-col'>" + this._get(t, "weekHeader") + "</th>" : "");
                    for (o = 0; o < 7; o++) {
                        E = (o + u) % 7;
                        W += "<th" + ((o + u + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + "><span title='" + V[E] + "'>" + Q[E] + "</span></th>"
                    };
                    n += W + "</tr></thead><tbody>";
                    N = this._getDaysInMonth(s, e);
                    if (s === t.selectedYear && e === t.selectedMonth) {
                        t.selectedDay = Math.min(t.selectedDay, N)
                    };
                    O = (this._getFirstDayOfMonth(s, e) - u + 7) % 7;
                    x = Math.ceil((O + N) / 7);
                    F = (K ? this.maxRows > x ? this.maxRows : x : x);
                    this.maxRows = F;
                    i = this._daylightSavingAdjust(new Date(s, e, 1 - O));
                    for (R = 0; R < F; R++) {
                        n += "<tr>";
                        L = (!M ? "" : "<td class='ui-datepicker-week-col'>" + this._get(t, "calculateWeek")(i) + "</td>");
                        for (o = 0; o < 7; o++) {
                            y = (S ? S.apply((t.input ? t.input[0] : null), [i]) : [!0, ""]);
                            f = (i.getMonth() !== e);
                            D = (f && !J) || !y[0] || (m && i < m) || (d && i > d);
                            L += "<td class='" + ((o + u + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (f ? " ui-datepicker-other-month" : "") + ((i.getTime() === H.getTime() && e === t.selectedMonth && t._keyEvent) || (z.getTime() === i.getTime() && z.getTime() === H.getTime()) ? " " + this._dayOverClass : "") + (D ? " " + this._unselectableClass + " ui-state-disabled" : "") + (f && !w ? "" : " " + y[1] + (i.getTime() === U.getTime() ? " " + this._currentClass : "") + (i.getTime() === Y.getTime() ? " ui-datepicker-today" : "")) + "'" + ((!f || w) && y[2] ? " title='" + y[2].replace(/'/g, "&#39;") + "'" : "") + (D ? "" : " data-handler='selectDay' data-event='click' data-month='" + i.getMonth() + "' data-year='" + i.getFullYear() + "'") + ">" + (f && !w ? "&#xa0;" : (D ? "<span class='ui-state-default'>" + i.getDate() + "</span>" : "<a class='ui-state-default" + (i.getTime() === Y.getTime() ? " ui-state-highlight" : "") + (i.getTime() === U.getTime() ? " ui-state-active" : "") + (f ? " ui-priority-secondary" : "") + "' href='#'>" + i.getDate() + "</a>")) + "</td>";
                            i.setDate(i.getDate() + 1);
                            i = this._daylightSavingAdjust(i)
                        };
                        n += L + "</tr>"
                    };
                    e++;
                    if (e > 11) {
                        e = 0;
                        s++
                    };
                    n += "</tbody></table>" + (K ? "</div>" + ((r[0] > 0 && g === r[1] - 1) ? "<div class='ui-datepicker-row-break'></div>" : "") : "");
                    A += n
                };
                k += A
            };
            k += q;
            t._keyEvent = !1;
            return k
        },
        _generateMonthYearHeader: function(t, e, i, s, o, u, y, w) {
            var m, v, a, c, f, d, n, h, p = this._get(t, "changeMonth"),
                g = this._get(t, "changeYear"),
                b = this._get(t, "showMonthAfterYear"),
                r = "<div class='ui-datepicker-title'>",
                l = "";
            if (u || !p) {
                l += "<span class='ui-datepicker-month'>" + y[e] + "</span>"
            } else {
                m = (s && s.getFullYear() === i);
                v = (o && o.getFullYear() === i);
                l += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>";
                for (a = 0; a < 12; a++) {
                    if ((!m || a >= s.getMonth()) && (!v || a <= o.getMonth())) {
                        l += "<option value='" + a + "'" + (a === e ? " selected='selected'" : "") + ">" + w[a] + "</option>"
                    }
                };
                l += "</select>"
            };
            if (!b) {
                r += l + (u || !(p && g) ? "&#xa0;" : "")
            };
            if (!t.yearshtml) {
                t.yearshtml = "";
                if (u || !g) {
                    r += "<span class='ui-datepicker-year'>" + i + "</span>"
                } else {
                    c = this._get(t, "yearRange").split(":");
                    f = new Date().getFullYear();
                    d = function(t) {
                        var e = (t.match(/c[+\-].*/) ? i + parseInt(t.substring(1), 10) : (t.match(/[+\-].*/) ? f + parseInt(t, 10) : parseInt(t, 10)));
                        return (isNaN(e) ? f : e)
                    };
                    n = d(c[0]);
                    h = Math.max(n, d(c[1] || ""));
                    n = (s ? Math.max(n, s.getFullYear()) : n);
                    h = (o ? Math.min(h, o.getFullYear()) : h);
                    t.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";
                    for (; n <= h; n++) {
                        t.yearshtml += "<option value='" + n + "'" + (n === i ? " selected='selected'" : "") + ">" + n + "</option>"
                    };
                    t.yearshtml += "</select>";
                    r += t.yearshtml;
                    t.yearshtml = null
                }
            };
            r += this._get(t, "yearSuffix");
            if (b) {
                r += (u || !(p && g) ? "&#xa0;" : "") + l
            };
            r += "</div>";
            return r
        },
        _adjustInstDate: function(t, e, i) {
            var n = t.drawYear + (i === "Y" ? e : 0),
                o = t.drawMonth + (i === "M" ? e : 0),
                a = Math.min(t.selectedDay, this._getDaysInMonth(n, o)) + (i === "D" ? e : 0),
                s = this._restrictMinMax(t, this._daylightSavingAdjust(new Date(n, o, a)));
            t.selectedDay = s.getDate();
            t.drawMonth = t.selectedMonth = s.getMonth();
            t.drawYear = t.selectedYear = s.getFullYear();
            if (i === "M" || i === "Y") {
                this._notifyChange(t)
            }
        },
        _restrictMinMax: function(t, e) {
            var i = this._getMinMaxDate(t, "min"),
                s = this._getMinMaxDate(t, "max"),
                n = (i && e < i ? i : e);
            return (s && n > s ? s : n)
        },
        _notifyChange: function(t) {
            var e = this._get(t, "onChangeMonthYear");
            if (e) {
                e.apply((t.input ? t.input[0] : null), [t.selectedYear, t.selectedMonth + 1, t])
            }
        },
        _getNumberOfMonths: function(t) {
            var e = this._get(t, "numberOfMonths");
            return (e == null ? [1, 1] : (typeof e === "number" ? [1, e] : e))
        },
        _getMinMaxDate: function(t, e) {
            return this._determineDate(t, this._get(t, e + "Date"), null)
        },
        _getDaysInMonth: function(t, e) {
            return 32 - this._daylightSavingAdjust(new Date(t, e, 32)).getDate()
        },
        _getFirstDayOfMonth: function(t, e) {
            return new Date(t, e, 1).getDay()
        },
        _canAdjustMonth: function(t, e, i, s) {
            var o = this._getNumberOfMonths(t),
                n = this._daylightSavingAdjust(new Date(i, s + (e < 0 ? e : o[0] * o[1]), 1));
            if (e < 0) {
                n.setDate(this._getDaysInMonth(n.getFullYear(), n.getMonth()))
            };
            return this._isInRange(t, n)
        },
        _isInRange: function(t, e) {
            var i, o, a = this._getMinMaxDate(t, "min"),
                r = this._getMinMaxDate(t, "max"),
                s = null,
                n = null,
                l = this._get(t, "yearRange");
            if (l) {
                i = l.split(":");
                o = new Date().getFullYear();
                s = parseInt(i[0], 10);
                n = parseInt(i[1], 10);
                if (i[0].match(/[+\-].*/)) {
                    s += o
                };
                if (i[1].match(/[+\-].*/)) {
                    n += o
                }
            };
            return ((!a || e.getTime() >= a.getTime()) && (!r || e.getTime() <= r.getTime()) && (!s || e.getFullYear() >= s) && (!n || e.getFullYear() <= n))
        },
        _getFormatConfig: function(t) {
            var e = this._get(t, "shortYearCutoff");
            e = (typeof e !== "string" ? e : new Date().getFullYear() % 100 + parseInt(e, 10));
            return {
                shortYearCutoff: e,
                dayNamesShort: this._get(t, "dayNamesShort"),
                dayNames: this._get(t, "dayNames"),
                monthNamesShort: this._get(t, "monthNamesShort"),
                monthNames: this._get(t, "monthNames")
            }
        },
        _formatDate: function(t, e, i, s) {
            if (!e) {
                t.currentDay = t.selectedDay;
                t.currentMonth = t.selectedMonth;
                t.currentYear = t.selectedYear
            };
            var n = (e ? (typeof e === "object" ? e : this._daylightSavingAdjust(new Date(s, i, e))) : this._daylightSavingAdjust(new Date(t.currentYear, t.currentMonth, t.currentDay)));
            return this.formatDate(this._get(t, "dateFormat"), n, this._getFormatConfig(t))
        }
    });

    function a(e) {
        var i = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return e.delegate(i, "mouseout", function() {
            t(this).removeClass("ui-state-hover");
            if (this.className.indexOf("ui-datepicker-prev") !== -1) {
                t(this).removeClass("ui-datepicker-prev-hover")
            };
            if (this.className.indexOf("ui-datepicker-next") !== -1) {
                t(this).removeClass("ui-datepicker-next-hover")
            }
        }).delegate(i, "mouseover", function() {
            if (!t.datepicker._isDisabledDatepicker(n.inline ? e.parent()[0] : n.input[0])) {
                t(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
                t(this).addClass("ui-state-hover");
                if (this.className.indexOf("ui-datepicker-prev") !== -1) {
                    t(this).addClass("ui-datepicker-prev-hover")
                };
                if (this.className.indexOf("ui-datepicker-next") !== -1) {
                    t(this).addClass("ui-datepicker-next-hover")
                }
            }
        })
    };

    function s(e, i) {
        t.extend(e, i);
        for (var s in i) {
            if (i[s] == null) {
                e[s] = i[s]
            }
        };
        return e
    };
    t.fn.datepicker = function(e) {
        if (!this.length) {
            return this
        };
        if (!t.datepicker.initialized) {
            t(document).mousedown(t.datepicker._checkExternalClick);
            t.datepicker.initialized = !0
        };
        if (t("#" + t.datepicker._mainDivId).length === 0) {
            t("body").append(t.datepicker.dpDiv)
        };
        var i = Array.prototype.slice.call(arguments, 1);
        if (typeof e === "string" && (e === "isDisabled" || e === "getDate" || e === "widget")) {
            return t.datepicker["_" + e + "Datepicker"].apply(t.datepicker, [this[0]].concat(i))
        };
        if (e === "option" && arguments.length === 2 && typeof arguments[1] === "string") {
            return t.datepicker["_" + e + "Datepicker"].apply(t.datepicker, [this[0]].concat(i))
        };
        return this.each(function() {
            typeof e === "string" ? t.datepicker["_" + e + "Datepicker"].apply(t.datepicker, [this].concat(i)) : t.datepicker._attachDatepicker(this, e)
        })
    };
    t.datepicker = new o();
    t.datepicker.initialized = !1;
    t.datepicker.uuid = new Date().getTime();
    t.datepicker.version = "1.10.3"
})(jQuery);
(function(t, e) {
    var i = {
            buttons: !0,
            height: !0,
            maxHeight: !0,
            maxWidth: !0,
            minHeight: !0,
            minWidth: !0,
            width: !0
        },
        s = {
            maxHeight: !0,
            maxWidth: !0,
            minHeight: !0,
            minWidth: !0
        };
    t.widget("ui.dialog", {
        version: "1.10.3",
        options: {
            appendTo: "body",
            autoOpen: !0,
            buttons: [],
            closeOnEscape: !0,
            closeText: "close",
            dialogClass: "",
            draggable: !0,
            hide: null,
            height: "auto",
            maxHeight: null,
            maxWidth: null,
            minHeight: 150,
            minWidth: 150,
            modal: !1,
            position: {
                my: "center",
                at: "center",
                of: window,
                collision: "fit",
                using: function(e) {
                    var i = t(this).css(e).offset().top;
                    if (i < 0) {
                        t(this).css("top", e.top - i)
                    }
                }
            },
            resizable: !0,
            show: null,
            title: null,
            width: 300,
            beforeClose: null,
            close: null,
            drag: null,
            dragStart: null,
            dragStop: null,
            focus: null,
            open: null,
            resize: null,
            resizeStart: null,
            resizeStop: null
        },
        _create: function() {
            this.originalCss = {
                display: this.element[0].style.display,
                width: this.element[0].style.width,
                minHeight: this.element[0].style.minHeight,
                maxHeight: this.element[0].style.maxHeight,
                height: this.element[0].style.height
            };
            this.originalPosition = {
                parent: this.element.parent(),
                index: this.element.parent().children().index(this.element)
            };
            this.originalTitle = this.element.attr("title");
            this.options.title = this.options.title || this.originalTitle;
            this._createWrapper();
            this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(this.uiDialog);
            this._createTitlebar();
            this._createButtonPane();
            if (this.options.draggable && t.fn.draggable) {
                this._makeDraggable()
            };
            if (this.options.resizable && t.fn.resizable) {
                this._makeResizable()
            };
            this._isOpen = !1
        },
        _init: function() {
            if (this.options.autoOpen) {
                this.open()
            }
        },
        _appendTo: function() {
            var e = this.options.appendTo;
            if (e && (e.jquery || e.nodeType)) {
                return t(e)
            };
            return this.document.find(e || "body").eq(0)
        },
        _destroy: function() {
            var t, e = this.originalPosition;
            this._destroyOverlay();
            this.element.removeUniqueId().removeClass("ui-dialog-content ui-widget-content").css(this.originalCss).detach();
            this.uiDialog.stop(!0, !0).remove();
            if (this.originalTitle) {
                this.element.attr("title", this.originalTitle)
            };
            t = e.parent.children().eq(e.index);
            if (t.length && t[0] !== this.element[0]) {
                t.before(this.element)
            } else {
                e.parent.append(this.element)
            }
        },
        widget: function() {
            return this.uiDialog
        },
        disable: t.noop,
        enable: t.noop,
        close: function(e) {
            var i = this;
            if (!this._isOpen || this._trigger("beforeClose", e) === !1) {
                return
            };
            this._isOpen = !1;
            this._destroyOverlay();
            if (!this.opener.filter(":focusable").focus().length) {
                t(this.document[0].activeElement).blur()
            };
            this._hide(this.uiDialog, this.options.hide, function() {
                i._trigger("close", e)
            })
        },
        isOpen: function() {
            return this._isOpen
        },
        moveToTop: function() {
            this._moveToTop()
        },
        _moveToTop: function(t, e) {
            var i = !!this.uiDialog.nextAll(":visible").insertBefore(this.uiDialog).length;
            if (i && !e) {
                this._trigger("focus", t)
            };
            return i
        },
        open: function() {
            var e = this;
            if (this._isOpen) {
                if (this._moveToTop()) {
                    this._focusTabbable()
                };
                return
            };
            this._isOpen = !0;
            this.opener = t(this.document[0].activeElement);
            this._size();
            this._position();
            this._createOverlay();
            this._moveToTop(null, !0);
            this._show(this.uiDialog, this.options.show, function() {
                e._focusTabbable();
                e._trigger("focus")
            });
            this._trigger("open")
        },
        _focusTabbable: function() {
            var t = this.element.find("[autofocus]");
            if (!t.length) {
                t = this.element.find(":tabbable")
            };
            if (!t.length) {
                t = this.uiDialogButtonPane.find(":tabbable")
            };
            if (!t.length) {
                t = this.uiDialogTitlebarClose.filter(":tabbable")
            };
            if (!t.length) {
                t = this.uiDialog
            };
            t.eq(0).focus()
        },
        _keepFocus: function(e) {
            function i() {
                var e = this.document[0].activeElement,
                    i = this.uiDialog[0] === e || t.contains(this.uiDialog[0], e);
                if (!i) {
                    this._focusTabbable()
                }
            };
            e.preventDefault();
            i.call(this);
            this._delay(i)
        },
        _createWrapper: function() {
            this.uiDialog = t("<div>").addClass("ui-dialog ui-widget ui-widget-content ui-corner-all ui-front " + this.options.dialogClass).hide().attr({
                tabIndex: -1,
                role: "dialog"
            }).appendTo(this._appendTo());
            this._on(this.uiDialog, {
                keydown: function(e) {
                    if (this.options.closeOnEscape && !e.isDefaultPrevented() && e.keyCode && e.keyCode === t.ui.keyCode.ESCAPE) {
                        e.preventDefault();
                        this.close(e);
                        return
                    };
                    if (e.keyCode !== t.ui.keyCode.TAB) {
                        return
                    };
                    var i = this.uiDialog.find(":tabbable"),
                        s = i.filter(":first"),
                        n = i.filter(":last");
                    if ((e.target === n[0] || e.target === this.uiDialog[0]) && !e.shiftKey) {
                        s.focus(1);
                        e.preventDefault()
                    } else if ((e.target === s[0] || e.target === this.uiDialog[0]) && e.shiftKey) {
                        n.focus(1);
                        e.preventDefault()
                    }
                },
                mousedown: function(t) {
                    if (this._moveToTop(t)) {
                        this._focusTabbable()
                    }
                }
            });
            if (!this.element.find("[aria-describedby]").length) {
                this.uiDialog.attr({
                    "aria-describedby": this.element.uniqueId().attr("id")
                })
            }
        },
        _createTitlebar: function() {
            var e;
            this.uiDialogTitlebar = t("<div>").addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(this.uiDialog);
            this._on(this.uiDialogTitlebar, {
                mousedown: function(e) {
                    if (!t(e.target).closest(".ui-dialog-titlebar-close")) {
                        this.uiDialog.focus()
                    }
                }
            });
            this.uiDialogTitlebarClose = t("<button></button>").button({
                label: this.options.closeText,
                icons: {
                    primary: "ui-icon-closethick"
                },
                text: !1
            }).addClass("ui-dialog-titlebar-close").appendTo(this.uiDialogTitlebar);
            this._on(this.uiDialogTitlebarClose, {
                click: function(t) {
                    t.preventDefault();
                    this.close(t)
                }
            });
            e = t("<span>").uniqueId().addClass("ui-dialog-title").prependTo(this.uiDialogTitlebar);
            this._title(e);
            this.uiDialog.attr({
                "aria-labelledby": e.attr("id")
            })
        },
        _title: function(t) {
            if (!this.options.title) {
                t.html("&#160;")
            };
            t.text(this.options.title)
        },
        _createButtonPane: function() {
            this.uiDialogButtonPane = t("<div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix");
            this.uiButtonSet = t("<div>").addClass("ui-dialog-buttonset").appendTo(this.uiDialogButtonPane);
            this._createButtons()
        },
        _createButtons: function() {
            var i = this,
                e = this.options.buttons;
            this.uiDialogButtonPane.remove();
            this.uiButtonSet.empty();
            if (t.isEmptyObject(e) || (t.isArray(e) && !e.length)) {
                this.uiDialog.removeClass("ui-dialog-buttons");
                return
            };
            t.each(e, function(e, s) {
                var n, o;
                s = t.isFunction(s) ? {
                    click: s,
                    text: e
                } : s;
                s = t.extend({
                    type: "button"
                }, s);
                n = s.click;
                s.click = function() {
                    n.apply(i.element[0], arguments)
                };
                o = {
                    icons: s.icons,
                    text: s.showText
                };
                delete s.icons;
                delete s.showText;
                t("<button></button>", s).button(o).appendTo(i.uiButtonSet)
            });
            this.uiDialog.addClass("ui-dialog-buttons");
            this.uiDialogButtonPane.appendTo(this.uiDialog)
        },
        _makeDraggable: function() {
            var e = this,
                s = this.options;

            function i(t) {
                return {
                    position: t.position,
                    offset: t.offset
                }
            };
            this.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
                handle: ".ui-dialog-titlebar",
                containment: "document",
                start: function(s, n) {
                    t(this).addClass("ui-dialog-dragging");
                    e._blockFrames();
                    e._trigger("dragStart", s, i(n))
                },
                drag: function(t, s) {
                    e._trigger("drag", t, i(s))
                },
                stop: function(n, o) {
                    s.position = [o.position.left - e.document.scrollLeft(), o.position.top - e.document.scrollTop()];
                    t(this).removeClass("ui-dialog-dragging");
                    e._unblockFrames();
                    e._trigger("dragStop", n, i(o))
                }
            })
        },
        _makeResizable: function() {
            var i = this,
                e = this.options,
                n = e.resizable,
                o = this.uiDialog.css("position"),
                a = typeof n === "string" ? n : "n,e,s,w,se,sw,ne,nw";

            function s(t) {
                return {
                    originalPosition: t.originalPosition,
                    originalSize: t.originalSize,
                    position: t.position,
                    size: t.size
                }
            };
            this.uiDialog.resizable({
                cancel: ".ui-dialog-content",
                containment: "document",
                alsoResize: this.element,
                maxWidth: e.maxWidth,
                maxHeight: e.maxHeight,
                minWidth: e.minWidth,
                minHeight: this._minHeight(),
                handles: a,
                start: function(e, n) {
                    t(this).addClass("ui-dialog-resizing");
                    i._blockFrames();
                    i._trigger("resizeStart", e, s(n))
                },
                resize: function(t, e) {
                    i._trigger("resize", t, s(e))
                },
                stop: function(n, o) {
                    e.height = t(this).height();
                    e.width = t(this).width();
                    t(this).removeClass("ui-dialog-resizing");
                    i._unblockFrames();
                    i._trigger("resizeStop", n, s(o))
                }
            }).css("position", o)
        },
        _minHeight: function() {
            var t = this.options;
            return t.height === "auto" ? t.minHeight : Math.min(t.minHeight, t.height)
        },
        _position: function() {
            var t = this.uiDialog.is(":visible");
            if (!t) {
                this.uiDialog.show()
            };
            this.uiDialog.position(this.options.position);
            if (!t) {
                this.uiDialog.hide()
            }
        },
        _setOptions: function(e) {
            var a = this,
                n = !1,
                o = {};
            t.each(e, function(t, e) {
                a._setOption(t, e);
                if (t in i) {
                    n = !0
                };
                if (t in s) {
                    o[t] = e
                }
            });
            if (n) {
                this._size();
                this._position()
            };
            if (this.uiDialog.is(":data(ui-resizable)")) {
                this.uiDialog.resizable("option", o)
            }
        },
        _setOption: function(t, e) {
            var n, s, i = this.uiDialog;
            if (t === "dialogClass") {
                i.removeClass(this.options.dialogClass).addClass(e)
            };
            if (t === "disabled") {
                return
            };
            this._super(t, e);
            if (t === "appendTo") {
                this.uiDialog.appendTo(this._appendTo())
            };
            if (t === "buttons") {
                this._createButtons()
            };
            if (t === "closeText") {
                this.uiDialogTitlebarClose.button({
                    label: "" + e
                })
            };
            if (t === "draggable") {
                n = i.is(":data(ui-draggable)");
                if (n && !e) {
                    i.draggable("destroy")
                };
                if (!n && e) {
                    this._makeDraggable()
                }
            };
            if (t === "position") {
                this._position()
            };
            if (t === "resizable") {
                s = i.is(":data(ui-resizable)");
                if (s && !e) {
                    i.resizable("destroy")
                };
                if (s && typeof e === "string") {
                    i.resizable("option", "handles", e)
                };
                if (!s && e !== !1) {
                    this._makeResizable()
                }
            };
            if (t === "title") {
                this._title(this.uiDialogTitlebar.find(".ui-dialog-title"))
            }
        },
        _size: function() {
            var e, i, s, t = this.options;
            this.element.show().css({
                width: "auto",
                minHeight: 0,
                maxHeight: "none",
                height: 0
            });
            if (t.minWidth > t.width) {
                t.width = t.minWidth
            };
            e = this.uiDialog.css({
                height: "auto",
                width: t.width
            }).outerHeight();
            i = Math.max(0, t.minHeight - e);
            s = typeof t.maxHeight === "number" ? Math.max(0, t.maxHeight - e) : "none";
            if (t.height === "auto") {
                this.element.css({
                    minHeight: i,
                    maxHeight: s,
                    height: "auto"
                })
            } else {
                this.element.height(Math.max(0, t.height - e))
            };
            if (this.uiDialog.is(":data(ui-resizable)")) {
                this.uiDialog.resizable("option", "minHeight", this._minHeight())
            }
        },
        _blockFrames: function() {
            this.iframeBlocks = this.document.find("iframe").map(function() {
                var e = t(this);
                return t("<div>").css({
                    position: "absolute",
                    width: e.outerWidth(),
                    height: e.outerHeight()
                }).appendTo(e.parent()).offset(e.offset())[0]
            })
        },
        _unblockFrames: function() {
            if (this.iframeBlocks) {
                this.iframeBlocks.remove();
                delete this.iframeBlocks
            }
        },
        _allowInteraction: function(e) {
            if (t(e.target).closest(".ui-dialog").length) {
                return !0
            };
            return !!t(e.target).closest(".ui-datepicker").length
        },
        _createOverlay: function() {
            if (!this.options.modal) {
                return
            };
            var e = this,
                i = this.widgetFullName;
            if (!t.ui.dialog.overlayInstances) {
                this._delay(function() {
                    if (t.ui.dialog.overlayInstances) {
                        this.document.bind("focusin.dialog", function(s) {
                            if (!e._allowInteraction(s)) {
                                s.preventDefault();
                                t(".ui-dialog:visible:last .ui-dialog-content").data(i)._focusTabbable()
                            }
                        })
                    }
                })
            };
            this.overlay = t("<div>").addClass("ui-widget-overlay ui-front").appendTo(this._appendTo());
            this._on(this.overlay, {
                mousedown: "_keepFocus"
            });
            t.ui.dialog.overlayInstances++
        },
        _destroyOverlay: function() {
            if (!this.options.modal) {
                return
            };
            if (this.overlay) {
                t.ui.dialog.overlayInstances--;
                if (!t.ui.dialog.overlayInstances) {
                    this.document.unbind("focusin.dialog")
                };
                this.overlay.remove();
                this.overlay = null
            }
        }
    });
    t.ui.dialog.overlayInstances = 0;
    if (t.uiBackCompat !== !1) {
        t.widget("ui.dialog", t.ui.dialog, {
            _position: function() {
                var e = this.options.position,
                    i = [],
                    s = [0, 0],
                    n;
                if (e) {
                    if (typeof e === "string" || (typeof e === "object" && "0" in e)) {
                        i = e.split ? e.split(" ") : [e[0], e[1]];
                        if (i.length === 1) {
                            i[1] = i[0]
                        };
                        t.each(["left", "top"], function(t, e) {
                            if (+i[t] === i[t]) {
                                s[t] = i[t];
                                i[t] = e
                            }
                        });
                        e = {
                            my: i[0] + (s[0] < 0 ? s[0] : "+" + s[0]) + " " + i[1] + (s[1] < 0 ? s[1] : "+" + s[1]),
                            at: i.join(" ")
                        }
                    };
                    e = t.extend({}, t.ui.dialog.prototype.options.position, e)
                } else {
                    e = t.ui.dialog.prototype.options.position
                };
                n = this.uiDialog.is(":visible");
                if (!n) {
                    this.uiDialog.show()
                };
                this.uiDialog.position(e);
                if (!n) {
                    this.uiDialog.hide()
                }
            }
        })
    }
}(jQuery));
(function(t, e) {
    var i = /up|down|vertical/,
        s = /up|left|vertical|horizontal/;
    t.effects.effect.blind = function(e, n) {
        var o = t(this),
            u = ["position", "top", "bottom", "left", "right", "height", "width"],
            g = t.effects.setMode(o, e.mode || "hide"),
            m = e.direction || "up",
            r = i.test(m),
            c = r ? "height" : "width",
            f = r ? "top" : "left",
            v = s.test(m),
            d = {},
            p = g === "show",
            a, l, h;
        if (o.parent().is(".ui-effects-wrapper")) {
            t.effects.save(o.parent(), u)
        } else {
            t.effects.save(o, u)
        };
        o.show();
        a = t.effects.createWrapper(o).css({
            overflow: "hidden"
        });
        l = a[c]();
        h = parseFloat(a.css(f)) || 0;
        d[c] = p ? l : 0;
        if (!v) {
            o.css(r ? "bottom" : "right", 0).css(r ? "top" : "left", "auto").css({
                position: "absolute"
            });
            d[f] = p ? h : l + h
        };
        if (p) {
            a.css(c, 0);
            if (!v) {
                a.css(f, h + l)
            }
        };
        a.animate(d, {
            duration: e.duration,
            easing: e.easing,
            queue: !1,
            complete: function() {
                if (g === "hide") {
                    o.hide()
                };
                t.effects.restore(o, u);
                t.effects.removeWrapper(o);
                n()
            }
        })
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.bounce = function(e, i) {
        var s = t(this),
            d = ["position", "top", "bottom", "left", "right", "height", "width"],
            b = t.effects.setMode(s, e.mode || "effect"),
            o = b === "hide",
            p = b === "show",
            h = e.direction || "up",
            n = e.distance,
            g = e.times || 5,
            y = g * 2 + (p || o ? 1 : 0),
            u = e.duration / y,
            c = e.easing,
            a = (h === "up" || h === "down") ? "top" : "left",
            m = (h === "up" || h === "left"),
            v, r, l, f = s.queue(),
            w = f.length;
        if (p || o) {
            d.push("opacity")
        };
        t.effects.save(s, d);
        s.show();
        t.effects.createWrapper(s);
        if (!n) {
            n = s[a === "top" ? "outerHeight" : "outerWidth"]() / 3
        };
        if (p) {
            l = {
                opacity: 1
            };
            l[a] = 0;
            s.css("opacity", 0).css(a, m ? -n * 2 : n * 2).animate(l, u, c)
        };
        if (o) {
            n = n / Math.pow(2, g - 1)
        };
        l = {};
        l[a] = 0;
        for (v = 0; v < g; v++) {
            r = {};
            r[a] = (m ? "-=" : "+=") + n;
            s.animate(r, u, c).animate(l, u, c);
            n = o ? n * 2 : n / 2
        };
        if (o) {
            r = {
                opacity: 0
            };
            r[a] = (m ? "-=" : "+=") + n;
            s.animate(r, u, c)
        };
        s.queue(function() {
            if (o) {
                s.hide()
            };
            t.effects.restore(s, d);
            t.effects.removeWrapper(s);
            i()
        });
        if (w > 1) {
            f.splice.apply(f, [1, 0].concat(f.splice(w, y + 1)))
        };
        s.dequeue()
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.clip = function(e, i) {
        var s = t(this),
            h = ["position", "top", "bottom", "left", "right", "height", "width"],
            d = t.effects.setMode(s, e.mode || "hide"),
            o = d === "show",
            p = e.direction || "vertical",
            u = p === "vertical",
            r = u ? "height" : "width",
            c = u ? "top" : "left",
            l = {},
            f, n, a;
        t.effects.save(s, h);
        s.show();
        f = t.effects.createWrapper(s).css({
            overflow: "hidden"
        });
        n = (s[0].tagName === "IMG") ? f : s;
        a = n[r]();
        if (o) {
            n.css(r, 0);
            n.css(c, a / 2)
        };
        l[r] = o ? a : 0;
        l[c] = o ? 0 : a / 2;
        n.animate(l, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: function() {
                if (!o) {
                    s.hide()
                };
                t.effects.restore(s, h);
                t.effects.removeWrapper(s);
                i()
            }
        })
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.drop = function(e, i) {
        var s = t(this),
            h = ["position", "top", "bottom", "left", "right", "opacity", "height", "width"],
            u = t.effects.setMode(s, e.mode || "hide"),
            a = u === "show",
            n = e.direction || "left",
            r = (n === "up" || n === "down") ? "top" : "left",
            l = (n === "up" || n === "left") ? "pos" : "neg",
            c = {
                opacity: a ? 1 : 0
            },
            o;
        t.effects.save(s, h);
        s.show();
        t.effects.createWrapper(s);
        o = e.distance || s[r === "top" ? "outerHeight" : "outerWidth"](!0) / 2;
        if (a) {
            s.css("opacity", 0).css(r, l === "pos" ? -o : o)
        };
        c[r] = (a ? (l === "pos" ? "+=" : "-=") : (l === "pos" ? "-=" : "+=")) + o;
        s.animate(c, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: function() {
                if (u === "hide") {
                    s.hide()
                };
                t.effects.restore(s, h);
                t.effects.removeWrapper(s);
                i()
            }
        })
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.explode = function(e, i) {
        var r = e.pieces ? Math.round(Math.sqrt(e.pieces)) : 3,
            u = r,
            s = t(this),
            v = t.effects.setMode(s, e.mode || "hide"),
            n = v === "show",
            m = s.show().css("visibility", "hidden").offset(),
            l = Math.ceil(s.outerWidth() / u),
            h = Math.ceil(s.outerHeight() / r),
            c = [],
            o, a, f, d, p, g;

        function b() {
            c.push(this);
            if (c.length === r * u) {
                y()
            }
        };
        for (o = 0; o < r; o++) {
            d = m.top + o * h;
            g = o - (r - 1) / 2;
            for (a = 0; a < u; a++) {
                f = m.left + a * l;
                p = a - (u - 1) / 2;
                s.clone().appendTo("body").wrap("<div></div>").css({
                    position: "absolute",
                    visibility: "visible",
                    left: -a * l,
                    top: -o * h
                }).parent().addClass("ui-effects-explode").css({
                    position: "absolute",
                    overflow: "hidden",
                    width: l,
                    height: h,
                    left: f + (n ? p * l : 0),
                    top: d + (n ? g * h : 0),
                    opacity: n ? 0 : 1
                }).animate({
                    left: f + (n ? 0 : p * l),
                    top: d + (n ? 0 : g * h),
                    opacity: n ? 1 : 0
                }, e.duration || 500, e.easing, b)
            }
        };

        function y() {
            s.css({
                visibility: "visible"
            });
            t(c).remove();
            if (!n) {
                s.hide()
            };
            i()
        }
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.fade = function(e, i) {
        var s = t(this),
            n = t.effects.setMode(s, e.mode || "toggle");
        s.animate({
            opacity: n
        }, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: i
        })
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.fold = function(e, i) {
        var s = t(this),
            l = ["position", "top", "bottom", "left", "right", "height", "width"],
            h = t.effects.setMode(s, e.mode || "hide"),
            a = h === "show",
            u = h === "hide",
            o = e.size || 15,
            c = /([0-9]+)%/.exec(o),
            f = !!e.horizFirst,
            d = a !== f,
            p = d ? ["width", "height"] : ["height", "width"],
            g = e.duration / 2,
            n, r, m = {},
            v = {};
        t.effects.save(s, l);
        s.show();
        n = t.effects.createWrapper(s).css({
            overflow: "hidden"
        });
        r = d ? [n.width(), n.height()] : [n.height(), n.width()];
        if (c) {
            o = parseInt(c[1], 10) / 100 * r[u ? 0 : 1]
        };
        if (a) {
            n.css(f ? {
                height: 0,
                width: o
            } : {
                height: o,
                width: 0
            })
        };
        m[p[0]] = a ? r[0] : o;
        v[p[1]] = a ? r[1] : 0;
        n.animate(m, g, e.easing).animate(v, g, e.easing, function() {
            if (u) {
                s.hide()
            };
            t.effects.restore(s, l);
            t.effects.removeWrapper(s);
            i()
        })
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.highlight = function(e, i) {
        var s = t(this),
            n = ["backgroundImage", "backgroundColor", "opacity"],
            o = t.effects.setMode(s, e.mode || "show"),
            a = {
                backgroundColor: s.css("backgroundColor")
            };
        if (o === "hide") {
            a.opacity = 0
        };
        t.effects.save(s, n);
        s.show().css({
            backgroundImage: "none",
            backgroundColor: e.color || "#ffff99"
        }).animate(a, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: function() {
                if (o === "hide") {
                    s.hide()
                };
                t.effects.restore(s, n);
                i()
            }
        })
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.pulsate = function(e, i) {
        var s = t(this),
            a = t.effects.setMode(s, e.mode || "show"),
            h = a === "show",
            f = a === "hide",
            d = (h || a === "hide"),
            r = ((e.times || 5) * 2) + (d ? 1 : 0),
            u = e.duration / r,
            n = 0,
            o = s.queue(),
            c = o.length,
            l;
        if (h || !s.is(":visible")) {
            s.css("opacity", 0).show();
            n = 1
        };
        for (l = 1; l < r; l++) {
            s.animate({
                opacity: n
            }, u, e.easing);
            n = 1 - n
        };
        s.animate({
            opacity: n
        }, u, e.easing);
        s.queue(function() {
            if (f) {
                s.hide()
            };
            i()
        });
        if (c > 1) {
            o.splice.apply(o, [1, 0].concat(o.splice(c, r + 1)))
        };
        s.dequeue()
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.puff = function(e, i) {
        var s = t(this),
            a = t.effects.setMode(s, e.mode || "hide"),
            r = a === "hide",
            l = parseInt(e.percent, 10) || 150,
            o = l / 100,
            n = {
                height: s.height(),
                width: s.width(),
                outerHeight: s.outerHeight(),
                outerWidth: s.outerWidth()
            };
        t.extend(e, {
            effect: "scale",
            queue: !1,
            fade: !0,
            mode: a,
            complete: i,
            percent: r ? l : 100,
            from: r ? n : {
                height: n.height * o,
                width: n.width * o,
                outerHeight: n.outerHeight * o,
                outerWidth: n.outerWidth * o
            }
        });
        s.effect(e)
    };
    t.effects.effect.scale = function(e, i) {
        var n = t(this),
            s = t.extend(!0, {}, e),
            o = t.effects.setMode(n, e.mode || "effect"),
            l = parseInt(e.percent, 10) || (parseInt(e.percent, 10) === 0 ? 0 : (o === "hide" ? 0 : 100)),
            h = e.direction || "both",
            u = e.origin,
            a = {
                height: n.height(),
                width: n.width(),
                outerHeight: n.outerHeight(),
                outerWidth: n.outerWidth()
            },
            r = {
                y: h !== "horizontal" ? (l / 100) : 1,
                x: h !== "vertical" ? (l / 100) : 1
            };
        s.effect = "size";
        s.queue = !1;
        s.complete = i;
        if (o !== "effect") {
            s.origin = u || ["middle", "center"];
            s.restore = !0
        };
        s.from = e.from || (o === "show" ? {
            height: 0,
            width: 0,
            outerHeight: 0,
            outerWidth: 0
        } : a);
        s.to = {
            height: a.height * r.y,
            width: a.width * r.x,
            outerHeight: a.outerHeight * r.y,
            outerWidth: a.outerWidth * r.x
        };
        if (s.fade) {
            if (o === "show") {
                s.from.opacity = 0;
                s.to.opacity = 1
            };
            if (o === "hide") {
                s.from.opacity = 1;
                s.to.opacity = 0
            }
        };
        n.effect(s)
    };
    t.effects.effect.size = function(e, i) {
        var o, c, n, s = t(this),
            m = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"],
            b = ["position", "top", "bottom", "left", "right", "overflow", "opacity"],
            f = ["width", "height", "overflow"],
            d = ["fontSize"],
            a = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"],
            r = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"],
            h = t.effects.setMode(s, e.mode || "effect"),
            p = e.restore || h !== "effect",
            u = e.scale || "both",
            v = e.origin || ["middle", "center"],
            y = s.css("position"),
            l = p ? m : b,
            g = {
                height: 0,
                width: 0,
                outerHeight: 0,
                outerWidth: 0
            };
        if (h === "show") {
            s.show()
        };
        o = {
            height: s.height(),
            width: s.width(),
            outerHeight: s.outerHeight(),
            outerWidth: s.outerWidth()
        };
        if (e.mode === "toggle" && h === "show") {
            s.from = e.to || g;
            s.to = e.from || o
        } else {
            s.from = e.from || (h === "show" ? g : o);
            s.to = e.to || (h === "hide" ? g : o)
        };
        n = {
            from: {
                y: s.from.height / o.height,
                x: s.from.width / o.width
            },
            to: {
                y: s.to.height / o.height,
                x: s.to.width / o.width
            }
        };
        if (u === "box" || u === "both") {
            if (n.from.y !== n.to.y) {
                l = l.concat(a);
                s.from = t.effects.setTransition(s, a, n.from.y, s.from);
                s.to = t.effects.setTransition(s, a, n.to.y, s.to)
            };
            if (n.from.x !== n.to.x) {
                l = l.concat(r);
                s.from = t.effects.setTransition(s, r, n.from.x, s.from);
                s.to = t.effects.setTransition(s, r, n.to.x, s.to)
            }
        };
        if (u === "content" || u === "both") {
            if (n.from.y !== n.to.y) {
                l = l.concat(d).concat(f);
                s.from = t.effects.setTransition(s, d, n.from.y, s.from);
                s.to = t.effects.setTransition(s, d, n.to.y, s.to)
            }
        };
        t.effects.save(s, l);
        s.show();
        t.effects.createWrapper(s);
        s.css("overflow", "hidden").css(s.from);
        if (v) {
            c = t.effects.getBaseline(v, o);
            s.from.top = (o.outerHeight - s.outerHeight()) * c.y;
            s.from.left = (o.outerWidth - s.outerWidth()) * c.x;
            s.to.top = (o.outerHeight - s.to.outerHeight) * c.y;
            s.to.left = (o.outerWidth - s.to.outerWidth) * c.x
        };
        s.css(s.from);
        if (u === "content" || u === "both") {
            a = a.concat(["marginTop", "marginBottom"]).concat(d);
            r = r.concat(["marginLeft", "marginRight"]);
            f = m.concat(a).concat(r);
            s.find("*[width]").each(function() {
                var i = t(this),
                    s = {
                        height: i.height(),
                        width: i.width(),
                        outerHeight: i.outerHeight(),
                        outerWidth: i.outerWidth()
                    };
                if (p) {
                    t.effects.save(i, f)
                };
                i.from = {
                    height: s.height * n.from.y,
                    width: s.width * n.from.x,
                    outerHeight: s.outerHeight * n.from.y,
                    outerWidth: s.outerWidth * n.from.x
                };
                i.to = {
                    height: s.height * n.to.y,
                    width: s.width * n.to.x,
                    outerHeight: s.height * n.to.y,
                    outerWidth: s.width * n.to.x
                };
                if (n.from.y !== n.to.y) {
                    i.from = t.effects.setTransition(i, a, n.from.y, i.from);
                    i.to = t.effects.setTransition(i, a, n.to.y, i.to)
                };
                if (n.from.x !== n.to.x) {
                    i.from = t.effects.setTransition(i, r, n.from.x, i.from);
                    i.to = t.effects.setTransition(i, r, n.to.x, i.to)
                };
                i.css(i.from);
                i.animate(i.to, e.duration, e.easing, function() {
                    if (p) {
                        t.effects.restore(i, f)
                    }
                })
            })
        };
        s.animate(s.to, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: function() {
                if (s.to.opacity === 0) {
                    s.css("opacity", s.from.opacity)
                };
                if (h === "hide") {
                    s.hide()
                };
                t.effects.restore(s, l);
                if (!p) {
                    if (y === "static") {
                        s.css({
                            position: "relative",
                            top: s.to.top,
                            left: s.to.left
                        })
                    } else {
                        t.each(["top", "left"], function(t, e) {
                            s.css(e, function(e, i) {
                                var o = parseInt(i, 10),
                                    n = t ? s.to.left : s.to.top;
                                if (i === "auto") {
                                    return n + "px"
                                };
                                return o + n + "px"
                            })
                        })
                    }
                };
                t.effects.removeWrapper(s);
                i()
            }
        })
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.shake = function(e, i) {
        var s = t(this),
            d = ["position", "top", "bottom", "left", "right", "height", "width"],
            b = t.effects.setMode(s, e.mode || "effect"),
            o = e.direction || "left",
            r = e.distance || 20,
            p = e.times || 3,
            g = p * 2 + 1,
            n = Math.round(e.duration / g),
            l = (o === "up" || o === "down") ? "top" : "left",
            h = (o === "up" || o === "left"),
            u = {},
            c = {},
            m = {},
            f, a = s.queue(),
            v = a.length;
        t.effects.save(s, d);
        s.show();
        t.effects.createWrapper(s);
        u[l] = (h ? "-=" : "+=") + r;
        c[l] = (h ? "+=" : "-=") + r * 2;
        m[l] = (h ? "-=" : "+=") + r * 2;
        s.animate(u, n, e.easing);
        for (f = 1; f < p; f++) {
            s.animate(c, n, e.easing).animate(m, n, e.easing)
        };
        s.animate(c, n, e.easing).animate(u, n / 2, e.easing).queue(function() {
            if (b === "hide") {
                s.hide()
            };
            t.effects.restore(s, d);
            t.effects.removeWrapper(s);
            i()
        });
        if (v > 1) {
            a.splice.apply(a, [1, 0].concat(a.splice(v, g + 1)))
        };
        s.dequeue()
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.slide = function(e, i) {
        var s = t(this),
            l = ["position", "top", "bottom", "left", "right", "width", "height"],
            h = t.effects.setMode(s, e.mode || "show"),
            u = h === "show",
            o = e.direction || "left",
            a = (o === "up" || o === "down") ? "top" : "left",
            r = (o === "up" || o === "left"),
            n, c = {};
        t.effects.save(s, l);
        s.show();
        n = e.distance || s[a === "top" ? "outerHeight" : "outerWidth"](!0);
        t.effects.createWrapper(s).css({
            overflow: "hidden"
        });
        if (u) {
            s.css(a, r ? (isNaN(n) ? "-" + n : -n) : n)
        };
        c[a] = (u ? (r ? "+=" : "-=") : (r ? "-=" : "+=")) + n;
        s.animate(c, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: function() {
                if (h === "hide") {
                    s.hide()
                };
                t.effects.restore(s, l);
                t.effects.removeWrapper(s);
                i()
            }
        })
    }
})(jQuery);
(function(t, e) {
    t.effects.effect.transfer = function(e, i) {
        var n = t(this),
            s = t(e.to),
            o = s.css("position") === "fixed",
            a = t("body"),
            r = o ? a.scrollTop() : 0,
            l = o ? a.scrollLeft() : 0,
            h = s.offset(),
            c = {
                top: h.top - r,
                left: h.left - l,
                height: s.innerHeight(),
                width: s.innerWidth()
            },
            u = n.offset(),
            f = t("<div class='ui-effects-transfer'></div>").appendTo(document.body).addClass(e.className).css({
                top: u.top - r,
                left: u.left - l,
                height: n.innerHeight(),
                width: n.innerWidth(),
                position: o ? "fixed" : "absolute"
            }).animate(c, e.duration, e.easing, function() {
                f.remove();
                i()
            })
    }
})(jQuery);
(function(t, e) {
    t.widget("ui.menu", {
        version: "1.10.3",
        defaultElement: "<ul>",
        delay: 300,
        options: {
            icons: {
                submenu: "ui-icon-carat-1-e"
            },
            menus: "ul",
            position: {
                my: "left top",
                at: "right top"
            },
            role: "menu",
            blur: null,
            focus: null,
            select: null
        },
        _create: function() {
            this.activeMenu = this.element;
            this.mouseHandled = !1;
            this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length).attr({
                role: this.options.role,
                tabIndex: 0
            }).bind("click" + this.eventNamespace, t.proxy(function(t) {
                if (this.options.disabled) {
                    t.preventDefault()
                }
            }, this));
            if (this.options.disabled) {
                this.element.addClass("ui-state-disabled").attr("aria-disabled", "true")
            };
            this._on({
                "mousedown .ui-menu-item > a": function(t) {
                    t.preventDefault()
                },
                "click .ui-state-disabled > a": function(t) {
                    t.preventDefault()
                },
                "click .ui-menu-item:has(a)": function(e) {
                    var i = t(e.target).closest(".ui-menu-item");
                    if (!this.mouseHandled && i.not(".ui-state-disabled").length) {
                        this.mouseHandled = !0;
                        this.select(e);
                        if (i.has(".ui-menu").length) {
                            this.expand(e)
                        } else if (!this.element.is(":focus")) {
                            this.element.trigger("focus", [!0]);
                            if (this.active && this.active.parents(".ui-menu").length === 1) {
                                clearTimeout(this.timer)
                            }
                        }
                    }
                },
                "mouseenter .ui-menu-item": function(e) {
                    var i = t(e.currentTarget);
                    i.siblings().children(".ui-state-active").removeClass("ui-state-active");
                    this.focus(e, i)
                },
                mouseleave: "collapseAll",
                "mouseleave .ui-menu": "collapseAll",
                focus: function(t, e) {
                    var i = this.active || this.element.children(".ui-menu-item").eq(0);
                    if (!e) {
                        this.focus(t, i)
                    }
                },
                blur: function(e) {
                    this._delay(function() {
                        if (!t.contains(this.element[0], this.document[0].activeElement)) {
                            this.collapseAll(e)
                        }
                    })
                },
                keydown: "_keydown"
            });
            this.refresh();
            this._on(this.document, {
                click: function(e) {
                    if (!t(e.target).closest(".ui-menu").length) {
                        this.collapseAll(e)
                    };
                    this.mouseHandled = !1
                }
            })
        },
        _destroy: function() {
            this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show();
            this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function() {
                var e = t(this);
                if (e.data("ui-menu-submenu-carat")) {
                    e.remove()
                }
            });
            this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")
        },
        _keydown: function(e) {
            var i, o, s, a, n, r = !0;

            function l(t) {
                return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
            };
            switch (e.keyCode) {
                case t.ui.keyCode.PAGE_UP:
                    this.previousPage(e);
                    break;
                case t.ui.keyCode.PAGE_DOWN:
                    this.nextPage(e);
                    break;
                case t.ui.keyCode.HOME:
                    this._move("first", "first", e);
                    break;
                case t.ui.keyCode.END:
                    this._move("last", "last", e);
                    break;
                case t.ui.keyCode.UP:
                    this.previous(e);
                    break;
                case t.ui.keyCode.DOWN:
                    this.next(e);
                    break;
                case t.ui.keyCode.LEFT:
                    this.collapse(e);
                    break;
                case t.ui.keyCode.RIGHT:
                    if (this.active && !this.active.is(".ui-state-disabled")) {
                        this.expand(e)
                    };
                    break;
                case t.ui.keyCode.ENTER:
                case t.ui.keyCode.SPACE:
                    this._activate(e);
                    break;
                case t.ui.keyCode.ESCAPE:
                    this.collapse(e);
                    break;
                default:
                    r = !1;
                    o = this.previousFilter || "";
                    s = String.fromCharCode(e.keyCode);
                    a = !1;
                    clearTimeout(this.filterTimer);
                    if (s === o) {
                        a = !0
                    } else {
                        s = o + s
                    };
                    n = new RegExp("^" + l(s), "i");
                    i = this.activeMenu.children(".ui-menu-item").filter(function() {
                        return n.test(t(this).children("a").text())
                    });
                    i = a && i.index(this.active.next()) !== -1 ? this.active.nextAll(".ui-menu-item") : i;
                    if (!i.length) {
                        s = String.fromCharCode(e.keyCode);
                        n = new RegExp("^" + l(s), "i");
                        i = this.activeMenu.children(".ui-menu-item").filter(function() {
                            return n.test(t(this).children("a").text())
                        })
                    };
                    if (i.length) {
                        this.focus(e, i);
                        if (i.length > 1) {
                            this.previousFilter = s;
                            this.filterTimer = this._delay(function() {
                                delete this.previousFilter
                            }, 1000)
                        } else {
                            delete this.previousFilter
                        }
                    } else {
                        delete this.previousFilter
                    }
            };
            if (r) {
                e.preventDefault()
            }
        },
        _activate: function(t) {
            if (!this.active.is(".ui-state-disabled")) {
                if (this.active.children("a[aria-haspopup='true']").length) {
                    this.expand(t)
                } else {
                    this.select(t)
                }
            }
        },
        refresh: function() {
            var e, s = this.options.icons.submenu,
                i = this.element.find(this.options.menus);
            i.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({
                role: this.options.role,
                "aria-hidden": "true",
                "aria-expanded": "false"
            }).each(function() {
                var e = t(this),
                    i = e.prev("a"),
                    n = t("<span>").addClass("ui-menu-icon ui-icon " + s).data("ui-menu-submenu-carat", !0);
                i.attr("aria-haspopup", "true").prepend(n);
                e.attr("aria-labelledby", i.attr("id"))
            });
            e = i.add(this.element);
            e.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role", "presentation").children("a").uniqueId().addClass("ui-corner-all").attr({
                tabIndex: -1,
                role: this._itemRole()
            });
            e.children(":not(.ui-menu-item)").each(function() {
                var e = t(this);
                if (!/[^\-\u2014\u2013\s]/.test(e.text())) {
                    e.addClass("ui-widget-content ui-menu-divider")
                }
            });
            e.children(".ui-state-disabled").attr("aria-disabled", "true");
            if (this.active && !t.contains(this.element[0], this.active[0])) {
                this.blur()
            }
        },
        _itemRole: function() {
            return {
                menu: "menuitem",
                listbox: "option"
            }[this.options.role]
        },
        _setOption: function(t, e) {
            if (t === "icons") {
                this.element.find(".ui-menu-icon").removeClass(this.options.icons.submenu).addClass(e.submenu)
            };
            this._super(t, e)
        },
        focus: function(t, e) {
            var i, s;
            this.blur(t, t && t.type === "focus");
            this._scrollIntoView(e);
            this.active = e.first();
            s = this.active.children("a").addClass("ui-state-focus");
            if (this.options.role) {
                this.element.attr("aria-activedescendant", s.attr("id"))
            };
            this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active");
            if (t && t.type === "keydown") {
                this._close()
            } else {
                this.timer = this._delay(function() {
                    this._close()
                }, this.delay)
            };
            i = e.children(".ui-menu");
            if (i.length && (/^mouse/.test(t.type))) {
                this._startOpening(i)
            };
            this.activeMenu = e.parent();
            this._trigger("focus", t, {
                item: e
            })
        },
        _scrollIntoView: function(e) {
            var a, r, i, s, n, o;
            if (this._hasScroll()) {
                a = parseFloat(t.css(this.activeMenu[0], "borderTopWidth")) || 0;
                r = parseFloat(t.css(this.activeMenu[0], "paddingTop")) || 0;
                i = e.offset().top - this.activeMenu.offset().top - a - r;
                s = this.activeMenu.scrollTop();
                n = this.activeMenu.height();
                o = e.height();
                if (i < 0) {
                    this.activeMenu.scrollTop(s + i)
                } else if (i + o > n) {
                    this.activeMenu.scrollTop(s + i - n + o)
                }
            }
        },
        blur: function(t, e) {
            if (!e) {
                clearTimeout(this.timer)
            };
            if (!this.active) {
                return
            };
            this.active.children("a").removeClass("ui-state-focus");
            this.active = null;
            this._trigger("blur", t, {
                item: this.active
            })
        },
        _startOpening: function(t) {
            clearTimeout(this.timer);
            if (t.attr("aria-hidden") !== "true") {
                return
            };
            this.timer = this._delay(function() {
                this._close();
                this._open(t)
            }, this.delay)
        },
        _open: function(e) {
            var i = t.extend({
                of: this.active
            }, this.options.position);
            clearTimeout(this.timer);
            this.element.find(".ui-menu").not(e.parents(".ui-menu")).hide().attr("aria-hidden", "true");
            e.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(i)
        },
        collapseAll: function(e, i) {
            clearTimeout(this.timer);
            this.timer = this._delay(function() {
                var s = i ? this.element : t(e && e.target).closest(this.element.find(".ui-menu"));
                if (!s.length) {
                    s = this.element
                };
                this._close(s);
                this.blur(e);
                this.activeMenu = s
            }, this.delay)
        },
        _close: function(t) {
            if (!t) {
                t = this.active ? this.active.parent() : this.element
            };
            t.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false").end().find("a.ui-state-active").removeClass("ui-state-active")
        },
        collapse: function(t) {
            var e = this.active && this.active.parent().closest(".ui-menu-item", this.element);
            if (e && e.length) {
                this._close();
                this.focus(t, e)
            }
        },
        expand: function(t) {
            var e = this.active && this.active.children(".ui-menu ").children(".ui-menu-item").first();
            if (e && e.length) {
                this._open(e.parent());
                this._delay(function() {
                    this.focus(t, e)
                })
            }
        },
        next: function(t) {
            this._move("next", "first", t)
        },
        previous: function(t) {
            this._move("prev", "last", t)
        },
        isFirstItem: function() {
            return this.active && !this.active.prevAll(".ui-menu-item").length
        },
        isLastItem: function() {
            return this.active && !this.active.nextAll(".ui-menu-item").length
        },
        _move: function(t, e, i) {
            var s;
            if (this.active) {
                if (t === "first" || t === "last") {
                    s = this.active[t === "first" ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1)
                } else {
                    s = this.active[t + "All"](".ui-menu-item").eq(0)
                }
            };
            if (!s || !s.length || !this.active) {
                s = this.activeMenu.children(".ui-menu-item")[e]()
            };
            this.focus(i, s)
        },
        nextPage: function(e) {
            var i, s, n;
            if (!this.active) {
                this.next(e);
                return
            };
            if (this.isLastItem()) {
                return
            };
            if (this._hasScroll()) {
                s = this.active.offset().top;
                n = this.element.height();
                this.active.nextAll(".ui-menu-item").each(function() {
                    i = t(this);
                    return i.offset().top - s - n < 0
                });
                this.focus(e, i)
            } else {
                this.focus(e, this.activeMenu.children(".ui-menu-item")[!this.active ? "first" : "last"]())
            }
        },
        previousPage: function(e) {
            var i, s, n;
            if (!this.active) {
                this.next(e);
                return
            };
            if (this.isFirstItem()) {
                return
            };
            if (this._hasScroll()) {
                s = this.active.offset().top;
                n = this.element.height();
                this.active.prevAll(".ui-menu-item").each(function() {
                    i = t(this);
                    return i.offset().top - s + n > 0
                });
                this.focus(e, i)
            } else {
                this.focus(e, this.activeMenu.children(".ui-menu-item").first())
            }
        },
        _hasScroll: function() {
            return this.element.outerHeight() < this.element.prop("scrollHeight")
        },
        select: function(e) {
            this.active = this.active || t(e.target).closest(".ui-menu-item");
            var i = {
                item: this.active
            };
            if (!this.active.has(".ui-menu").length) {
                this.collapseAll(e, !0)
            };
            this._trigger("select", e, i)
        }
    })
}(jQuery));
(function(t, e) {
    t.ui = t.ui || {};
    var o, s = Math.max,
        i = Math.abs,
        a = Math.round,
        r = /left|center|right/,
        l = /top|center|bottom/,
        h = /[\+\-]\d+(\.[\d]+)?%?/,
        u = /^\w+/,
        c = /%$/,
        d = t.fn.position;

    function f(t, e, i) {
        return [parseFloat(t[0]) * (c.test(t[0]) ? e / 100 : 1), parseFloat(t[1]) * (c.test(t[1]) ? i / 100 : 1)]
    };

    function n(e, i) {
        return parseInt(t.css(e, i), 10) || 0
    };

    function p(e) {
        var i = e[0];
        if (i.nodeType === 9) {
            return {
                width: e.width(),
                height: e.height(),
                offset: {
                    top: 0,
                    left: 0
                }
            }
        };
        if (t.isWindow(i)) {
            return {
                width: e.width(),
                height: e.height(),
                offset: {
                    top: e.scrollTop(),
                    left: e.scrollLeft()
                }
            }
        };
        if (i.preventDefault) {
            return {
                width: 0,
                height: 0,
                offset: {
                    top: i.pageY,
                    left: i.pageX
                }
            }
        };
        return {
            width: e.outerWidth(),
            height: e.outerHeight(),
            offset: e.offset()
        }
    };
    t.position = {
        scrollbarWidth: function() {
            if (o !== e) {
                return o
            };
            var n, s, i = t("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),
                a = i.children()[0];
            t("body").append(i);
            n = a.offsetWidth;
            i.css("overflow", "scroll");
            s = a.offsetWidth;
            if (n === s) {
                s = i[0].clientWidth
            };
            i.remove();
            return (o = n - s)
        },
        getScrollInfo: function(e) {
            var i = e.isWindow ? "" : e.element.css("overflow-x"),
                s = e.isWindow ? "" : e.element.css("overflow-y"),
                n = i === "scroll" || (i === "auto" && e.width < e.element[0].scrollWidth),
                o = s === "scroll" || (s === "auto" && e.height < e.element[0].scrollHeight);
            return {
                width: o ? t.position.scrollbarWidth() : 0,
                height: n ? t.position.scrollbarWidth() : 0
            }
        },
        getWithinInfo: function(e) {
            var i = t(e || window),
                s = t.isWindow(i[0]);
            return {
                element: i,
                isWindow: s,
                offset: i.offset() || {
                    left: 0,
                    top: 0
                },
                scrollLeft: i.scrollLeft(),
                scrollTop: i.scrollTop(),
                width: s ? i.width() : i.outerWidth(),
                height: s ? i.height() : i.outerHeight()
            }
        }
    };
    t.fn.position = function(e) {
        if (!e || !e.of) {
            return d.apply(this, arguments)
        };
        e = t.extend({}, e);
        var v, o, c, m, g, y, w = t(e.of),
            x = t.position.getWithinInfo(e.within),
            D = t.position.getScrollInfo(x),
            b = (e.collision || "flip").split(" "),
            k = {};
        y = p(w);
        if (w[0].preventDefault) {
            e.at = "left top"
        };
        o = y.width;
        c = y.height;
        m = y.offset;
        g = t.extend({}, m);
        t.each(["my", "at"], function() {
            var t = (e[this] || "").split(" "),
                i, s;
            if (t.length === 1) {
                t = r.test(t[0]) ? t.concat(["center"]) : l.test(t[0]) ? ["center"].concat(t) : ["center", "center"]
            };
            t[0] = r.test(t[0]) ? t[0] : "center";
            t[1] = l.test(t[1]) ? t[1] : "center";
            i = h.exec(t[0]);
            s = h.exec(t[1]);
            k[this] = [i ? i[0] : 0, s ? s[0] : 0];
            e[this] = [u.exec(t[0])[0], u.exec(t[1])[0]]
        });
        if (b.length === 1) {
            b[1] = b[0]
        };
        if (e.at[0] === "right") {
            g.left += o
        } else if (e.at[0] === "center") {
            g.left += o / 2
        };
        if (e.at[1] === "bottom") {
            g.top += c
        } else if (e.at[1] === "center") {
            g.top += c / 2
        };
        v = f(k.at, o, c);
        g.left += v[0];
        g.top += v[1];
        return this.each(function() {
            var p, y, l = t(this),
                h = l.outerWidth(),
                u = l.outerHeight(),
                C = n(this, "marginLeft"),
                I = n(this, "marginTop"),
                P = h + C + n(this, "marginRight") + D.width,
                T = u + I + n(this, "marginBottom") + D.height,
                r = t.extend({}, g),
                d = f(k.my, l.outerWidth(), l.outerHeight());
            if (e.my[0] === "right") {
                r.left -= h
            } else if (e.my[0] === "center") {
                r.left -= h / 2
            };
            if (e.my[1] === "bottom") {
                r.top -= u
            } else if (e.my[1] === "center") {
                r.top -= u / 2
            };
            r.left += d[0];
            r.top += d[1];
            if (!t.support.offsetFractions) {
                r.left = a(r.left);
                r.top = a(r.top)
            };
            p = {
                marginLeft: C,
                marginTop: I
            };
            t.each(["left", "top"], function(i, s) {
                if (t.ui.position[b[i]]) {
                    t.ui.position[b[i]][s](r, {
                        targetWidth: o,
                        targetHeight: c,
                        elemWidth: h,
                        elemHeight: u,
                        collisionPosition: p,
                        collisionWidth: P,
                        collisionHeight: T,
                        offset: [v[0] + d[0], v[1] + d[1]],
                        my: e.my,
                        at: e.at,
                        within: x,
                        elem: l
                    })
                }
            });
            if (e.using) {
                y = function(t) {
                    var a = m.left - r.left,
                        d = a + o - h,
                        f = m.top - r.top,
                        p = f + c - u,
                        n = {
                            target: {
                                element: w,
                                left: m.left,
                                top: m.top,
                                width: o,
                                height: c
                            },
                            element: {
                                element: l,
                                left: r.left,
                                top: r.top,
                                width: h,
                                height: u
                            },
                            horizontal: d < 0 ? "left" : a > 0 ? "right" : "center",
                            vertical: p < 0 ? "top" : f > 0 ? "bottom" : "middle"
                        };
                    if (o < h && i(a + d) < o) {
                        n.horizontal = "center"
                    };
                    if (c < u && i(f + p) < c) {
                        n.vertical = "middle"
                    };
                    if (s(i(a), i(d)) > s(i(f), i(p))) {
                        n.important = "horizontal"
                    } else {
                        n.important = "vertical"
                    };
                    e.using.call(this, t, n)
                }
            };
            l.offset(t.extend(r, {
                using: y
            }))
        })
    };
    t.ui.position = {
        fit: {
            left: function(t, e) {
                var a = e.within,
                    n = a.isWindow ? a.scrollLeft : a.offset.left,
                    r = a.width,
                    l = t.left - e.collisionPosition.marginLeft,
                    i = n - l,
                    o = l + e.collisionWidth - r - n,
                    h;
                if (e.collisionWidth > r) {
                    if (i > 0 && o <= 0) {
                        h = t.left + i + e.collisionWidth - r - n;
                        t.left += i - h
                    } else if (o > 0 && i <= 0) {
                        t.left = n
                    } else {
                        if (i > o) {
                            t.left = n + r - e.collisionWidth
                        } else {
                            t.left = n
                        }
                    }
                } else if (i > 0) {
                    t.left += i
                } else if (o > 0) {
                    t.left -= o
                } else {
                    t.left = s(t.left - l, t.left)
                }
            },
            top: function(t, e) {
                var r = e.within,
                    n = r.isWindow ? r.scrollTop : r.offset.top,
                    a = e.within.height,
                    l = t.top - e.collisionPosition.marginTop,
                    i = n - l,
                    o = l + e.collisionHeight - a - n,
                    h;
                if (e.collisionHeight > a) {
                    if (i > 0 && o <= 0) {
                        h = t.top + i + e.collisionHeight - a - n;
                        t.top += i - h
                    } else if (o > 0 && i <= 0) {
                        t.top = n
                    } else {
                        if (i > o) {
                            t.top = n + a - e.collisionHeight
                        } else {
                            t.top = n
                        }
                    }
                } else if (i > 0) {
                    t.top += i
                } else if (o > 0) {
                    t.top -= o
                } else {
                    t.top = s(t.top - l, t.top)
                }
            }
        },
        flip: {
            left: function(t, e) {
                var s = e.within,
                    p = s.offset.left + s.scrollLeft,
                    u = s.width,
                    r = s.isWindow ? s.scrollLeft : s.offset.left,
                    c = t.left - e.collisionPosition.marginLeft,
                    f = c - r,
                    d = c + e.collisionWidth - u - r,
                    n = e.my[0] === "left" ? -e.elemWidth : e.my[0] === "right" ? e.elemWidth : 0,
                    o = e.at[0] === "left" ? e.targetWidth : e.at[0] === "right" ? -e.targetWidth : 0,
                    a = -2 * e.offset[0],
                    l, h;
                if (f < 0) {
                    l = t.left + n + o + a + e.collisionWidth - u - p;
                    if (l < 0 || l < i(f)) {
                        t.left += n + o + a
                    }
                } else if (d > 0) {
                    h = t.left - e.collisionPosition.marginLeft + n + o + a - r;
                    if (h > 0 || i(h) < d) {
                        t.left += n + o + a
                    }
                }
            },
            top: function(t, e) {
                var s = e.within,
                    p = s.offset.top + s.scrollTop,
                    f = s.height,
                    r = s.isWindow ? s.scrollTop : s.offset.top,
                    d = t.top - e.collisionPosition.marginTop,
                    l = d - r,
                    h = d + e.collisionHeight - f - r,
                    g = e.my[1] === "top",
                    n = g ? -e.elemHeight : e.my[1] === "bottom" ? e.elemHeight : 0,
                    o = e.at[1] === "top" ? e.targetHeight : e.at[1] === "bottom" ? -e.targetHeight : 0,
                    a = -2 * e.offset[1],
                    u, c;
                if (l < 0) {
                    c = t.top + n + o + a + e.collisionHeight - f - p;
                    if ((t.top + n + o + a) > l && (c < 0 || c < i(l))) {
                        t.top += n + o + a
                    }
                } else if (h > 0) {
                    u = t.top - e.collisionPosition.marginTop + n + o + a - r;
                    if ((t.top + n + o + a) > h && (u > 0 || i(u) < h)) {
                        t.top += n + o + a
                    }
                }
            }
        },
        flipfit: {
            left: function() {
                t.ui.position.flip.left.apply(this, arguments);
                t.ui.position.fit.left.apply(this, arguments)
            },
            top: function() {
                t.ui.position.flip.top.apply(this, arguments);
                t.ui.position.fit.top.apply(this, arguments)
            }
        }
    };
    (function() {
        var e, i, s, n, o, a = document.getElementsByTagName("body")[0],
            r = document.createElement("div");
        e = document.createElement(a ? "div" : "body");
        s = {
            visibility: "hidden",
            width: 0,
            height: 0,
            border: 0,
            margin: 0,
            background: "none"
        };
        if (a) {
            t.extend(s, {
                position: "absolute",
                left: "-1000px",
                top: "-1000px"
            })
        };
        for (o in s) {
            e.style[o] = s[o]
        };
        e.appendChild(r);
        i = a || document.documentElement;
        i.insertBefore(e, i.firstChild);
        r.style.cssText = "position: absolute; left: 10.7432222px;";
        n = t(r).offset().left;
        t.support.offsetFractions = n > 10 && n < 11;
        e.innerHTML = "";
        i.removeChild(e)
    })()
}(jQuery));
(function(t, e) {
    t.widget("ui.progressbar", {
        version: "1.10.3",
        options: {
            max: 100,
            value: 0,
            change: null,
            complete: null
        },
        min: 0,
        _create: function() {
            this.oldValue = this.options.value = this._constrainedValue();
            this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({
                role: "progressbar",
                "aria-valuemin": this.min
            });
            this.valueDiv = t("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element);
            this._refreshValue()
        },
        _destroy: function() {
            this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");
            this.valueDiv.remove()
        },
        value: function(t) {
            if (t === e) {
                return this.options.value
            };
            this.options.value = this._constrainedValue(t);
            this._refreshValue()
        },
        _constrainedValue: function(t) {
            if (t === e) {
                t = this.options.value
            };
            this.indeterminate = t === !1;
            if (typeof t !== "number") {
                t = 0
            };
            return this.indeterminate ? !1 : Math.min(this.options.max, Math.max(this.min, t))
        },
        _setOptions: function(t) {
            var e = t.value;
            delete t.value;
            this._super(t);
            this.options.value = this._constrainedValue(e);
            this._refreshValue()
        },
        _setOption: function(t, e) {
            if (t === "max") {
                e = Math.max(this.min, e)
            };
            this._super(t, e)
        },
        _percentage: function() {
            return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min)
        },
        _refreshValue: function() {
            var e = this.options.value,
                i = this._percentage();
            this.valueDiv.toggle(this.indeterminate || e > this.min).toggleClass("ui-corner-right", e === this.options.max).width(i.toFixed(0) + "%");
            this.element.toggleClass("ui-progressbar-indeterminate", this.indeterminate);
            if (this.indeterminate) {
                this.element.removeAttr("aria-valuenow");
                if (!this.overlayDiv) {
                    this.overlayDiv = t("<div class='ui-progressbar-overlay'></div>").appendTo(this.valueDiv)
                }
            } else {
                this.element.attr({
                    "aria-valuemax": this.options.max,
                    "aria-valuenow": e
                });
                if (this.overlayDiv) {
                    this.overlayDiv.remove();
                    this.overlayDiv = null
                }
            };
            if (this.oldValue !== e) {
                this.oldValue = e;
                this._trigger("change")
            };
            if (e === this.options.max) {
                this._trigger("complete")
            }
        }
    })
})(jQuery);
(function(t, e) {
    var i = 5;
    t.widget("ui.slider", t.ui.mouse, {
        version: "1.10.3",
        widgetEventPrefix: "slide",
        options: {
            animate: !1,
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: !1,
            step: 1,
            value: 0,
            values: null,
            change: null,
            slide: null,
            start: null,
            stop: null
        },
        _create: function() {
            this._keySliding = !1;
            this._mouseSliding = !1;
            this._animateOff = !0;
            this._handleIndex = null;
            this._detectOrientation();
            this._mouseInit();
            this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget ui-widget-content ui-corner-all");
            this._refresh();
            this._setOption("disabled", this.options.disabled);
            this._animateOff = !1
        },
        _refresh: function() {
            this._createRange();
            this._createHandles();
            this._setupEvents();
            this._refreshValue()
        },
        _createHandles: function() {
            var s, i, n = this.options,
                e = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),
                a = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",
                o = [];
            i = (n.values && n.values.length) || 1;
            if (e.length > i) {
                e.slice(i).remove();
                e = e.slice(0, i)
            };
            for (s = e.length; s < i; s++) {
                o.push(a)
            };
            this.handles = e.add(t(o.join("")).appendTo(this.element));
            this.handle = this.handles.eq(0);
            this.handles.each(function(e) {
                t(this).data("ui-slider-handle-index", e)
            })
        },
        _createRange: function() {
            var e = this.options,
                i = "";
            if (e.range) {
                if (e.range === !0) {
                    if (!e.values) {
                        e.values = [this._valueMin(), this._valueMin()]
                    } else if (e.values.length && e.values.length !== 2) {
                        e.values = [e.values[0], e.values[0]]
                    } else if (t.isArray(e.values)) {
                        e.values = e.values.slice(0)
                    }
                };
                if (!this.range || !this.range.length) {
                    this.range = t("<div></div>").appendTo(this.element);
                    i = "ui-slider-range ui-widget-header ui-corner-all"
                } else {
                    this.range.removeClass("ui-slider-range-min ui-slider-range-max").css({
                        "left": "",
                        "bottom": ""
                    })
                };
                this.range.addClass(i + ((e.range === "min" || e.range === "max") ? " ui-slider-range-" + e.range : ""))
            } else {
                this.range = t([])
            }
        },
        _setupEvents: function() {
            var t = this.handles.add(this.range).filter("a");
            this._off(t);
            this._on(t, this._handleEvents);
            this._hoverable(t);
            this._focusable(t)
        },
        _destroy: function() {
            this.handles.remove();
            this.range.remove();
            this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all");
            this._mouseDestroy()
        },
        _mouseCapture: function(e) {
            var l, o, s, i, n, h, a, u, r = this,
                c = this.options;
            if (c.disabled) {
                return !1
            };
            this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight()
            };
            this.elementOffset = this.element.offset();
            l = {
                x: e.pageX,
                y: e.pageY
            };
            o = this._normValueFromMouse(l);
            s = this._valueMax() - this._valueMin() + 1;
            this.handles.each(function(e) {
                var a = Math.abs(o - r.values(e));
                if ((s > a) || (s === a && (e === r._lastChangedValue || r.values(e) === c.min))) {
                    s = a;
                    i = t(this);
                    n = e
                }
            });
            h = this._start(e, n);
            if (h === !1) {
                return !1
            };
            this._mouseSliding = !0;
            this._handleIndex = n;
            i.addClass("ui-state-active").focus();
            a = i.offset();
            u = !t(e.target).parents().addBack().is(".ui-slider-handle");
            this._clickOffset = u ? {
                left: 0,
                top: 0
            } : {
                left: e.pageX - a.left - (i.width() / 2),
                top: e.pageY - a.top - (i.height() / 2) - (parseInt(i.css("borderTopWidth"), 10) || 0) - (parseInt(i.css("borderBottomWidth"), 10) || 0) + (parseInt(i.css("marginTop"), 10) || 0)
            };
            if (!this.handles.hasClass("ui-state-hover")) {
                this._slide(e, n, o)
            };
            this._animateOff = !0;
            return !0
        },
        _mouseStart: function() {
            return !0
        },
        _mouseDrag: function(t) {
            var e = {
                    x: t.pageX,
                    y: t.pageY
                },
                i = this._normValueFromMouse(e);
            this._slide(t, this._handleIndex, i);
            return !1
        },
        _mouseStop: function(t) {
            this.handles.removeClass("ui-state-active");
            this._mouseSliding = !1;
            this._stop(t, this._handleIndex);
            this._change(t, this._handleIndex);
            this._handleIndex = null;
            this._clickOffset = null;
            this._animateOff = !1;
            return !1
        },
        _detectOrientation: function() {
            this.orientation = (this.options.orientation === "vertical") ? "vertical" : "horizontal"
        },
        _normValueFromMouse: function(t) {
            var i, s, e, n, o;
            if (this.orientation === "horizontal") {
                i = this.elementSize.width;
                s = t.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)
            } else {
                i = this.elementSize.height;
                s = t.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)
            };
            e = (s / i);
            if (e > 1) {
                e = 1
            };
            if (e < 0) {
                e = 0
            };
            if (this.orientation === "vertical") {
                e = 1 - e
            };
            n = this._valueMax() - this._valueMin();
            o = this._valueMin() + e * n;
            return this._trimAlignValue(o)
        },
        _start: function(t, e) {
            var i = {
                handle: this.handles[e],
                value: this.value()
            };
            if (this.options.values && this.options.values.length) {
                i.value = this.values(e);
                i.values = this.values()
            };
            return this._trigger("start", t, i)
        },
        _slide: function(t, e, i) {
            var s, o, n;
            if (this.options.values && this.options.values.length) {
                s = this.values(e ? 0 : 1);
                if ((this.options.values.length === 2 && this.options.range === !0) && ((e === 0 && i > s) || (e === 1 && i < s))) {
                    i = s
                };
                if (i !== this.values(e)) {
                    o = this.values();
                    o[e] = i;
                    n = this._trigger("slide", t, {
                        handle: this.handles[e],
                        value: i,
                        values: o
                    });
                    s = this.values(e ? 0 : 1);
                    if (n !== !1) {
                        this.values(e, i, !0)
                    }
                }
            } else {
                if (i !== this.value()) {
                    n = this._trigger("slide", t, {
                        handle: this.handles[e],
                        value: i
                    });
                    if (n !== !1) {
                        this.value(i)
                    }
                }
            }
        },
        _stop: function(t, e) {
            var i = {
                handle: this.handles[e],
                value: this.value()
            };
            if (this.options.values && this.options.values.length) {
                i.value = this.values(e);
                i.values = this.values()
            };
            this._trigger("stop", t, i)
        },
        _change: function(t, e) {
            if (!this._keySliding && !this._mouseSliding) {
                var i = {
                    handle: this.handles[e],
                    value: this.value()
                };
                if (this.options.values && this.options.values.length) {
                    i.value = this.values(e);
                    i.values = this.values()
                };
                this._lastChangedValue = e;
                this._trigger("change", t, i)
            }
        },
        value: function(t) {
            if (arguments.length) {
                this.options.value = this._trimAlignValue(t);
                this._refreshValue();
                this._change(null, 0);
                return
            };
            return this._value()
        },
        values: function(e, i) {
            var n, o, s;
            if (arguments.length > 1) {
                this.options.values[e] = this._trimAlignValue(i);
                this._refreshValue();
                this._change(null, e);
                return
            };
            if (arguments.length) {
                if (t.isArray(arguments[0])) {
                    n = this.options.values;
                    o = arguments[0];
                    for (s = 0; s < n.length; s += 1) {
                        n[s] = this._trimAlignValue(o[s]);
                        this._change(null, s)
                    };
                    this._refreshValue()
                } else {
                    if (this.options.values && this.options.values.length) {
                        return this._values(e)
                    } else {
                        return this.value()
                    }
                }
            } else {
                return this._values()
            }
        },
        _setOption: function(e, i) {
            var s, n = 0;
            if (e === "range" && this.options.range === !0) {
                if (i === "min") {
                    this.options.value = this._values(0);
                    this.options.values = null
                } else if (i === "max") {
                    this.options.value = this._values(this.options.values.length - 1);
                    this.options.values = null
                }
            };
            if (t.isArray(this.options.values)) {
                n = this.options.values.length
            };
            t.Widget.prototype._setOption.apply(this, arguments);
            switch (e) {
                case "orientation":
                    this._detectOrientation();
                    this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation);
                    this._refreshValue();
                    break;
                case "value":
                    this._animateOff = !0;
                    this._refreshValue();
                    this._change(null, 0);
                    this._animateOff = !1;
                    break;
                case "values":
                    this._animateOff = !0;
                    this._refreshValue();
                    for (s = 0; s < n; s += 1) {
                        this._change(null, s)
                    };
                    this._animateOff = !1;
                    break;
                case "min":
                case "max":
                    this._animateOff = !0;
                    this._refreshValue();
                    this._animateOff = !1;
                    break;
                case "range":
                    this._animateOff = !0;
                    this._refresh();
                    this._animateOff = !1;
                    break
            }
        },
        _value: function() {
            var t = this.options.value;
            t = this._trimAlignValue(t);
            return t
        },
        _values: function(t) {
            var s, e, i;
            if (arguments.length) {
                s = this.options.values[t];
                s = this._trimAlignValue(s);
                return s
            } else if (this.options.values && this.options.values.length) {
                e = this.options.values.slice();
                for (i = 0; i < e.length; i += 1) {
                    e[i] = this._trimAlignValue(e[i])
                };
                return e
            } else {
                return []
            }
        },
        _trimAlignValue: function(t) {
            if (t <= this._valueMin()) {
                return this._valueMin()
            };
            if (t >= this._valueMax()) {
                return this._valueMax()
            };
            var e = (this.options.step > 0) ? this.options.step : 1,
                i = (t - this._valueMin()) % e,
                s = t - i;
            if (Math.abs(i) * 2 >= e) {
                s += (i > 0) ? e : (-e)
            };
            return parseFloat(s.toFixed(5))
        },
        _valueMin: function() {
            return this.options.min
        },
        _valueMax: function() {
            return this.options.max
        },
        _refreshValue: function() {
            var l, e, u, o, h, a = this.options.range,
                i = this.options,
                s = this,
                n = (!this._animateOff) ? i.animate : !1,
                r = {};
            if (this.options.values && this.options.values.length) {
                this.handles.each(function(o) {
                    e = (s.values(o) - s._valueMin()) / (s._valueMax() - s._valueMin()) * 100;
                    r[s.orientation === "horizontal" ? "left" : "bottom"] = e + "%";
                    t(this).stop(1, 1)[n ? "animate" : "css"](r, i.animate);
                    if (s.options.range === !0) {
                        if (s.orientation === "horizontal") {
                            if (o === 0) {
                                s.range.stop(1, 1)[n ? "animate" : "css"]({
                                    left: e + "%"
                                }, i.animate)
                            };
                            if (o === 1) {
                                s.range[n ? "animate" : "css"]({
                                    width: (e - l) + "%"
                                }, {
                                    queue: !1,
                                    duration: i.animate
                                })
                            }
                        } else {
                            if (o === 0) {
                                s.range.stop(1, 1)[n ? "animate" : "css"]({
                                    bottom: (e) + "%"
                                }, i.animate)
                            };
                            if (o === 1) {
                                s.range[n ? "animate" : "css"]({
                                    height: (e - l) + "%"
                                }, {
                                    queue: !1,
                                    duration: i.animate
                                })
                            }
                        }
                    };
                    l = e
                })
            } else {
                u = this.value();
                o = this._valueMin();
                h = this._valueMax();
                e = (h !== o) ? (u - o) / (h - o) * 100 : 0;
                r[this.orientation === "horizontal" ? "left" : "bottom"] = e + "%";
                this.handle.stop(1, 1)[n ? "animate" : "css"](r, i.animate);
                if (a === "min" && this.orientation === "horizontal") {
                    this.range.stop(1, 1)[n ? "animate" : "css"]({
                        width: e + "%"
                    }, i.animate)
                };
                if (a === "max" && this.orientation === "horizontal") {
                    this.range[n ? "animate" : "css"]({
                        width: (100 - e) + "%"
                    }, {
                        queue: !1,
                        duration: i.animate
                    })
                };
                if (a === "min" && this.orientation === "vertical") {
                    this.range.stop(1, 1)[n ? "animate" : "css"]({
                        height: e + "%"
                    }, i.animate)
                };
                if (a === "max" && this.orientation === "vertical") {
                    this.range[n ? "animate" : "css"]({
                        height: (100 - e) + "%"
                    }, {
                        queue: !1,
                        duration: i.animate
                    })
                }
            }
        },
        _handleEvents: {
            keydown: function(e) {
                var r, n, s, o, a = t(e.target).data("ui-slider-handle-index");
                switch (e.keyCode) {
                    case t.ui.keyCode.HOME:
                    case t.ui.keyCode.END:
                    case t.ui.keyCode.PAGE_UP:
                    case t.ui.keyCode.PAGE_DOWN:
                    case t.ui.keyCode.UP:
                    case t.ui.keyCode.RIGHT:
                    case t.ui.keyCode.DOWN:
                    case t.ui.keyCode.LEFT:
                        e.preventDefault();
                        if (!this._keySliding) {
                            this._keySliding = !0;
                            t(e.target).addClass("ui-state-active");
                            r = this._start(e, a);
                            if (r === !1) {
                                return
                            }
                        };
                        break
                };
                o = this.options.step;
                if (this.options.values && this.options.values.length) {
                    n = s = this.values(a)
                } else {
                    n = s = this.value()
                };
                switch (e.keyCode) {
                    case t.ui.keyCode.HOME:
                        s = this._valueMin();
                        break;
                    case t.ui.keyCode.END:
                        s = this._valueMax();
                        break;
                    case t.ui.keyCode.PAGE_UP:
                        s = this._trimAlignValue(n + ((this._valueMax() - this._valueMin()) / i));
                        break;
                    case t.ui.keyCode.PAGE_DOWN:
                        s = this._trimAlignValue(n - ((this._valueMax() - this._valueMin()) / i));
                        break;
                    case t.ui.keyCode.UP:
                    case t.ui.keyCode.RIGHT:
                        if (n === this._valueMax()) {
                            return
                        };
                        s = this._trimAlignValue(n + o);
                        break;
                    case t.ui.keyCode.DOWN:
                    case t.ui.keyCode.LEFT:
                        if (n === this._valueMin()) {
                            return
                        };
                        s = this._trimAlignValue(n - o);
                        break
                };
                this._slide(e, a, s)
            },
            click: function(t) {
                t.preventDefault()
            },
            keyup: function(e) {
                var i = t(e.target).data("ui-slider-handle-index");
                if (this._keySliding) {
                    this._keySliding = !1;
                    this._stop(e, i);
                    this._change(e, i);
                    t(e.target).removeClass("ui-state-active")
                }
            }
        }
    })
}(jQuery));
(function(t) {
    function e(t) {
        return function() {
            var e = this.element.val();
            t.apply(this, arguments);
            this._refresh();
            if (e !== this.element.val()) {
                this._trigger("change")
            }
        }
    };
    t.widget("ui.spinner", {
        version: "1.10.3",
        defaultElement: "<input>",
        widgetEventPrefix: "spin",
        options: {
            culture: null,
            icons: {
                down: "ui-icon-triangle-1-s",
                up: "ui-icon-triangle-1-n"
            },
            incremental: !0,
            max: null,
            min: null,
            numberFormat: null,
            page: 10,
            step: 1,
            change: null,
            spin: null,
            start: null,
            stop: null
        },
        _create: function() {
            this._setOption("max", this.options.max);
            this._setOption("min", this.options.min);
            this._setOption("step", this.options.step);
            this._value(this.element.val(), !0);
            this._draw();
            this._on(this._events);
            this._refresh();
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _getCreateOptions: function() {
            var e = {},
                i = this.element;
            t.each(["min", "max", "step"], function(t, s) {
                var n = i.attr(s);
                if (n !== undefined && n.length) {
                    e[s] = n
                }
            });
            return e
        },
        _events: {
            keydown: function(t) {
                if (this._start(t) && this._keydown(t)) {
                    t.preventDefault()
                }
            },
            keyup: "_stop",
            focus: function() {
                this.previous = this.element.val()
            },
            blur: function(t) {
                if (this.cancelBlur) {
                    delete this.cancelBlur;
                    return
                };
                this._stop();
                this._refresh();
                if (this.previous !== this.element.val()) {
                    this._trigger("change", t)
                }
            },
            mousewheel: function(t, e) {
                if (!e) {
                    return
                };
                if (!this.spinning && !this._start(t)) {
                    return !1
                };
                this._spin((e > 0 ? 1 : -1) * this.options.step, t);
                clearTimeout(this.mousewheelTimer);
                this.mousewheelTimer = this._delay(function() {
                    if (this.spinning) {
                        this._stop(t)
                    }
                }, 100);
                t.preventDefault()
            },
            "mousedown .ui-spinner-button": function(e) {
                var i;
                i = this.element[0] === this.document[0].activeElement ? this.previous : this.element.val();

                function s() {
                    var t = this.element[0] === this.document[0].activeElement;
                    if (!t) {
                        this.element.focus();
                        this.previous = i;
                        this._delay(function() {
                            this.previous = i
                        })
                    }
                };
                e.preventDefault();
                s.call(this);
                this.cancelBlur = !0;
                this._delay(function() {
                    delete this.cancelBlur;
                    s.call(this)
                });
                if (this._start(e) === !1) {
                    return
                };
                this._repeat(null, t(e.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, e)
            },
            "mouseup .ui-spinner-button": "_stop",
            "mouseenter .ui-spinner-button": function(e) {
                if (!t(e.currentTarget).hasClass("ui-state-active")) {
                    return
                };
                if (this._start(e) === !1) {
                    return !1
                };
                this._repeat(null, t(e.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, e)
            },
            "mouseleave .ui-spinner-button": "_stop"
        },
        _draw: function() {
            var t = this.uiSpinner = this.element.addClass("ui-spinner-input").attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());
            this.element.attr("role", "spinbutton");
            this.buttons = t.find(".ui-spinner-button").attr("tabIndex", -1).button().removeClass("ui-corner-all");
            if (this.buttons.height() > Math.ceil(t.height() * 0.5) && t.height() > 0) {
                t.height(t.height())
            };
            if (this.options.disabled) {
                this.disable()
            }
        },
        _keydown: function(e) {
            var s = this.options,
                i = t.ui.keyCode;
            switch (e.keyCode) {
                case i.UP:
                    this._repeat(null, 1, e);
                    return !0;
                case i.DOWN:
                    this._repeat(null, -1, e);
                    return !0;
                case i.PAGE_UP:
                    this._repeat(null, s.page, e);
                    return !0;
                case i.PAGE_DOWN:
                    this._repeat(null, -s.page, e);
                    return !0
            };
            return !1
        },
        _uiSpinnerHtml: function() {
            return "<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>"
        },
        _buttonHtml: function() {
            return "<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon " + this.options.icons.up + "'>&#9650;</span></a><a class='ui-spinner-button ui-spinner-down ui-corner-br'><span class='ui-icon " + this.options.icons.down + "'>&#9660;</span></a>"
        },
        _start: function(t) {
            if (!this.spinning && this._trigger("start", t) === !1) {
                return !1
            };
            if (!this.counter) {
                this.counter = 1
            };
            this.spinning = !0;
            return !0
        },
        _repeat: function(t, e, i) {
            t = t || 500;
            clearTimeout(this.timer);
            this.timer = this._delay(function() {
                this._repeat(40, e, i)
            }, t);
            this._spin(e * this.options.step, i)
        },
        _spin: function(t, e) {
            var i = this.value() || 0;
            if (!this.counter) {
                this.counter = 1
            };
            i = this._adjustValue(i + t * this._increment(this.counter));
            if (!this.spinning || this._trigger("spin", e, {
                    value: i
                }) !== !1) {
                this._value(i);
                this.counter++
            }
        },
        _increment: function(e) {
            var i = this.options.incremental;
            if (i) {
                return t.isFunction(i) ? i(e) : Math.floor(e * e * e / 50000 - e * e / 500 + 17 * e / 200 + 1)
            };
            return 1
        },
        _precision: function() {
            var t = this._precisionOf(this.options.step);
            if (this.options.min !== null) {
                t = Math.max(t, this._precisionOf(this.options.min))
            };
            return t
        },
        _precisionOf: function(t) {
            var e = t.toString(),
                i = e.indexOf(".");
            return i === -1 ? 0 : e.length - i - 1
        },
        _adjustValue: function(t) {
            var s, i, e = this.options;
            s = e.min !== null ? e.min : 0;
            i = t - s;
            i = Math.round(i / e.step) * e.step;
            t = s + i;
            t = parseFloat(t.toFixed(this._precision()));
            if (e.max !== null && t > e.max) {
                return e.max
            };
            if (e.min !== null && t < e.min) {
                return e.min
            };
            return t
        },
        _stop: function(t) {
            if (!this.spinning) {
                return
            };
            clearTimeout(this.timer);
            clearTimeout(this.mousewheelTimer);
            this.counter = 0;
            this.spinning = !1;
            this._trigger("stop", t)
        },
        _setOption: function(t, e) {
            if (t === "culture" || t === "numberFormat") {
                var i = this._parse(this.element.val());
                this.options[t] = e;
                this.element.val(this._format(i));
                return
            };
            if (t === "max" || t === "min" || t === "step") {
                if (typeof e === "string") {
                    e = this._parse(e)
                }
            };
            if (t === "icons") {
                this.buttons.first().find(".ui-icon").removeClass(this.options.icons.up).addClass(e.up);
                this.buttons.last().find(".ui-icon").removeClass(this.options.icons.down).addClass(e.down)
            };
            this._super(t, e);
            if (t === "disabled") {
                if (e) {
                    this.element.prop("disabled", !0);
                    this.buttons.button("disable")
                } else {
                    this.element.prop("disabled", !1);
                    this.buttons.button("enable")
                }
            }
        },
        _setOptions: e(function(t) {
            this._super(t);
            this._value(this.element.val())
        }),
        _parse: function(t) {
            if (typeof t === "string" && t !== "") {
                t = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(t, 10, this.options.culture) : +t
            };
            return t === "" || isNaN(t) ? null : t
        },
        _format: function(t) {
            if (t === "") {
                return ""
            };
            return window.Globalize && this.options.numberFormat ? Globalize.format(t, this.options.numberFormat, this.options.culture) : t
        },
        _refresh: function() {
            this.element.attr({
                "aria-valuemin": this.options.min,
                "aria-valuemax": this.options.max,
                "aria-valuenow": this._parse(this.element.val())
            })
        },
        _value: function(t, e) {
            var i;
            if (t !== "") {
                i = this._parse(t);
                if (i !== null) {
                    if (!e) {
                        i = this._adjustValue(i)
                    };
                    t = this._format(i)
                }
            };
            this.element.val(t);
            this._refresh()
        },
        _destroy: function() {
            this.element.removeClass("ui-spinner-input").prop("disabled", !1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");
            this.uiSpinner.replaceWith(this.element)
        },
        stepUp: e(function(t) {
            this._stepUp(t)
        }),
        _stepUp: function(t) {
            if (this._start()) {
                this._spin((t || 1) * this.options.step);
                this._stop()
            }
        },
        stepDown: e(function(t) {
            this._stepDown(t)
        }),
        _stepDown: function(t) {
            if (this._start()) {
                this._spin((t || 1) * -this.options.step);
                this._stop()
            }
        },
        pageUp: e(function(t) {
            this._stepUp((t || 1) * this.options.page)
        }),
        pageDown: e(function(t) {
            this._stepDown((t || 1) * this.options.page)
        }),
        value: function(t) {
            if (!arguments.length) {
                return this._parse(this.element.val())
            };
            e(this._value).call(this, t)
        },
        widget: function() {
            return this.uiSpinner
        }
    })
}(jQuery));
(function(t, e) {
    var n = 0,
        i = /#.*$/;

    function o() {
        return ++n
    };

    function s(t) {
        return t.hash.length > 1 && decodeURIComponent(t.href.replace(i, "")) === decodeURIComponent(location.href.replace(i, ""))
    };
    t.widget("ui.tabs", {
        version: "1.10.3",
        delay: 300,
        options: {
            active: null,
            collapsible: !1,
            event: "click",
            heightStyle: "content",
            hide: null,
            show: null,
            activate: null,
            beforeActivate: null,
            beforeLoad: null,
            load: null
        },
        _create: function() {
            var i = this,
                e = this.options;
            this.running = !1;
            this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible", e.collapsible).delegate(".ui-tabs-nav > li", "mousedown" + this.eventNamespace, function(e) {
                if (t(this).is(".ui-state-disabled")) {
                    e.preventDefault()
                }
            }).delegate(".ui-tabs-anchor", "focus" + this.eventNamespace, function() {
                if (t(this).closest("li").is(".ui-state-disabled")) {
                    this.blur()
                }
            });
            this._processTabs();
            e.active = this._initialActive();
            if (t.isArray(e.disabled)) {
                e.disabled = t.unique(e.disabled.concat(t.map(this.tabs.filter(".ui-state-disabled"), function(t) {
                    return i.tabs.index(t)
                }))).sort()
            };
            if (this.options.active !== !1 && this.anchors.length) {
                this.active = this._findActive(e.active)
            } else {
                this.active = t()
            };
            this._refresh();
            if (this.active.length) {
                this.load(e.active)
            }
        },
        _initialActive: function() {
            var e = this.options.active,
                i = this.options.collapsible,
                s = location.hash.substring(1);
            if (e === null) {
                if (s) {
                    this.tabs.each(function(i, n) {
                        if (t(n).attr("aria-controls") === s) {
                            e = i;
                            return !1
                        }
                    })
                };
                if (e === null) {
                    e = this.tabs.index(this.tabs.filter(".ui-tabs-active"))
                };
                if (e === null || e === -1) {
                    e = this.tabs.length ? 0 : !1
                }
            };
            if (e !== !1) {
                e = this.tabs.index(this.tabs.eq(e));
                if (e === -1) {
                    e = i ? !1 : 0
                }
            };
            if (!i && e === !1 && this.anchors.length) {
                e = 0
            };
            return e
        },
        _getCreateEventData: function() {
            return {
                tab: this.active,
                panel: !this.active.length ? t() : this._getPanelForTab(this.active)
            }
        },
        _tabKeydown: function(e) {
            var s = t(this.document[0].activeElement).closest("li"),
                i = this.tabs.index(s),
                n = !0;
            if (this._handlePageNav(e)) {
                return
            };
            switch (e.keyCode) {
                case t.ui.keyCode.RIGHT:
                case t.ui.keyCode.DOWN:
                    i++;
                    break;
                case t.ui.keyCode.UP:
                case t.ui.keyCode.LEFT:
                    n = !1;
                    i--;
                    break;
                case t.ui.keyCode.END:
                    i = this.anchors.length - 1;
                    break;
                case t.ui.keyCode.HOME:
                    i = 0;
                    break;
                case t.ui.keyCode.SPACE:
                    e.preventDefault();
                    clearTimeout(this.activating);
                    this._activate(i);
                    return;
                case t.ui.keyCode.ENTER:
                    e.preventDefault();
                    clearTimeout(this.activating);
                    this._activate(i === this.options.active ? !1 : i);
                    return;
                default:
                    return
            };
            e.preventDefault();
            clearTimeout(this.activating);
            i = this._focusNextTab(i, n);
            if (!e.ctrlKey) {
                s.attr("aria-selected", "false");
                this.tabs.eq(i).attr("aria-selected", "true");
                this.activating = this._delay(function() {
                    this.option("active", i)
                }, this.delay)
            }
        },
        _panelKeydown: function(e) {
            if (this._handlePageNav(e)) {
                return
            };
            if (e.ctrlKey && e.keyCode === t.ui.keyCode.UP) {
                e.preventDefault();
                this.active.focus()
            }
        },
        _handlePageNav: function(e) {
            if (e.altKey && e.keyCode === t.ui.keyCode.PAGE_UP) {
                this._activate(this._focusNextTab(this.options.active - 1, !1));
                return !0
            };
            if (e.altKey && e.keyCode === t.ui.keyCode.PAGE_DOWN) {
                this._activate(this._focusNextTab(this.options.active + 1, !0));
                return !0
            }
        },
        _findNextTab: function(e, i) {
            var s = this.tabs.length - 1;

            function n() {
                if (e > s) {
                    e = 0
                };
                if (e < 0) {
                    e = s
                };
                return e
            }
            while (t.inArray(n(), this.options.disabled) !== -1) {
                e = i ? e + 1 : e - 1
            };
            return e
        },
        _focusNextTab: function(t, e) {
            t = this._findNextTab(t, e);
            this.tabs.eq(t).focus();
            return t
        },
        _setOption: function(t, e) {
            if (t === "active") {
                this._activate(e);
                return
            };
            if (t === "disabled") {
                this._setupDisabled(e);
                return
            };
            this._super(t, e);
            if (t === "collapsible") {
                this.element.toggleClass("ui-tabs-collapsible", e);
                if (!e && this.options.active === !1) {
                    this._activate(0)
                }
            };
            if (t === "event") {
                this._setupEvents(e)
            };
            if (t === "heightStyle") {
                this._setupHeightStyle(e)
            }
        },
        _tabId: function(t) {
            return t.attr("aria-controls") || "ui-tabs-" + o()
        },
        _sanitizeSelector: function(t) {
            return t ? t.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : ""
        },
        refresh: function() {
            var e = this.options,
                i = this.tablist.children(":has(a[href])");
            e.disabled = t.map(i.filter(".ui-state-disabled"), function(t) {
                return i.index(t)
            });
            this._processTabs();
            if (e.active === !1 || !this.anchors.length) {
                e.active = !1;
                this.active = t()
            } else if (this.active.length && !t.contains(this.tablist[0], this.active[0])) {
                if (this.tabs.length === e.disabled.length) {
                    e.active = !1;
                    this.active = t()
                } else {
                    this._activate(this._findNextTab(Math.max(0, e.active - 1), !1))
                }
            } else {
                e.active = this.tabs.index(this.active)
            };
            this._refresh()
        },
        _refresh: function() {
            this._setupDisabled(this.options.disabled);
            this._setupEvents(this.options.event);
            this._setupHeightStyle(this.options.heightStyle);
            this.tabs.not(this.active).attr({
                "aria-selected": "false",
                tabIndex: -1
            });
            this.panels.not(this._getPanelForTab(this.active)).hide().attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            });
            if (!this.active.length) {
                this.tabs.eq(0).attr("tabIndex", 0)
            } else {
                this.active.addClass("ui-tabs-active ui-state-active").attr({
                    "aria-selected": "true",
                    tabIndex: 0
                });
                this._getPanelForTab(this.active).show().attr({
                    "aria-expanded": "true",
                    "aria-hidden": "false"
                })
            }
        },
        _processTabs: function() {
            var e = this;
            this.tablist = this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role", "tablist");
            this.tabs = this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({
                role: "tab",
                tabIndex: -1
            });
            this.anchors = this.tabs.map(function() {
                return t("a", this)[0]
            }).addClass("ui-tabs-anchor").attr({
                role: "presentation",
                tabIndex: -1
            });
            this.panels = t();
            this.anchors.each(function(i, n) {
                var a, o, l, h = t(n).uniqueId().attr("id"),
                    r = t(n).closest("li"),
                    u = r.attr("aria-controls");
                if (s(n)) {
                    a = n.hash;
                    o = e.element.find(e._sanitizeSelector(a))
                } else {
                    l = e._tabId(r);
                    a = "#" + l;
                    o = e.element.find(a);
                    if (!o.length) {
                        o = e._createPanel(l);
                        o.insertAfter(e.panels[i - 1] || e.tablist)
                    };
                    o.attr("aria-live", "polite")
                };
                if (o.length) {
                    e.panels = e.panels.add(o)
                };
                if (u) {
                    r.data("ui-tabs-aria-controls", u)
                };
                r.attr({
                    "aria-controls": a.substring(1),
                    "aria-labelledby": h
                });
                o.attr("aria-labelledby", h)
            });
            this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role", "tabpanel")
        },
        _getList: function() {
            return this.element.find("ol,ul").eq(0)
        },
        _createPanel: function(e) {
            return t("<div>").attr("id", e).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", !0)
        },
        _setupDisabled: function(e) {
            if (t.isArray(e)) {
                if (!e.length) {
                    e = !1
                } else if (e.length === this.anchors.length) {
                    e = !0
                }
            };
            for (var i = 0, s;
                (s = this.tabs[i]); i++) {
                if (e === !0 || t.inArray(i, e) !== -1) {
                    t(s).addClass("ui-state-disabled").attr("aria-disabled", "true")
                } else {
                    t(s).removeClass("ui-state-disabled").removeAttr("aria-disabled")
                }
            };
            this.options.disabled = e
        },
        _setupEvents: function(e) {
            var i = {
                click: function(t) {
                    t.preventDefault()
                }
            };
            if (e) {
                t.each(e.split(" "), function(t, e) {
                    i[e] = "_eventHandler"
                })
            };
            this._off(this.anchors.add(this.tabs).add(this.panels));
            this._on(this.anchors, i);
            this._on(this.tabs, {
                keydown: "_tabKeydown"
            });
            this._on(this.panels, {
                keydown: "_panelKeydown"
            });
            this._focusable(this.tabs);
            this._hoverable(this.tabs)
        },
        _setupHeightStyle: function(e) {
            var i, s = this.element.parent();
            if (e === "fill") {
                i = s.height();
                i -= this.element.outerHeight() - this.element.height();
                this.element.siblings(":visible").each(function() {
                    var e = t(this),
                        s = e.css("position");
                    if (s === "absolute" || s === "fixed") {
                        return
                    };
                    i -= e.outerHeight(!0)
                });
                this.element.children().not(this.panels).each(function() {
                    i -= t(this).outerHeight(!0)
                });
                this.panels.each(function() {
                    t(this).height(Math.max(0, i - t(this).innerHeight() + t(this).height()))
                }).css("overflow", "auto")
            } else if (e === "auto") {
                i = 0;
                this.panels.each(function() {
                    i = Math.max(i, t(this).height("").height())
                }).height(i)
            }
        },
        _eventHandler: function(e) {
            var n = this.options,
                s = this.active,
                u = t(e.currentTarget),
                i = u.closest("li"),
                o = i[0] === s[0],
                a = o && n.collapsible,
                r = a ? t() : this._getPanelForTab(i),
                l = !s.length ? t() : this._getPanelForTab(s),
                h = {
                    oldTab: s,
                    oldPanel: l,
                    newTab: a ? t() : i,
                    newPanel: r
                };
            e.preventDefault();
            if (i.hasClass("ui-state-disabled") || i.hasClass("ui-tabs-loading") || this.running || (o && !n.collapsible) || (this._trigger("beforeActivate", e, h) === !1)) {
                return
            };
            n.active = a ? !1 : this.tabs.index(i);
            this.active = o ? t() : i;
            if (this.xhr) {
                this.xhr.abort()
            };
            if (!l.length && !r.length) {
                t.error("jQuery UI Tabs: Mismatching fragment identifier.")
            };
            if (r.length) {
                this.load(this.tabs.index(i), e)
            };
            this._toggle(e, h)
        },
        _toggle: function(e, i) {
            var n = this,
                s = i.newPanel,
                o = i.oldPanel;
            this.running = !0;

            function a() {
                n.running = !1;
                n._trigger("activate", e, i)
            };

            function r() {
                i.newTab.closest("li").addClass("ui-tabs-active ui-state-active");
                if (s.length && n.options.show) {
                    n._show(s, n.options.show, a)
                } else {
                    s.show();
                    a()
                }
            };
            if (o.length && this.options.hide) {
                this._hide(o, this.options.hide, function() {
                    i.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
                    r()
                })
            } else {
                i.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
                o.hide();
                r()
            };
            o.attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            });
            i.oldTab.attr("aria-selected", "false");
            if (s.length && o.length) {
                i.oldTab.attr("tabIndex", -1)
            } else if (s.length) {
                this.tabs.filter(function() {
                    return t(this).attr("tabIndex") === 0
                }).attr("tabIndex", -1)
            };
            s.attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            });
            i.newTab.attr({
                "aria-selected": "true",
                tabIndex: 0
            })
        },
        _activate: function(e) {
            var s, i = this._findActive(e);
            if (i[0] === this.active[0]) {
                return
            };
            if (!i.length) {
                i = this.active
            };
            s = i.find(".ui-tabs-anchor")[0];
            this._eventHandler({
                target: s,
                currentTarget: s,
                preventDefault: t.noop
            })
        },
        _findActive: function(e) {
            return e === !1 ? t() : this.tabs.eq(e)
        },
        _getIndex: function(t) {
            if (typeof t === "string") {
                t = this.anchors.index(this.anchors.filter("[href$='" + t + "']"))
            };
            return t
        },
        _destroy: function() {
            if (this.xhr) {
                this.xhr.abort()
            };
            this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible");
            this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role");
            this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeUniqueId();
            this.tabs.add(this.panels).each(function() {
                if (t.data(this, "ui-tabs-destroy")) {
                    t(this).remove()
                } else {
                    t(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")
                }
            });
            this.tabs.each(function() {
                var e = t(this),
                    i = e.data("ui-tabs-aria-controls");
                if (i) {
                    e.attr("aria-controls", i).removeData("ui-tabs-aria-controls")
                } else {
                    e.removeAttr("aria-controls")
                }
            });
            this.panels.show();
            if (this.options.heightStyle !== "content") {
                this.panels.css("height", "")
            }
        },
        enable: function(i) {
            var s = this.options.disabled;
            if (s === !1) {
                return
            };
            if (i === e) {
                s = !1
            } else {
                i = this._getIndex(i);
                if (t.isArray(s)) {
                    s = t.map(s, function(t) {
                        return t !== i ? t : null
                    })
                } else {
                    s = t.map(this.tabs, function(t, e) {
                        return e !== i ? e : null
                    })
                }
            };
            this._setupDisabled(s)
        },
        disable: function(i) {
            var s = this.options.disabled;
            if (s === !0) {
                return
            };
            if (i === e) {
                s = !0
            } else {
                i = this._getIndex(i);
                if (t.inArray(i, s) !== -1) {
                    return
                };
                if (t.isArray(s)) {
                    s = t.merge([i], s).sort()
                } else {
                    s = [i]
                }
            };
            this._setupDisabled(s)
        },
        load: function(e, i) {
            e = this._getIndex(e);
            var o = this,
                n = this.tabs.eq(e),
                r = n.find(".ui-tabs-anchor"),
                a = this._getPanelForTab(n),
                l = {
                    tab: n,
                    panel: a
                };
            if (s(r[0])) {
                return
            };
            this.xhr = t.ajax(this._ajaxSettings(r, i, l));
            if (this.xhr && this.xhr.statusText !== "canceled") {
                n.addClass("ui-tabs-loading");
                a.attr("aria-busy", "true");
                this.xhr.success(function(t) {
                    setTimeout(function() {
                        a.html(t);
                        o._trigger("load", i, l)
                    }, 1)
                }).complete(function(t, e) {
                    setTimeout(function() {
                        if (e === "abort") {
                            o.panels.stop(!1, !0)
                        };
                        n.removeClass("ui-tabs-loading");
                        a.removeAttr("aria-busy");
                        if (t === o.xhr) {
                            delete o.xhr
                        }
                    }, 1)
                })
            }
        },
        _ajaxSettings: function(e, i, s) {
            var n = this;
            return {
                url: e.attr("href"),
                beforeSend: function(e, o) {
                    return n._trigger("beforeLoad", i, t.extend({
                        jqXHR: e,
                        ajaxSettings: o
                    }, s))
                }
            }
        },
        _getPanelForTab: function(e) {
            var i = t(e).attr("aria-controls");
            return this.element.find(this._sanitizeSelector("#" + i))
        }
    })
})(jQuery);
(function(t) {
    var e = 0;

    function i(e, i) {
        var s = (e.attr("aria-describedby") || "").split(/\s+/);
        s.push(i);
        e.data("ui-tooltip-id", i).attr("aria-describedby", t.trim(s.join(" ")))
    };

    function s(e) {
        var n = e.data("ui-tooltip-id"),
            i = (e.attr("aria-describedby") || "").split(/\s+/),
            s = t.inArray(n, i);
        if (s !== -1) {
            i.splice(s, 1)
        };
        e.removeData("ui-tooltip-id");
        i = t.trim(i.join(" "));
        if (i) {
            e.attr("aria-describedby", i)
        } else {
            e.removeAttr("aria-describedby")
        }
    };
    t.widget("ui.tooltip", {
        version: "1.10.3",
        options: {
            content: function() {
                var e = t(this).attr("title") || "";
                return t("<a>").text(e).html()
            },
            hide: !0,
            items: "[title]:not([disabled])",
            position: {
                my: "left top+15",
                at: "left bottom",
                collision: "flipfit flip"
            },
            show: !0,
            tooltipClass: null,
            track: !1,
            close: null,
            open: null
        },
        _create: function() {
            this._on({
                mouseover: "open",
                focusin: "open"
            });
            this.tooltips = {};
            this.parents = {};
            if (this.options.disabled) {
                this._disable()
            }
        },
        _setOption: function(e, i) {
            var s = this;
            if (e === "disabled") {
                this[i ? "_disable" : "_enable"]();
                this.options[e] = i;
                return
            };
            this._super(e, i);
            if (e === "content") {
                t.each(this.tooltips, function(t, e) {
                    s._updateContent(e)
                })
            }
        },
        _disable: function() {
            var e = this;
            t.each(this.tooltips, function(i, s) {
                var n = t.Event("blur");
                n.target = n.currentTarget = s[0];
                e.close(n, !0)
            });
            this.element.find(this.options.items).addBack().each(function() {
                var e = t(this);
                if (e.is("[title]")) {
                    e.data("ui-tooltip-title", e.attr("title")).attr("title", "")
                }
            })
        },
        _enable: function() {
            this.element.find(this.options.items).addBack().each(function() {
                var e = t(this);
                if (e.data("ui-tooltip-title")) {
                    e.attr("title", e.data("ui-tooltip-title"))
                }
            })
        },
        open: function(e) {
            var s = this,
                i = t(e ? e.target : this.element).closest(this.options.items);
            if (!i.length || i.data("ui-tooltip-id")) {
                return
            };
            if (i.attr("title")) {
                i.data("ui-tooltip-title", i.attr("title"))
            };
            i.data("ui-tooltip-open", !0);
            if (e && e.type === "mouseover") {
                i.parents().each(function() {
                    var e = t(this),
                        i;
                    if (e.data("ui-tooltip-open")) {
                        i = t.Event("blur");
                        i.target = i.currentTarget = this;
                        s.close(i, !0)
                    };
                    if (e.attr("title")) {
                        e.uniqueId();
                        s.parents[this.id] = {
                            element: this,
                            title: e.attr("title")
                        };
                        e.attr("title", "")
                    }
                })
            };
            this._updateContent(i, e)
        },
        _updateContent: function(t, e) {
            var i, s = this.options.content,
                n = this,
                o = e ? e.type : null;
            if (typeof s === "string") {
                return this._open(e, t, s)
            };
            i = s.call(t[0], function(i) {
                if (!t.data("ui-tooltip-open")) {
                    return
                };
                n._delay(function() {
                    if (e) {
                        e.type = o
                    };
                    this._open(e, t, i)
                })
            });
            if (i) {
                this._open(e, t, i)
            }
        },
        _open: function(e, s, n) {
            var o, a, h, r = t.extend({}, this.options.position);
            if (!n) {
                return
            };
            o = this._find(s);
            if (o.length) {
                o.find(".ui-tooltip-content").html(n);
                return
            };
            if (s.is("[title]")) {
                if (e && e.type === "mouseover") {
                    s.attr("title", "")
                } else {
                    s.removeAttr("title")
                }
            };
            o = this._tooltip(s);
            i(s, o.attr("id"));
            o.find(".ui-tooltip-content").html(n);

            function l(t) {
                r.of = t;
                if (o.is(":hidden")) {
                    return
                };
                o.position(r)
            };
            if (this.options.track && e && /^mouse/.test(e.type)) {
                this._on(this.document, {
                    mousemove: l
                });
                l(e)
            } else {
                o.position(t.extend({
                    of: s
                }, this.options.position))
            };
            o.hide();
            this._show(o, this.options.show);
            if (this.options.show && this.options.show.delay) {
                h = this.delayedShow = setInterval(function() {
                    if (o.is(":visible")) {
                        l(r.of);
                        clearInterval(h)
                    }
                }, t.fx.interval)
            };
            this._trigger("open", e, {
                tooltip: o
            });
            a = {
                keyup: function(e) {
                    if (e.keyCode === t.ui.keyCode.ESCAPE) {
                        var i = t.Event(e);
                        i.currentTarget = s[0];
                        this.close(i, !0)
                    }
                },
                remove: function() {
                    this._removeTooltip(o)
                }
            };
            if (!e || e.type === "mouseover") {
                a.mouseleave = "close"
            };
            if (!e || e.type === "focusin") {
                a.focusout = "close"
            };
            this._on(!0, s, a)
        },
        close: function(e) {
            var o = this,
                i = t(e ? e.currentTarget : this.element),
                n = this._find(i);
            if (this.closing) {
                return
            };
            clearInterval(this.delayedShow);
            if (i.data("ui-tooltip-title")) {
                i.attr("title", i.data("ui-tooltip-title"))
            };
            s(i);
            n.stop(!0);
            this._hide(n, this.options.hide, function() {
                o._removeTooltip(t(this))
            });
            i.removeData("ui-tooltip-open");
            this._off(i, "mouseleave focusout keyup");
            if (i[0] !== this.element[0]) {
                this._off(i, "remove")
            };
            this._off(this.document, "mousemove");
            if (e && e.type === "mouseleave") {
                t.each(this.parents, function(e, i) {
                    t(i.element).attr("title", i.title);
                    delete o.parents[e]
                })
            };
            this.closing = !0;
            this._trigger("close", e, {
                tooltip: n
            });
            this.closing = !1
        },
        _tooltip: function(i) {
            var n = "ui-tooltip-" + e++,
                s = t("<div>").attr({
                    id: n,
                    role: "tooltip"
                }).addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content " + (this.options.tooltipClass || ""));
            t("<div>").addClass("ui-tooltip-content").appendTo(s);
            s.appendTo(this.document[0].body);
            this.tooltips[n] = i;
            return s
        },
        _find: function(e) {
            var i = e.data("ui-tooltip-id");
            return i ? t("#" + i) : t()
        },
        _removeTooltip: function(t) {
            t.remove();
            delete this.tooltips[t.attr("id")]
        },
        _destroy: function() {
            var e = this;
            t.each(this.tooltips, function(i, s) {
                var n = t.Event("blur");
                n.target = n.currentTarget = s[0];
                e.close(n, !0);
                t("#" + i).remove();
                if (s.data("ui-tooltip-title")) {
                    s.attr("title", s.data("ui-tooltip-title"));
                    s.removeData("ui-tooltip-title")
                }
            })
        }
    })
}(jQuery));
(function(t, i) {
    var o = 'ui-state-active',
        s = 'ui-state-hover',
        p = 'ui-state-disabled',
        e = t.ui.keyCode,
        l = e.UP,
        c = e.DOWN,
        a = e.RIGHT,
        f = e.LEFT,
        r = e.PAGE_UP,
        u = e.PAGE_DOWN,
        h = e.HOME,
        d = e.END,
        m = t.browser.msie,
        g = t.browser.mozilla ? 'DOMMouseScroll' : 'mousewheel',
        n = '.uispinner',
        v = [l, c, a, f, r, u, h, d, e.BACKSPACE, e.DELETE, e.TAB],
        b;
    t.widget('ui.spinner', {
        options: {
            min: null,
            max: null,
            allowNull: !1,
            group: '',
            point: '.',
            prefix: '',
            suffix: '',
            places: null,
            defaultStep: 1,
            largeStep: 10,
            mouseWheel: !0,
            increment: 'slow',
            className: null,
            showOn: 'always',
            width: 16,
            upIconClass: 'ui-icon-triangle-1-n',
            downIconClass: 'ui-icon-triangle-1-s',
            format: function(t, e) {
                var i = this,
                    s = /(\d+)(\d{3})/,
                    n = ((isNaN(t) ? 0 : Math.abs(t)).toFixed(e)) + '';
                for (n = n.replace('.', i.point); s.test(n) && i.group; n = n.replace(s, '$1' + i.group + '$2')) {};
                return (t < 0 ? '-' : '') + i.prefix + n + i.suffix
            },
            parse: function(t) {
                var e = this;
                if (e.group == '.') t = t.replace('.', '');
                if (e.point != '.') t = t.replace(e.point, '.');
                return parseFloat(t.replace(/[^0-9\-\.]/g, ''))
            }
        },
        _create: function() {
            var t = this,
                e = t.element,
                n = e.attr('type');
            if (!e.is('input') || ((n != 'text') && (n != 'number'))) {
                console.error('Invalid target for ui.spinner');
                return
            };
            t._procOptions(!0);
            t._createButtons(e);
            if (!e.is(':enabled')) t.disable()
        },
        _createButtons: function(i) {
            function R(t) {
                return t == 'auto' ? 0 : parseInt(t)
            };
            var p = this,
                w = p.options,
                I = w.className,
                y = w.width,
                C = w.showOn,
                k = t.support.boxModel,
                V = i.outerHeight(),
                D = p.oMargin = R(i.css('margin-right')),
                N = p.wrapper = i.css({
                    width: (p.oWidth = (k ? i.width() : i.outerWidth())) - y,
                    marginRight: D + y,
                    textAlign: 'right'
                }).after('<span class="ui-spinner ui-widget"></span>').next(),
                x = p.btnContainer = t('<div class="ui-spinner-buttons"><div class="ui-spinner-up ui-spinner-button ui-state-default ui-corner-tr"><span class="ui-icon ' + w.upIconClass + '">&nbsp;</span></div><div class="ui-spinner-down ui-spinner-button ui-state-default ui-corner-br"><span class="ui-icon ' + w.downIconClass + '">&nbsp;</span></div></div>'),
                S, A, g, W, M, F, O, T, B, E, G = i[0].dir == 'rtl';
            if (I) N.addClass(I);
            N.append(x.css({
                height: V,
                left: -y - D,
                top: (i.offset().top - N.offset().top) + 'px'
            }));
            g = p.buttons = x.find('.ui-spinner-button');
            g.css({
                width: y - (k ? g.outerWidth() - g.width() : 0),
                height: V / 2 - (k ? g.outerHeight() - g.height() : 0)
            });
            S = g[0];
            A = g[1];
            W = g.find('.ui-icon');
            W.css({
                marginLeft: (g.innerWidth() - W.width()) / 2,
                marginTop: (g.innerHeight() - W.height()) / 2
            });
            x.width(g.outerWidth());
            if (C != 'always') x.css('opacity', 0);
            if (C == 'hover' || C == 'both') g.add(i).bind('mouseenter' + n, function() {
                H(function() {
                    O = !0;
                    if (!p.focused || (C == 'hover')) p.showButtons()
                })
            }).bind('mouseleave' + n, function() {
                H(function() {
                    O = !1;
                    if (!p.focused || (C == 'hover')) p.hideButtons()
                })
            });
            g.hover(function() {
                p.buttons.removeClass(s);
                if (!w.disabled) t(this).addClass(s)
            }, function() {
                t(this).removeClass(s)
            }).mousedown(K).mouseup(P).mouseout(P);
            if (m) g.dblclick(function() {
                if (!w.disabled) {
                    p._change();
                    p._doSpin((this === S ? 1 : -1) * w.step)
                };
                return !1
            }).bind('selectstart', function() {
                return !1
            });
            i.bind('keydown' + n, function(e) {
                var n, m, i, s = e.keyCode;
                if (e.ctrl || e.alt) return !0;
                if (L(s)) B = !0;
                if (T) return !1;
                switch (s) {
                    case l:
                    case r:
                        n = 1;
                        m = s == r;
                        break;
                    case c:
                    case u:
                        n = -1;
                        m = s == u;
                        break;
                    case a:
                    case f:
                        n = (s == a) ^ G ? 1 : -1;
                        break;
                    case h:
                        i = p.options.min;
                        if (i != null) p._setValue(i);
                        return !1;
                    case d:
                        i = p.options.max;
                        i = p.options.max;
                        if (i != null) p._setValue(i);
                        return !1
                };
                if (n) {
                    if (!T && !w.disabled) {
                        keyDir = n;
                        t(n > 0 ? S : A).addClass(o);
                        T = !0;
                        p._startSpin(n, m)
                    };
                    return !1
                }
            }).bind('keyup' + n, function(t) {
                if (t.ctrl || t.alt) return !0;
                if (L(e)) B = !1;
                switch (t.keyCode) {
                    case l:
                    case a:
                    case r:
                    case c:
                    case f:
                    case u:
                        g.removeClass(o);
                        p._stopSpin();
                        T = !1;
                        return !1
                }
            }).bind('keypress' + n, function(t) {
                if (U(t.keyCode, t.charCode)) return !1
            }).bind('change' + n, function() {
                p._change()
            }).bind('focus' + n, function() {
                function t() {
                    p.element.select()
                };
                m ? t() : setTimeout(t, 0);
                p.focused = !0;
                b = p;
                if (!O && (C == 'focus' || C == 'both')) p.showButtons()
            }).bind('blur' + n, function() {
                p.focused = !1;
                if (!O && (C == 'focus' || C == 'both')) p.hideButtons()
            });

            function L(t) {
                for (var e = 0; e < v.length; e++)
                    if (v[e] == t) return !0;
                return !1
            };

            function U(t, e) {
                if (B) return !1;
                var n = String.fromCharCode(e || t),
                    i = p.options;
                if ((n >= '0') && (n <= '9') || (n == '-')) return !1;
                if (((p.places > 0) && (n == i.point)) || (n == i.group)) return !1;
                return !0
            };

            function H(t) {
                if (M) {
                    if (t === F) return;
                    clearTimeout(M)
                };
                F = t;
                M = setTimeout(e, 100);

                function e() {
                    M = 0;
                    t()
                }
            };

            function K() {
                if (!w.disabled) {
                    var e = p.element[0],
                        n = (this === S ? 1 : -1);
                    e.focus();
                    e.select();
                    t(this).addClass(o);
                    E = !0;
                    p._startSpin(n)
                };
                return !1
            };

            function P() {
                if (E) {
                    t(this).removeClass(o);
                    p._stopSpin();
                    E = !1
                };
                return !1
            }
        },
        _procOptions: function(t) {
            var u = this,
                a = u.element,
                i = u.options,
                s = i.min,
                o = i.max,
                l = i.step,
                c = i.places,
                r = -1,
                e;
            if (i.increment == 'slow') i.increment = [{
                count: 1,
                mult: 1,
                delay: 250
            }, {
                count: 3,
                mult: 1,
                delay: 100
            }, {
                count: 0,
                mult: 1,
                delay: 50
            }];
            else if (i.increment == 'fast') i.increment = [{
                count: 1,
                mult: 1,
                delay: 250
            }, {
                count: 19,
                mult: 1,
                delay: 100
            }, {
                count: 80,
                mult: 1,
                delay: 20
            }, {
                count: 100,
                mult: 10,
                delay: 20
            }, {
                count: 0,
                mult: 100,
                delay: 20
            }];
            if ((s == null) && ((e = a.attr('min')) != null)) s = parseFloat(e);
            if ((o == null) && ((e = a.attr('max')) != null)) o = parseFloat(e);
            if (!l && ((e = a.attr('step')) != null))
                if (e != 'any') {
                    l = parseFloat(e);
                    i.largeStep *= l
                };
            i.step = l = l || i.defaultStep;
            if ((c == null) && ((e = l + '').indexOf('.') != -1)) c = e.length - e.indexOf('.') - 1;
            u.places = c;
            if ((o != null) && (s != null)) {
                if (s > o) s = o;
                r = Math.max(Math.max(r, i.format(o, c, a).length), i.format(s, c, a).length)
            };
            if (t) u.inputMaxLength = a[0].maxLength;
            e = u.inputMaxLength;
            if (e > 0) {
                r = r > 0 ? Math.min(e, r) : e;
                e = Math.pow(10, r) - 1;
                if ((o == null) || (o > e)) o = e;
                e = -(e + 1) / 10 + 1;
                if ((s == null) || (s < e)) s = e
            };
            if (r > 0) a.attr('maxlength', r);
            i.min = s;
            i.max = o;
            u._change();
            a.unbind(g + n);
            if (i.mouseWheel) a.bind(g + n, u._mouseWheel)
        },
        _mouseWheel: function(e) {
            var n = t.data(this, 'spinner');
            if (!n.options.disabled && n.focused && (b === n)) {
                n._change();
                n._doSpin(((e.wheelDelta || -e.detail) > 0 ? 1 : -1) * n.options.step);
                return !1
            }
        },
        _setTimer: function(t, e, i) {
            var n = this;
            n._stopSpin();
            n.timer = setInterval(s, t);

            function s() {
                n._spin(e, i)
            }
        },
        _stopSpin: function() {
            if (this.timer) {
                clearInterval(this.timer);
                this.timer = 0
            }
        },
        _startSpin: function(t, e) {
            var n = this,
                s = n.options,
                i = s.increment;
            n._change();
            n._doSpin(t * (e ? n.options.largeStep : n.options.step));
            if (i && i.length > 0) {
                n.counter = 0;
                n.incCounter = 0;
                n._setTimer(i[0].delay, t, e)
            }
        },
        _spin: function(t, n) {
            var e = this,
                s = e.options.increment,
                i = s[e.incCounter];
            e._doSpin(t * i.mult * (n ? e.options.largeStep : e.options.step));
            e.counter++;
            if ((e.counter > i.count) && (e.incCounter < s.length - 1)) {
                e.counter = 0;
                i = s[++e.incCounter];
                e._setTimer(i.delay, t, n)
            }
        },
        _doSpin: function(t) {
            var e = this,
                n = e.curvalue;
            if (n == null) n = (t > 0 ? e.options.min : e.options.max) || 0;
            e._setValue(n + t)
        },
        _parseValue: function() {
            var t = this.element.val();
            return t ? this.options.parse(t, this.element) : null
        },
        _validate: function(t) {
            var i = this.options,
                e = i.min,
                n = i.max;
            if ((t == null) && !i.allowNull) t = this.curvalue != null ? this.curvalue : e || n || 0;
            if ((n != null) && (t > n)) return n;
            else if ((e != null) && (t < e)) return e;
            else return t
        },
        _change: function() {
            var t = this,
                e = t._parseValue(),
                n = t.options.min,
                i = t.options.max;
            if (!t.selfChange) {
                if (isNaN(e)) e = t.curvalue;
                t._setValue(e, !0)
            }
        },
        _setOption: function(e, n) {
            t.Widget.prototype._setOption.call(this, e, n);
            this._procOptions()
        },
        increment: function() {
            this._doSpin(this.options.step)
        },
        decrement: function() {
            this._doSpin(-this.options.step)
        },
        showButtons: function(t) {
            var e = this.btnContainer.stop();
            if (t) e.css('opacity', 1);
            else e.fadeTo('fast', 1)
        },
        hideButtons: function(t) {
            var e = this.btnContainer.stop();
            if (t) e.css('opacity', 0);
            else e.fadeTo('fast', 0);
            this.buttons.removeClass(s)
        },
        _setValue: function(t, n) {
            var e = this;
            e.curvalue = t = e._validate(t);
            e.element.val(t != null ? e.options.format(t, e.places, e.element) : '');
            if (!n) {
                e.selfChange = !0;
                e.element.change();
                e.selfChange = !1
            }
        },
        value: function(t) {
            if (arguments.length) {
                this._setValue(t);
                return this.element
            };
            return this.curvalue
        },
        enable: function() {
            this.buttons.removeClass(p);
            this.element[0].disabled = !1;
            t.Widget.prototype.enable.call(this)
        },
        disable: function() {
            this.buttons.addClass(p).removeClass(s);
            this.element[0].disabled = !0;
            t.Widget.prototype.disable.call(this)
        },
        destroy: function(e) {
            this.wrapper.remove();
            this.element.unbind(n).css({
                width: this.oWidth,
                marginRight: this.oMargin
            });
            t.Widget.prototype.destroy.call(this)
        }
    })
})(jQuery);
/*
 jQuery UI Spinner 1.20

 Copyright (c) 2009-2010 Brant Burnett
 Dual licensed under the MIT or GPL Version 2 licenses.
*/
(function(j) {
    var s = "ui-state-active",
        l = j.ui.keyCode,
        C = l.UP,
        D = l.DOWN,
        t = l.RIGHT,
        E = l.LEFT,
        u = l.PAGE_UP,
        v = l.PAGE_DOWN,
        J = l.HOME,
        K = l.END,
        L = j.browser.msie,
        M = j.browser.mozilla ? "DOMMouseScroll" : "mousewheel",
        N = [C, D, t, E, u, v, J, K, l.BACKSPACE, l.DELETE, l.TAB],
        O;
    j.widget("ui.spinner", {
        options: {
            min: null,
            max: null,
            allowNull: false,
            group: "",
            point: ".",
            prefix: "",
            suffix: "",
            places: null,
            defaultStep: 1,
            largeStep: 10,
            mouseWheel: true,
            increment: "slow",
            className: null,
            showOn: "always",
            width: 16,
            upIconClass: "ui-icon-triangle-1-n",
            downIconClass: "ui-icon-triangle-1-s",
            format: function(a, b) {
                var d = /(\d+)(\d{3})/,
                    g = (isNaN(a) ? 0 : Math.abs(a)).toFixed(b) + "";
                for (g = g.replace(".", this.point); d.test(g) && this.group; g = g.replace(d, "$1" + this.group + "$2"));
                return (a < 0 ? "-" : "") + this.prefix + g + this.suffix
            },
            parse: function(a) {
                if (this.group == ".") a = a.replace(".", "");
                if (this.point != ".") a = a.replace(this.point, ".");
                return parseFloat(a.replace(/[^0-9\-\.]/g, ""))
            }
        },
        _create: function() {
            var a = this.element,
                b = a.attr("type");
            if (!a.is("input") || b != "text" && b != "number") console.error("Invalid target for ui.spinner");
            else {
                this._procOptions(true);
                this._createButtons(a);
                a.is(":enabled") || this.disable()
            }
        },
        _createButtons: function(a) {
            function b(e) {
                return e == "auto" ? 0 : parseInt(e)
            }

            function d(e) {
                for (var h = 0; h < N.length; h++)
                    if (N[h] == e) return true;
                return false
            }

            function g(e, h) {
                if (F) return false;
                var m = String.fromCharCode(h || e),
                    o = c.options;
                if (m >= "0" && m <= "9" || m == "-") return false;
                if (c.places > 0 && m == o.point || m == o.group) return false;
                return true
            }

            function i(e) {
                function h() {
                    w = 0;
                    e()
                }
                if (w) {
                    if (e === P) return;
                    clearTimeout(w)
                }
                P = e;
                w = setTimeout(h,
                    100)
            }

            function p() {
                if (!f.disabled) {
                    var e = c.element[0],
                        h = this === x ? 1 : -1;
                    e.focus();
                    e.select();
                    j(this).addClass(s);
                    G = true;
                    c._startSpin(h)
                }
                return false
            }

            function q() {
                if (G) {
                    j(this).removeClass(s);
                    c._stopSpin();
                    G = false
                }
                return false
            }
            var c = this,
                f = c.options,
                r = f.className,
                y = f.width,
                n = f.showOn,
                H = j.support.boxModel,
                Q = a.outerHeight(),
                R = c.oMargin = b(a.css("margin-right")),
                I = c.wrapper = a.css({
                    width: (c.oWidth = H ? a.width() : a.outerWidth()) - y,
                    marginRight: R + y,
                    textAlign: "right"
                }).after('<span class="ui-spinner ui-widget"></span>').next(),
                z = c.btnContainer = j('<div class="ui-spinner-buttons"><div class="ui-spinner-up ui-spinner-button ui-state-default ui-corner-tr"><span class="ui-icon ' + f.upIconClass + '">&nbsp;</span></div><div class="ui-spinner-down ui-spinner-button ui-state-default ui-corner-br"><span class="ui-icon ' + f.downIconClass + '">&nbsp;</span></div></div>'),
                x, S, k, w, P, A, B, F, G, T = a[0].dir == "rtl";
            r && I.addClass(r);
            I.append(z.css({
                height: Q,
                left: -y - R,
                top: a.offset().top - I.offset().top + "px"
            }));
            k = c.buttons = z.find(".ui-spinner-button");
            k.css({
                width: y - (H ? k.outerWidth() - k.width() : 0),
                height: Q / 2 - (H ? k.outerHeight() - k.height() : 0)
            });
            x = k[0];
            S = k[1];
            r = k.find(".ui-icon");
            r.css({
                marginLeft: (k.innerWidth() - r.width()) / 2,
                marginTop: (k.innerHeight() - r.height()) / 2
            });
            z.width(k.outerWidth());
            n != "always" && z.css("opacity", 0);
            if (n == "hover" || n == "both") k.add(a).bind("mouseenter.uispinner", function() {
                i(function() {
                    A = true;
                    if (!c.focused || n == "hover") c.showButtons()
                })
            }).bind("mouseleave.uispinner", function() {
                i(function() {
                    A = false;
                    if (!c.focused || n == "hover") c.hideButtons()
                })
            });
            k.hover(function() {
                c.buttons.removeClass("ui-state-hover");
                f.disabled || j(this).addClass("ui-state-hover")
            }, function() {
                j(this).removeClass("ui-state-hover")
            }).mousedown(p).mouseup(q).mouseout(q);
            L && k.dblclick(function() {
                if (!f.disabled) {
                    c._change();
                    c._doSpin((this === x ? 1 : -1) * f.step)
                }
                return false
            }).bind("selectstart", function() {
                return false
            });
            a.bind("keydown.uispinner", function(e) {
                var h, m, o = e.keyCode;
                if (e.ctrl || e.alt) return true;
                if (d(o)) F = true;
                if (B) return false;
                switch (o) {
                    case C:
                    case u:
                        h = 1;
                        m = o == u;
                        break;
                    case D:
                    case v:
                        h = -1;
                        m = o == v;
                        break;
                    case t:
                    case E:
                        h = o == t ^ T ? 1 : -1;
                        break;
                    case J:
                        e = c.options.min;
                        e != null && c._setValue(e);
                        return false;
                    case K:
                        e = c.options.max;
                        e != null && c._setValue(e);
                        return false
                }
                if (h) {
                    if (!B && !f.disabled) {
                        keyDir = h;
                        j(h > 0 ? x : S).addClass(s);
                        B = true;
                        c._startSpin(h, m)
                    }
                    return false
                }
            }).bind("keyup.uispinner", function(e) {
                if (e.ctrl || e.alt) return true;
                if (d(l)) F = false;
                switch (e.keyCode) {
                    case C:
                    case t:
                    case u:
                    case D:
                    case E:
                    case v:
                        k.removeClass(s);
                        c._stopSpin();
                        return B = false
                }
            }).bind("keypress.uispinner", function(e) {
                if (g(e.keyCode,
                        e.charCode)) return false
            }).bind("change.uispinner", function() {
                c._change()
            }).bind("focus.uispinner", function() {
                function e() {
                    c.element.select()
                }
                L ? e() : setTimeout(e, 0);
                c.focused = true;
                O = c;
                if (!A && (n == "focus" || n == "both")) c.showButtons()
            }).bind("blur.uispinner", function() {
                c.focused = false;
                if (!A && (n == "focus" || n == "both")) c.hideButtons()
            })
        },
        _procOptions: function(a) {
            var b = this.element,
                d = this.options,
                g = d.min,
                i = d.max,
                p = d.step,
                q = d.places,
                c = -1,
                f;
            if (d.increment == "slow") d.increment = [{
                count: 1,
                mult: 1,
                delay: 250
            }, {
                count: 3,
                mult: 1,
                delay: 100
            }, {
                count: 0,
                mult: 1,
                delay: 50
            }];
            else if (d.increment == "fast") d.increment = [{
                count: 1,
                mult: 1,
                delay: 250
            }, {
                count: 19,
                mult: 1,
                delay: 100
            }, {
                count: 80,
                mult: 1,
                delay: 20
            }, {
                count: 100,
                mult: 10,
                delay: 20
            }, {
                count: 0,
                mult: 100,
                delay: 20
            }];
            if (g == null && (f = b.attr("min")) != null) g = parseFloat(f);
            if (i == null && (f = b.attr("max")) != null) i = parseFloat(f);
            if (!p && (f = b.attr("step")) != null)
                if (f != "any") {
                    p = parseFloat(f);
                    d.largeStep *= p
                }
            d.step = p = p || d.defaultStep;
            if (q == null && (f = p + "").indexOf(".") != -1) q = f.length - f.indexOf(".") - 1;
            this.places =
                q;
            if (i != null && g != null) {
                if (g > i) g = i;
                c = Math.max(Math.max(c, d.format(i, q, b).length), d.format(g, q, b).length)
            }
            if (a) this.inputMaxLength = b[0].maxLength;
            f = this.inputMaxLength;
            if (f > 0) {
                c = c > 0 ? Math.min(f, c) : f;
                f = Math.pow(10, c) - 1;
                if (i == null || i > f) i = f;
                f = -(f + 1) / 10 + 1;
                if (g == null || g < f) g = f
            }
            c > 0 && b.attr("maxlength", c);
            d.min = g;
            d.max = i;
            this._change();
            b.unbind(M + ".uispinner");
            d.mouseWheel && b.bind(M + ".uispinner", this._mouseWheel)
        },
        _mouseWheel: function(a) {
            var b = j.data(this, "spinner");
            if (!b.options.disabled && b.focused && O === b) {
                b._change();
                b._doSpin(((a.wheelDelta || -a.detail) > 0 ? 1 : -1) * b.options.step);
                return false
            }
        },
        _setTimer: function(a, b, d) {
            function g() {
                i._spin(b, d)
            }
            var i = this;
            i._stopSpin();
            i.timer = setInterval(g, a)
        },
        _stopSpin: function() {
            if (this.timer) {
                clearInterval(this.timer);
                this.timer = 0
            }
        },
        _startSpin: function(a, b) {
            var d = this.options.increment;
            this._change();
            this._doSpin(a * (b ? this.options.largeStep : this.options.step));
            if (d && d.length > 0) {
                this.incCounter = this.counter = 0;
                this._setTimer(d[0].delay, a, b)
            }
        },
        _spin: function(a, b) {
            var d = this.options.increment,
                g = d[this.incCounter];
            this._doSpin(a * g.mult * (b ? this.options.largeStep : this.options.step));
            this.counter++;
            if (this.counter > g.count && this.incCounter < d.length - 1) {
                this.counter = 0;
                g = d[++this.incCounter];
                this._setTimer(g.delay, a, b)
            }
        },
        _doSpin: function(a) {
            var b = this.curvalue;
            if (b == null) b = (a > 0 ? this.options.min : this.options.max) || 0;
            this._setValue(b + a)
        },
        _parseValue: function() {
            var a = this.element.val();
            return a ? this.options.parse(a, this.element) : null
        },
        _validate: function(a) {
            var b = this.options,
                d = b.min,
                g = b.max;
            if (a ==
                null && !b.allowNull) a = this.curvalue != null ? this.curvalue : d || g || 0;
            return g != null && a > g ? g : d != null && a < d ? d : a
        },
        _change: function() {
            var a = this._parseValue();
            if (!this.selfChange) {
                if (isNaN(a)) a = this.curvalue;
                this._setValue(a, true)
            }
        },
        _setOption: function(a, b) {
            j.Widget.prototype._setOption.call(this, a, b);
            this._procOptions()
        },
        increment: function() {
            this._doSpin(this.options.step)
        },
        decrement: function() {
            this._doSpin(-this.options.step)
        },
        showButtons: function(a) {
            var b = this.btnContainer.stop();
            a ? b.css("opacity", 1) : b.fadeTo("fast",
                1)
        },
        hideButtons: function(a) {
            var b = this.btnContainer.stop();
            a ? b.css("opacity", 0) : b.fadeTo("fast", 0);
            this.buttons.removeClass("ui-state-hover")
        },
        _setValue: function(a, b) {
            this.curvalue = a = this._validate(a);
            this.element.val(a != null ? this.options.format(a, this.places, this.element) : "");
            if (!b) {
                this.selfChange = true;
                this.element.change();
                this.selfChange = false
            }
        },
        value: function(a) {
            if (arguments.length) {
                this._setValue(a);
                return this.element
            }
            return this.curvalue
        },
        enable: function() {
            this.buttons.removeClass("ui-state-disabled");
            this.element[0].disabled = false;
            j.Widget.prototype.enable.call(this)
        },
        disable: function() {
            this.buttons.addClass("ui-state-disabled").removeClass("ui-state-hover");
            this.element[0].disabled = true;
            j.Widget.prototype.disable.call(this)
        },
        destroy: function() {
            this.wrapper.remove();
            this.element.unbind(".uispinner").css({
                width: this.oWidth,
                marginRight: this.oMargin
            });
            j.Widget.prototype.destroy.call(this)
        }
    })
})(jQuery);; /**/
/*! http://mths.be/placeholder v2.0.7 by @mathias */
;
(function(t, a, e) {
    var o = 'placeholder' in a.createElement('input'),
        i = 'placeholder' in a.createElement('textarea'),
        n = e.fn,
        u = e.valHooks,
        h = e.propHooks,
        r, l;
    if (o && i) {
        l = n.placeholder = function() {
            return this
        };
        l.input = l.textarea = !0
    } else {
        l = n.placeholder = function() {
            var e = this;
            e.filter((o ? 'textarea' : ':input') + '[placeholder]').not('.placeholder').bind({
                'focus.placeholder': d,
                'blur.placeholder': c
            }).data('placeholder-enabled', !0).trigger('blur.placeholder');
            return e
        };
        l.input = o;
        l.textarea = i;
        r = {
            'get': function(a) {
                var t = e(a),
                    l = t.data('placeholder-password');
                if (l) {
                    return l[0].value
                };
                return t.data('placeholder-enabled') && t.hasClass('placeholder') ? '' : a.value
            },
            'set': function(t, l) {
                var r = e(t),
                    o = r.data('placeholder-password');
                if (o) {
                    return o[0].value = l
                };
                if (!r.data('placeholder-enabled')) {
                    return t.value = l
                };
                if (l == '') {
                    t.value = l;
                    if (t != a.activeElement) {
                        c.call(t)
                    }
                } else if (r.hasClass('placeholder')) {
                    d.call(t, !0, l) || (t.value = l)
                } else {
                    t.value = l
                };
                return r
            }
        };
        if (!o) {
            u.input = r;
            h.value = r
        };
        if (!i) {
            u.textarea = r;
            h.value = r
        };
        e(function() {
            e(a).delegate('form', 'submit.placeholder', function() {
                var a = e('.placeholder', this).each(d);
                setTimeout(function() {
                    a.each(c)
                }, 10)
            })
        });
        e(t).bind('beforeunload.placeholder', function() {
            e('.placeholder').each(function() {
                this.value = ''
            })
        })
    };

    function p(a) {
        var t = {};
        var l = /^jQuery\d+$/;
        e.each(a.attributes, function(a, e) {
            if (e.specified && !l.test(e.name)) {
                t[e.name] = e.value
            }
        });
        return t
    };

    function d(l, o) {
        var r = this,
            t = e(r);
        if (r.value == t.attr('placeholder') && t.hasClass('placeholder')) {
            if (t.data('placeholder-password')) {
                t = t.hide().next().show().attr('id', t.removeAttr('id').data('placeholder-id'));
                if (l === !0) {
                    return t[0].value = o
                };
                t.focus()
            } else {
                r.value = '';
                t.removeClass('placeholder');
                r == a.activeElement && r.select()
            }
        }
    };

    function c() {
        var t, l = this,
            a = e(l),
            r = this.id;
        if (l.value == '') {
            if (l.type == 'password') {
                if (!a.data('placeholder-textinput')) {
                    try {
                        t = a.clone().attr({
                            'type': 'text'
                        })
                    } catch (o) {
                        t = e('<input>').attr(e.extend(p(this), {
                            'type': 'text'
                        }))
                    };
                    t.removeAttr('name').data({
                        'placeholder-password': a,
                        'placeholder-id': r
                    }).bind('focus.placeholder', d);
                    a.data({
                        'placeholder-textinput': t,
                        'placeholder-id': r
                    }).before(t)
                };
                a = a.removeAttr('id').hide().prev().attr('id', r).show()
            };
            a.addClass('placeholder');
            a[0].value = a.attr('placeholder')
        } else {
            a.removeClass('placeholder')
        }
    }
}(this, document, jQuery));;
jQuery.browser = {};
(function() {
    jQuery.browser.msie = !1;
    jQuery.browser.version = 0;
    if (navigator.userAgent.match(/MSIE ([0-9]+)\./)) {
        jQuery.browser.msie = !0;
        jQuery.browser.version = RegExp.$1
    }
})();
(function(e, o, t, i, s) {
    o.behaviors.search_form = {
        attach: function(o, t) {
            e('#search-link:not(.bf-processed), .right-menu-block .search-link:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function(o) {
                    o.preventDefault();
                    e('#edit-search-block-form--2').focus();
                    if (e('#block-search-form').hasClass('default_state')) {
                        e('#block-search-form').animate({
                            'margin-top': '-5px'
                        }, 500);
                        e('#block-search-form').addClass('show')
                    } else {
                        e('#block-search-form').animate({
                            'margin-top': '30px'
                        }, 500);
                        e('#block-search-form').addClass('show')
                    }
                })
            });
            e('.close_header_search:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function(o) {
                    e('#block-search-form').animate({
                        'margin-top': '-110px'
                    }, 500);
                    e('#block-search-form').removeClass('show')
                })
            })
        }
    };
    o.behaviors.inputNumberfgghdfgdf = {
        attach: function(o, t) {
            e('.input_number:not(.bf-processed)').each(function() {
                e('.input_number').addClass('bf-processed').spinner({
                    min: 1,
                    max: 100,
                    increment: 'fast'
                })
            })
        }
    };
    o.behaviors.faq_scroll = {
        attach: function(o, i) {
            e('.section-faq a[href*=#]:not([href=#])').on('click', function(o) {
                o.preventDefault();
                if (location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') && location.hostname == this.hostname) {
                    var i = e(this.hash),
                        s = this.hash;
                    i = i.length ? i : e('[name=' + this.hash.slice(1) + ']');
                    if (i.length) {
                        e('html,body').animate({
                            scrollTop: i.offset().top - e('.fixed-header-navigation').outerHeight()
                        }, 500, 'swing', function() {
                            t.location.hash = s
                        })
                    }
                }
            })
        }
    };
    o.behaviors.country_anchor = {
        attach: function(o, t) {
            e('.self_country_anchor:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function(o) {
                    o.preventDefault();
                    if (e('.node-country-page').length > 0) {
                        e('html,body').animate({
                            scrollTop: e('.node-country-page .beschikbaar-nummers').offset().top - 60
                        }, 'slow')
                    } else {
                        e('html,body').animate({
                            scrollTop: e('#ontdek-hoe').offset().top - 60
                        }, 'slow')
                    }
                })
            })
        }
    };
    o.behaviors.placeholder = {
        attach: function(o, t) {
            e('input').placeholder();
            e('textarea').placeholder();
            e('.section-contact input').placeholder();
            e('.section-contact textarea').placeholder();
            e('.section-artikelen input,.section-categorieen input').placeholder();
            e('.page-node-213.section-samenwerken input, .page-node-213.section-samenwerkene textarea').placeholder();
            e('input').focus(function() {
                if (e(this).attr('placeholder') != '') {
                    e(this).attr('default_value', e(this).attr('placeholder'))
                };
                e(this).attr('placeholder', '')
            });
            e('input').blur(function() {
                if (e(this).val() == '') {
                    e(this).attr('placeholder', e(this).attr('default_value'))
                }
            });
            e('textarea').focus(function() {
                if (e(this).attr('placeholder') != '') {
                    e(this).attr('default_value', e(this).attr('placeholder'))
                };
                e(this).attr('placeholder', '')
            });
            e('textarea').blur(function() {
                if (e(this).val() == '') {
                    e(this).attr('placeholder', e(this).attr('default_value'))
                }
            })
        }
    };
    o.behaviors.inputValue = {
        attach: function(o, t) {
            e('.form-text.error, .form-textarea.error').focus(function() {
                e(this).removeClass('error')
            })
        }
    };
    o.behaviors.signature_besteloverzicht = {
        attach: function(o, t) {
            e('.pad:not(.bf-processed)').each(function() {
                e('.pad, .signature label').mousedown('click', function() {
                    e('.signature label').hide();
                    e('.pad.error').removeClass('error')
                })
            })
        }
    };
    o.behaviors.number_over = {
        attach: function(o, t) {
            e('.number_over:not(.bf-processed)').each(function() {
                e('.number_over').click(function() {
                    e(this).addClass('disabled');
                    e('#edit-number').focus()
                });
                e('#numbershop-search-product-form').focusout(function() {
                    var o = e('#edit-number').val(),
                        t = e('.number_over .number_word').text();
                    if (!o) {
                        e('.number_over').removeClass('disabled')
                    };
                    if (o == t) {
                        e('.number_over').removeClass('disabled')
                    }
                })
            })
        }
    };
    o.behaviors.mailchimp_showing = {
        attach: function(o, t) {
            if (e('.form-item-mergevars-EMAIL input').hasClass('error')) {
                e('#block-belfabriek-helper-subcribe-artikelens .artikelens_subscribe .artikelen-subscribe span').addClass('subcribe_open');
                e('.block-mailchimp-signup').show()
            };
            e('a.artikelen-subscribe').on('click', function(e) {
                e.preventDefault()
            });
            e('#block-belfabriek-helper-subcribe-artikelens .artikelens_subscribe .artikelen-subscribe:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function() {
                    e('#block-belfabriek-helper-subcribe-artikelens .artikelens_subscribe .artikelen-subscribe span').toggleClass('subcribe_open');
                    e('.block-mailchimp-signup').toggle()
                })
            });
            e('.scroll_popup_sb .form-submit').each(function() {
                e(this).addClass('bf-processed').click(function(o) {
                    var t = e('.scroll_popup_sb .form-text').val()
                })
            })
        }
    };
    o.behaviors.voorbelden_filter = {
        attach: function(o) {
            e('#edit-field-category-voorbelden-tid input').each(function() {
                if (e(this).is(':checked')) {
                    e(this).next().addClass('active_option')
                }
            })
        }
    };
    o.behaviors.mailchimp_subscription_popupclose = {
        attach: function(o, t) {
            e('.close_lightbox_button:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function() {
                    e('.time_popup_sb').hide();
                    e('#back_popup').hide()
                })
            });
            e('.close_lightbox_scroll:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function() {
                    e('.scroll_popup_sb').animate({
                        'right': '-750px'
                    }, 500)
                })
            });
            e('#back_popup:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').click(function() {
                    e('.time_popup_sb').hide();
                    e('#back_popup').hide()
                })
            })
        }
    };
    o.behaviors.mailchimp_fadeOut = {
        attach: function(o, t) {
            if (e('.scroll_popup_sb, .time_popup_sb').length > 0) {
                e('.scroll_popup_sb:not(.bf-process), .time_popup_sb:not(.bf-process)').each(function() {
                    e(this).addClass('bf-process').find('input[type=text]').keypress(function(o) {
                        var t = o.which;
                        if (t == 13) {
                            o.preventDefault();
                            e('.scroll_popup_sb .form-submit, .time_popup_sb .form-submit').trigger('click')
                        }
                    });
                    e(this).addClass('bf-process').ajaxSuccess(function() {
                        if (e('.scroll_popup_sb .webform-confirmation, .time_popup_sb .webform-confirmation').length > 0) {}
                    })
                })
            }
        }
    };
    o.behaviors.download_serivice_universal_analytics = {
        attach: function(o, t) {
            e('.download_service:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').on('click', function() {
                    ga('send', 'event', 'ebooks', 'download', 'Haal meer uit uw servicenummer')
                })
            })
        }
    };
    o.behaviors.download_ebook = {
        attach: function(o, t) {
            e('.front .download_link_wrapper .green_button:not(.bf-processed)').each(function() {
                e(this).addClass('bf-processed').on('click', function() {
                    ga('send', 'event', 'ebooks', 'download', 'Beginnen met Servicenummers')
                })
            })
        }
    };
    e(t).load(function() {
        if (e('.background_image_wrapper').length > 0) {
            e('.background_image_wrapper').waitForImages(function() {
                e(this).css({
                    opacity: 0.0,
                    visibility: 'visible'
                }).animate({
                    opacity: 1.0
                })
            })
        }
    });
    e(i).ready(function() {
        if (e('.section-compare-servicenumber-types').length > 0) {
            e('.arrow_box').each(function() {
                e(this).css('top', -e(this).outerHeight() / 2 + 10)
            })
        };
        if (e('#edit-footer-prefix').length > 0) {
            e('#edit-footer-prefix').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#first').length > 0) {
            e('#first').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#edit-laand').length > 0) {
            e('#edit-laand').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#edit-factur-laand').length > 0) {
            e('#edit-factur-laand').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#edit-betaling-per').length > 0) {
            e('#edit-betaling-per').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#edit-prefix').length > 0) {
            e('#edit-prefix').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#edit-prefix--2').length > 0) {
            e('#edit-prefix--2').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#edit-prefix--3').length > 0) {
            e('#edit-prefix--3').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#edit-geographical-area').length > 0) {
            e('#edit-geographical-area').dropkick();
            e('#dk_options_inner li').removeClass('dk_option_current')
        };
        if (e('#mailchimp-newsletter-blijf_op_de_hoogte_ .messages-inline-error').length > 0) {
            e('#block-mailchimp-lists-blijf-op-de-hoogte-').show()
        };
        var s = !1;
        if (e('#block-webform-client-block-53 .messages-inline-error').length > 0) {
            s = !0;
            e(t).scrollTop(959)
        };
        if (e('#block-webform-client-block-185 .messages-inline-error').length > 0) {
            s = !0;
            e(t).scrollTop(959)
        };
        if (e('.error').length > 0) {
            if (!s) {
                e('html, body').animate({
                    scrollTop: e('.error').offset().top - 140
                }, 500)
            }
        };
        e('.number_blocks .header').click(function() {
            e(this).toggleClass('show')
        });
        if (e('.product_blocks_container #block-numbershop-shopping-cart').length > 0) {
            e(t).scroll(function() {
                var s = e('.product_blocks_container .field-name-field-product-block').offset().top,
                    o = e('.field-name-field-product-block').height(),
                    i = e('#block-numbershop-shopping-cart').height(),
                    a = s - 150,
                    n = s + o - i - 285;
                if (o > i) {
                    if (e(t).scrollTop() > a) {
                        e('#block-numbershop-shopping-cart').addClass('fixed');
                        e('#block-numbershop-shopping-cart').css('margin-top', '')
                    };
                    if (e(t).scrollTop() > n) {
                        e('#block-numbershop-shopping-cart').removeClass('fixed');
                        e('#block-numbershop-shopping-cart').css('margin-top', o - i - 135)
                    };
                    if (e(t).scrollTop() < a) {
                        e('#block-numbershop-shopping-cart').removeClass('fixed');
                        e('#block-numbershop-shopping-cart').css('margin-top', '')
                    }
                }
            })
        };
        if (e('#block-numbershop-numbershop-search-result #block-numbershop-shopping-cart').length > 0) {
            e(t).scroll(function() {
                var a = e('header.header').height(),
                    n = e('.search_result_header').height(),
                    r = e('.search_result_invalid').height(),
                    c = e('.search_result_numbers').height(),
                    l = e('.search_result .product_blocks_container').height(),
                    p = e('.available_numbers.total_block').height(),
                    i = 0,
                    s = 0,
                    o = 0;
                if (e('.tabs-primary.tabs.primary').length > 0) {
                    i = e('.tabs-primary.tabs.primary').height() + 60;
                    s = 65
                };
                if (e('.logged-in').length > 0) {
                    o = 8
                };
                add_class = a + n - 70 + i - o, remove_class = add_class + c + l + r + 600 - p + s - o;
                if (e(t).scrollTop() > add_class) {
                    e('#block-numbershop-shopping-cart .available_numbers.total_block').addClass('search_result_cart_fixed_animation');
                    e('#block-numbershop-shopping-cart .available_numbers.total_block').css('margin-top', '')
                };
                if (e(t).scrollTop() > remove_class) {
                    e('#block-numbershop-shopping-cart .available_numbers.total_block').removeClass('search_result_cart_fixed_animation');
                    e('#block-numbershop-shopping-cart .available_numbers.total_block').css('margin-top', remove_class - add_class)
                };
                if (e(t).scrollTop() < add_class) {
                    e('#block-numbershop-shopping-cart .available_numbers.total_block').removeClass('search_result_cart_fixed_animation');
                    e('#block-numbershop-shopping-cart .available_numbers.total_block').css('margin-top', '')
                }
            })
        };
        if (e('#info-ballon-contractgegevens-page').length > 0) {
            e(t).scroll(function() {
                var s = e('header.header').height(),
                    a = e('#main .content_header_wrapper').height(),
                    n = e('#main .navigation_header').height(),
                    r = e('#info-ballon-contractgegevens-page').height(),
                    c = e('#callfactory-numbershop-checkout-your-detail-form').height(),
                    o = s + a + n - 60,
                    i = o + c - r - 20;
                if (e(t).scrollTop() > o) {
                    e('#info-ballon-contractgegevens-page').addClass('fixed');
                    e('#info-ballon-contractgegevens-page').css('margin-top', '')
                };
                if (e(t).scrollTop() > i) {
                    e('#info-ballon-contractgegevens-page').removeClass('fixed');
                    e('#info-ballon-contractgegevens-page').css('margin-top', i - o)
                };
                if (e(t).scrollTop() < o) {
                    e('#info-ballon-contractgegevens-page').removeClass('fixed');
                    e('#info-ballon-contractgegevens-page').css('margin-top', '')
                }
            })
        };
        if (e('#quicktabs-belfabriek_mobile_content_blocks').length > 0) {
            if ((t.location.hash != '') && (t.location.hash == ('#' + o.t('employee')))) {
                e('#quicktabs-tab-belfabriek_mobile_content_blocks-1').trigger('click')
            } else {
                t.location.hash = 'vip';
                e('#quicktabs-tab-belfabriek_mobile_content_blocks-0').trigger('click')
            }
        };

        function n() {
            if (e('.node-type-artikelen').length > 0) {
                if (!e('.scroll_popup_sb').is(':visible')) {
                    var i = e.cookie('artikelen_subscription');
                    if (!i) {
                        e('.time_popup_sb').fadeIn('slow');
                        e('#back_popup').fadeIn('slow', function() {
                            e(this).show()
                        });
                        var o = new Date(),
                            t = 60;
                        o.setTime(o.getTime() + (t * 60 * 1000));
                        e.cookie('artikelen_subscription', 1, {
                            expires: o
                        });
                        ga('send', 'event', 'mailing_invite', 'overlay_invite')
                    }
                }
            }
        };
        setTimeout(n, 3000);

        function r() {
            return typeof t.pageYOffset != 'undefined' ? t.pageYOffset : i.documentElement.scrollTop ? i.documentElement.scrollTop : i.body.scrollTop ? i.body.scrollTop : 0
        };

        function c() {
            return i.body.scrollTop || i.documentElement.scrollTop || t.pageYOffset || 0
        };
        e(t).scroll(function() {
            var s = i.body.scrollTop || i.documentElement.scrollTop || t.pageYOffset || 0;
            if (s > 800 && s < 910) {
                if (e('.node-type-artikelen').length > 0) {
                    if (!e('.time_popup_sb').is(':visible')) {
                        var n = e.cookie('artikelen_subscription');
                        if (!n) {
                            e('.scroll_popup_sb').fadeIn('slow');
                            var o = new Date(),
                                a = 60;
                            o.setTime(o.getTime() + (a * 60 * 1000));
                            e.cookie('artikelen_subscription', 1, {
                                expires: o
                            });
                            e('.scroll_popup_sb').addClass('show').animate({
                                'right': '0'
                            }, 500);
                            ga('send', 'event', 'mailing_invite', 'overlay_invite')
                        } else {}
                    }
                }
            }
        });
        var a = e('#shop-cart span').html();
        if (a !== null) {
            e('.right-menu-block li.cart a').html('<span>' + a + '</span>')
        }
    });
    o.behaviors.new_mobile_menu = {
        attach: function(o, t) {
            e('.fixed-header-navigation .region-header-navigation').on('click', function(o) {
                o.preventDefault;
                o.stopPropagation;
                e(this).toggleClass('open')
            })
        }
    };
    o.behaviors.hash_mobile_page = {
        attach: function(i, s) {
            e('#quicktabs-tab-belfabriek_mobile_content_blocks-1').click(function() {
                t.location.hash = o.t('employee')
            });
            e('#quicktabs-tab-belfabriek_mobile_content_blocks-0').click(function() {
                t.location.hash = 'vip'
            })
        }
    };
    o.behaviors.header_scroll = {
        attach: function(o, i) {
            e(t).scroll(function() {
                var o = 140;
                if (e(t).scrollTop() > o) {
                    e('.fixed-header-navigation').addClass('menu-fixed')
                } else {
                    e('.fixed-header-navigation').removeClass('menu-fixed')
                }
            })
        }
    }
})(jQuery, Drupal, this, this.document);
/*!
 * jQuery Cookie Plugin v1.4.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2013 Klaus Hartl
 * Released under the MIT license
 */
(function(e) {
    if (typeof define === 'function' && define.amd) {
        define(['jquery'], e)
    } else if (typeof exports === 'object') {
        e(require('jquery'))
    } else {
        e(jQuery)
    }
}(function(e) {
    var o = /\+/g;

    function i(e) {
        return n.raw ? e : encodeURIComponent(e)
    };

    function t(e) {
        return n.raw ? e : decodeURIComponent(e)
    };

    function u(e) {
        return i(n.json ? JSON.stringify(e) : String(e))
    };

    function c(e) {
        if (e.indexOf('"') === 0) {
            e = e.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\')
        };
        try {
            e = decodeURIComponent(e.replace(o, ' '));
            return n.json ? JSON.parse(e) : e
        } catch (i) {}
    };

    function r(i, r) {
        var o = n.raw ? i : c(i);
        return e.isFunction(r) ? r(o) : o
    };
    var n = e.cookie = function(o, f, c) {
        if (f !== undefined && !e.isFunction(f)) {
            c = e.extend({}, n.defaults, c);
            if (typeof c.expires === 'number') {
                var v = c.expires,
                    x = c.expires = new Date();
                x.setTime(+x + v * 864e+5)
            };
            return (document.cookie = [i(o), '=', u(f), c.expires ? '; expires=' + c.expires.toUTCString() : '', c.path ? '; path=' + c.path : '', c.domain ? '; domain=' + c.domain : '', c.secure ? '; secure' : ''].join(''))
        };
        var s = o ? undefined : {};
        var l = document.cookie ? document.cookie.split('; ') : [];
        for (var a = 0, k = l.length; a < k; a++) {
            var p = l[a].split('='),
                m = t(p.shift()),
                d = p.join('=');
            if (o && o === m) {
                s = r(d, f);
                break
            };
            if (!o && (d = r(d)) !== undefined) {
                s[m] = d
            }
        };
        return s
    };
    n.defaults = {};
    e.removeCookie = function(n, i) {
        if (e.cookie(n) === undefined) {
            return !1
        };
        e.cookie(n, '', e.extend({}, i, {
            expires: -1
        }));
        return !e.cookie(n)
    }
}));
(function(t) {
    Drupal.cartInitialize = function() {
        if (t('#block-callfactory-numbershop-cart-shopping-cart').length > 0) {
            var a = t('#block-callfactory-numbershop-cart-shopping-cart'),
                s = a.outerHeight(),
                o = 100,
                r = 10,
                e = 0,
                i = 0,
                c = t('.numberblock_shop').offset().top,
                l = t('.numberblock_shop').height(),
                n = t('.numberblock_shop');
            if (t('.number_blocks .meer_nummers_tonen').length) {
                r = 44
            };
            if (t('.search_result_header').length > 0) {
                e = t('.search_result_cart_wrapper').offset().top + 1
            };
            Drupal.settings.numbershop_cart = {
                'cart': t('.field-name-field-product-block-right .block-callfactory-numbershop-cart'),
                'header_height': t('header.header').height(),
                'product_blocks_container': t('.product_blocks_container').height(),
                'number_block_height': l,
                'search_cart': a,
                'search_result_start_point': e,
                'cart_height': s,
                'add_class': e - o,
                'stop_cart_point': n.offset().top + n.height(),
                'top_cart': c - 100,
                'cart_footer_total_height': r,
                'no_numbers_offset': i,
                'bottom_cart': c + l - s - o - r
            };
            if (Drupal.settings.numbershop_cart.number_block_height > Drupal.settings.numbershop_cart.cart_height) {
                if (Drupal.settings.numbershop_cart.cart.children('.total_block').hasClass('relative')) {
                    Drupal.settings.numbershop_cart.cart.children('.total_block').removeClass('relative')
                }
            } else {
                Drupal.settings.numbershop_cart.cart.children('.total_block').addClass('relative')
            }
        }
    };
    Drupal.cartRefresh = function() {
        if (Drupal.settings.numbershop_cart.number_block_height > Drupal.settings.numbershop_cart.cart_height) {
            if (Drupal.settings.numbershop_cart.cart.children('.total_block').hasClass('relative')) {
                Drupal.settings.numbershop_cart.cart.children('.total_block').removeClass('relative')
            }
        } else {
            Drupal.settings.numbershop_cart.cart.children('.total_block').addClass('relative')
        }
    };

    function r() {
        if (t('.search_result_cart_wrapper #block-callfactory-numbershop-cart-shopping-cart')[0]) {
            Drupal.settings.numbershop_cart.cart.hide();
            if (t(window).scrollTop() > Drupal.settings.numbershop_cart.add_class) {
                Drupal.settings.numbershop_cart.search_cart.addClass('search_result_cart_fixed_animation');
                Drupal.settings.numbershop_cart.search_cart.removeAttr('style')
            };
            if (t(window).scrollTop() > Drupal.settings.numbershop_cart.bottom_cart) {
                Drupal.settings.numbershop_cart.search_cart.removeClass('search_result_cart_fixed_animation');
                Drupal.settings.numbershop_cart.search_cart.css({
                    'position': 'absolute',
                    'top': Drupal.settings.numbershop_cart.stop_cart_point + Drupal.settings.numbershop_cart.no_numbers_offset - t('.search_result_cart_wrapper').offset().top - Drupal.settings.numbershop_cart.cart_height - Drupal.settings.numbershop_cart.cart_footer_total_height
                })
            };
            if (t(window).scrollTop() < Drupal.settings.numbershop_cart.add_class) {
                Drupal.settings.numbershop_cart.search_cart.removeClass('search_result_cart_fixed_animation');
                Drupal.settings.numbershop_cart.search_cart.removeAttr('style')
            }
        } else {
            if ((Drupal.settings.numbershop_cart.number_block_height - Drupal.settings.numbershop_cart.cart_footer_total_height) > Drupal.settings.numbershop_cart.cart_height) {
                if (t(window).scrollTop() > Drupal.settings.numbershop_cart.top_cart) {
                    Drupal.settings.numbershop_cart.cart.addClass('fixed');
                    Drupal.settings.numbershop_cart.cart.removeAttr('style')
                };
                if (t(window).scrollTop() <= Drupal.settings.numbershop_cart.top_cart) {
                    Drupal.settings.numbershop_cart.cart.removeClass('fixed');
                    Drupal.settings.numbershop_cart.cart.removeAttr('style')
                };
                if (t(window).scrollTop() > Drupal.settings.numbershop_cart.bottom_cart) {
                    Drupal.settings.numbershop_cart.cart.removeClass('fixed');
                    Drupal.settings.numbershop_cart.cart.css('margin-top', Drupal.settings.numbershop_cart.number_block_height - Drupal.settings.numbershop_cart.cart_height - Drupal.settings.numbershop_cart.cart_footer_total_height)
                }
            } else {
                Drupal.settings.numbershop_cart.cart.children('.total_block').addClass('relative')
            }
        }
    };
    t(window).load(function() {
        Drupal.cartInitialize();
        if (Drupal.settings.numbershop_cart != undefined) {
            r();
            t(window).scroll(function() {
                Drupal.cartInitialize();
                r()
            })
        }
    })
})(jQuery);